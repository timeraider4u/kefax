/*
 * generated by Xtext
 */
package at.jku.isse.ecco.kefax.kbuild.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import at.jku.isse.ecco.kefax.kbuild.services.KbuildGrammarAccess;

public class KbuildParser extends AbstractContentAssistParser {
	
	@Inject
	private KbuildGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected at.jku.isse.ecco.kefax.kbuild.ui.contentassist.antlr.internal.InternalKbuildParser createParser() {
		at.jku.isse.ecco.kefax.kbuild.ui.contentassist.antlr.internal.InternalKbuildParser result = new at.jku.isse.ecco.kefax.kbuild.ui.contentassist.antlr.internal.InternalKbuildParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getBuildEntryAccess().getAlternatives(), "rule__BuildEntry__Alternatives");
					put(grammarAccess.getBuildEntryAccess().getAlternatives_3_4(), "rule__BuildEntry__Alternatives_3_4");
					put(grammarAccess.getBuildEntryAccess().getAlternatives_5_1(), "rule__BuildEntry__Alternatives_5_1");
					put(grammarAccess.getBuildEntryAccess().getAlternatives_6_3(), "rule__BuildEntry__Alternatives_6_3");
					put(grammarAccess.getIfAccess().getAlternatives_1(), "rule__If__Alternatives_1");
					put(grammarAccess.getIfAccess().getAlternatives_1_0_2(), "rule__If__Alternatives_1_0_2");
					put(grammarAccess.getIfAccess().getAlternatives_5(), "rule__If__Alternatives_5");
					put(grammarAccess.getIfAccess().getAlternatives_7_3(), "rule__If__Alternatives_7_3");
					put(grammarAccess.getAssignExtraAccess().getAlternatives_1(), "rule__AssignExtra__Alternatives_1");
					put(grammarAccess.getValueAccess().getAlternatives(), "rule__Value__Alternatives");
					put(grammarAccess.getVariableAccess().getAlternatives(), "rule__Variable__Alternatives");
					put(grammarAccess.getShellCmdAccess().getAlternatives(), "rule__ShellCmd__Alternatives");
					put(grammarAccess.getShellPartAccess().getAlternatives_1(), "rule__ShellPart__Alternatives_1");
					put(grammarAccess.getVarSlashSymAccess().getAlternatives(), "rule__VarSlashSym__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getModelAccess().getGroup_2(), "rule__Model__Group_2__0");
					put(grammarAccess.getBuildEntryAccess().getGroup_0(), "rule__BuildEntry__Group_0__0");
					put(grammarAccess.getBuildEntryAccess().getGroup_1(), "rule__BuildEntry__Group_1__0");
					put(grammarAccess.getBuildEntryAccess().getGroup_2(), "rule__BuildEntry__Group_2__0");
					put(grammarAccess.getBuildEntryAccess().getGroup_3(), "rule__BuildEntry__Group_3__0");
					put(grammarAccess.getBuildEntryAccess().getGroup_4(), "rule__BuildEntry__Group_4__0");
					put(grammarAccess.getBuildEntryAccess().getGroup_5(), "rule__BuildEntry__Group_5__0");
					put(grammarAccess.getBuildEntryAccess().getGroup_6(), "rule__BuildEntry__Group_6__0");
					put(grammarAccess.getBuildEntryAccess().getGroup_6_3_1(), "rule__BuildEntry__Group_6_3_1__0");
					put(grammarAccess.getBuildEntryAccess().getGroup_6_3_1_1(), "rule__BuildEntry__Group_6_3_1_1__0");
					put(grammarAccess.getBuildEntryAccess().getGroup_7(), "rule__BuildEntry__Group_7__0");
					put(grammarAccess.getEntryAccess().getGroup(), "rule__Entry__Group__0");
					put(grammarAccess.getIfAccess().getGroup(), "rule__If__Group__0");
					put(grammarAccess.getIfAccess().getGroup_1_0(), "rule__If__Group_1_0__0");
					put(grammarAccess.getIfAccess().getGroup_1_1(), "rule__If__Group_1_1__0");
					put(grammarAccess.getIfAccess().getGroup_7(), "rule__If__Group_7__0");
					put(grammarAccess.getObject_YAccess().getGroup(), "rule__Object_Y__Group__0");
					put(grammarAccess.getObject_MAccess().getGroup(), "rule__Object_M__Group__0");
					put(grammarAccess.getAssignAccess().getGroup(), "rule__Assign__Group__0");
					put(grammarAccess.getAssignExtraAccess().getGroup(), "rule__AssignExtra__Group__0");
					put(grammarAccess.getValuesAccess().getGroup(), "rule__Values__Group__0");
					put(grammarAccess.getValuesAccess().getGroup_0(), "rule__Values__Group_0__0");
					put(grammarAccess.getValuesAccess().getGroup_2(), "rule__Values__Group_2__0");
					put(grammarAccess.getValueAccess().getGroup_0(), "rule__Value__Group_0__0");
					put(grammarAccess.getValueAccess().getGroup_1(), "rule__Value__Group_1__0");
					put(grammarAccess.getValueAccess().getGroup_2(), "rule__Value__Group_2__0");
					put(grammarAccess.getValueAccess().getGroup_3(), "rule__Value__Group_3__0");
					put(grammarAccess.getValueAccess().getGroup_4(), "rule__Value__Group_4__0");
					put(grammarAccess.getValueAccess().getGroup_5(), "rule__Value__Group_5__0");
					put(grammarAccess.getValueAccess().getGroup_6(), "rule__Value__Group_6__0");
					put(grammarAccess.getVariableAccess().getGroup_0(), "rule__Variable__Group_0__0");
					put(grammarAccess.getVariableAccess().getGroup_1(), "rule__Variable__Group_1__0");
					put(grammarAccess.getShellCmdAccess().getGroup_0(), "rule__ShellCmd__Group_0__0");
					put(grammarAccess.getShellCmdAccess().getGroup_0_1(), "rule__ShellCmd__Group_0_1__0");
					put(grammarAccess.getShellCmdAccess().getGroup_1(), "rule__ShellCmd__Group_1__0");
					put(grammarAccess.getShellPartAccess().getGroup(), "rule__ShellPart__Group__0");
					put(grammarAccess.getShellPartAccess().getGroup_1_5(), "rule__ShellPart__Group_1_5__0");
					put(grammarAccess.getModelAccess().getBuildEntryAssignment_1(), "rule__Model__BuildEntryAssignment_1");
					put(grammarAccess.getModelAccess().getBuildEntryAssignment_2_1(), "rule__Model__BuildEntryAssignment_2_1");
					put(grammarAccess.getBuildEntryAccess().getValueAssignment_0_1(), "rule__BuildEntry__ValueAssignment_0_1");
					put(grammarAccess.getBuildEntryAccess().getValueAssignment_1_2(), "rule__BuildEntry__ValueAssignment_1_2");
					put(grammarAccess.getBuildEntryAccess().getValueAssignment_2_2(), "rule__BuildEntry__ValueAssignment_2_2");
					put(grammarAccess.getBuildEntryAccess().getNameAssignment_3_2(), "rule__BuildEntry__NameAssignment_3_2");
					put(grammarAccess.getBuildEntryAccess().getValueAssignment_3_4_0(), "rule__BuildEntry__ValueAssignment_3_4_0");
					put(grammarAccess.getBuildEntryAccess().getValueAssignment_3_4_1(), "rule__BuildEntry__ValueAssignment_3_4_1");
					put(grammarAccess.getBuildEntryAccess().getNameAssignment_4_1(), "rule__BuildEntry__NameAssignment_4_1");
					put(grammarAccess.getBuildEntryAccess().getVariableAssignment_4_2(), "rule__BuildEntry__VariableAssignment_4_2");
					put(grammarAccess.getBuildEntryAccess().getValueAssignment_4_3(), "rule__BuildEntry__ValueAssignment_4_3");
					put(grammarAccess.getBuildEntryAccess().getInnerAssignment_4_4(), "rule__BuildEntry__InnerAssignment_4_4");
					put(grammarAccess.getBuildEntryAccess().getValueAssignment_5_1_0(), "rule__BuildEntry__ValueAssignment_5_1_0");
					put(grammarAccess.getBuildEntryAccess().getValueAssignment_5_1_1(), "rule__BuildEntry__ValueAssignment_5_1_1");
					put(grammarAccess.getBuildEntryAccess().getTargetAssignment_6_1(), "rule__BuildEntry__TargetAssignment_6_1");
					put(grammarAccess.getBuildEntryAccess().getValuesAssignment_6_3_1_0(), "rule__BuildEntry__ValuesAssignment_6_3_1_0");
					put(grammarAccess.getBuildEntryAccess().getValuesAssignment_6_3_1_1_2(), "rule__BuildEntry__ValuesAssignment_6_3_1_1_2");
					put(grammarAccess.getBuildEntryAccess().getNameAssignment_7_1(), "rule__BuildEntry__NameAssignment_7_1");
					put(grammarAccess.getBuildEntryAccess().getVariableAssignment_7_2(), "rule__BuildEntry__VariableAssignment_7_2");
					put(grammarAccess.getBuildEntryAccess().getValueAssignment_7_3(), "rule__BuildEntry__ValueAssignment_7_3");
					put(grammarAccess.getEntryAccess().getVariableAssignment_2(), "rule__Entry__VariableAssignment_2");
					put(grammarAccess.getEntryAccess().getValueAssignment_3(), "rule__Entry__ValueAssignment_3");
					put(grammarAccess.getIfAccess().getShellAssignment_1_1_0(), "rule__If__ShellAssignment_1_1_0");
					put(grammarAccess.getIfAccess().getValueAssignment_5_0(), "rule__If__ValueAssignment_5_0");
					put(grammarAccess.getIfAccess().getValueAssignment_5_1(), "rule__If__ValueAssignment_5_1");
					put(grammarAccess.getIfAccess().getValueAssignment_5_2(), "rule__If__ValueAssignment_5_2");
					put(grammarAccess.getIfAccess().getValueAssignment_5_3(), "rule__If__ValueAssignment_5_3");
					put(grammarAccess.getIfAccess().getElsevalueAssignment_7_3_0(), "rule__If__ElsevalueAssignment_7_3_0");
					put(grammarAccess.getIfAccess().getElsevalueAssignment_7_3_1(), "rule__If__ElsevalueAssignment_7_3_1");
					put(grammarAccess.getObject_YAccess().getValueAssignment_2(), "rule__Object_Y__ValueAssignment_2");
					put(grammarAccess.getObject_MAccess().getValueAssignment_2(), "rule__Object_M__ValueAssignment_2");
					put(grammarAccess.getValuesAccess().getValuesAssignment_1(), "rule__Values__ValuesAssignment_1");
					put(grammarAccess.getValuesAccess().getValuesAssignment_2_3(), "rule__Values__ValuesAssignment_2_3");
					put(grammarAccess.getValueAccess().getNameAssignment_1_1(), "rule__Value__NameAssignment_1_1");
					put(grammarAccess.getValueAccess().getValueAssignment_2_1(), "rule__Value__ValueAssignment_2_1");
					put(grammarAccess.getValueAccess().getAdditionalAssignment_2_2(), "rule__Value__AdditionalAssignment_2_2");
					put(grammarAccess.getValueAccess().getValueAssignment_3_1(), "rule__Value__ValueAssignment_3_1");
					put(grammarAccess.getValueAccess().getValueAssignment_5_1(), "rule__Value__ValueAssignment_5_1");
					put(grammarAccess.getVariableAccess().getNameAssignment_0_2(), "rule__Variable__NameAssignment_0_2");
					put(grammarAccess.getVariableAccess().getNameAssignment_1_2(), "rule__Variable__NameAssignment_1_2");
					put(grammarAccess.getShellCmdAccess().getNameAssignment_0_1_2(), "rule__ShellCmd__NameAssignment_0_1_2");
					put(grammarAccess.getShellCmdAccess().getShellPartAssignment_0_1_3(), "rule__ShellCmd__ShellPartAssignment_0_1_3");
					put(grammarAccess.getShellPartAccess().getValAssignment_1_0(), "rule__ShellPart__ValAssignment_1_0");
					put(grammarAccess.getShellPartAccess().getCmdAssignment_1_1(), "rule__ShellPart__CmdAssignment_1_1");
					put(grammarAccess.getVarSlashSymAccess().getNameAssignment_1(), "rule__VarSlashSym__NameAssignment_1");
					put(grammarAccess.getVarSlashSymAccess().getNameAssignment_2(), "rule__VarSlashSym__NameAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			at.jku.isse.ecco.kefax.kbuild.ui.contentassist.antlr.internal.InternalKbuildParser typedParser = (at.jku.isse.ecco.kefax.kbuild.ui.contentassist.antlr.internal.InternalKbuildParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WSS", "RULE_SL_COMMENT" };
	}
	
	public KbuildGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(KbuildGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
