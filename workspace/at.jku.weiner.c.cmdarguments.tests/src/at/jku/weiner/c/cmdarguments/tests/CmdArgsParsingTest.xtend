/*
 * generated by Xtext 2.9.0-SNAPSHOT
 */
package at.jku.weiner.c.cmdarguments.tests

import at.jku.weiner.c.cmdarguments.cmdArgs.Model
import com.google.inject.Inject
import org.eclipse.xtext.junit4.InjectWith
import org.eclipse.xtext.junit4.XtextRunner
import org.eclipse.xtext.junit4.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith
import org.eclipse.xtext.junit4.validation.ValidationTestHelper
import org.eclipse.emf.common.util.EList
import at.jku.weiner.c.cmdarguments.cmdArgs.Argument

@RunWith(XtextRunner)
@InjectWith(CmdArgsInjectorProvider)
class CmdArgsParsingTest{

	@Inject
	ParseHelper<Model> parseHelper;
	@Inject
	private ValidationTestHelper valHelper;

	@Test 
	def void loadModel() {
		val result = parseHelper.parse('''
			-D__KERNEL__
			-Iinclude2
		''')
		valHelper.assertNoErrors(result);
		Assert.assertNotNull(result);
		val Model model = result as Model;
		val EList<Argument> list = model.arguments;
		Assert.assertNotNull(list);
		Assert.assertFalse(list.isEmpty());
		val Argument arg0 = list.get(0);
		Assert.assertNotNull(arg0);
		Assert.assertEquals("__KERNEL__", arg0.name);
		val Argument arg1 = list.get(1);
		Assert.assertNotNull(arg1);
		Assert.assertEquals("include2", arg1.dir);
	}

}
