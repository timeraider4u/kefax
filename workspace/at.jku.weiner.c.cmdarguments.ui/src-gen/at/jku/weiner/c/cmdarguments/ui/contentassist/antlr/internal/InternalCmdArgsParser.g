/*
 * generated by Xtext 2.9.0-SNAPSHOT
 */
parser grammar InternalCmdArgsParser;

options {
	tokenVocab=InternalCmdArgsLexer;
	superClass=AbstractInternalContentAssistParser;
	
}

@header {
package at.jku.weiner.c.cmdarguments.ui.contentassist.antlr.internal; 

import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import at.jku.weiner.c.cmdarguments.services.CmdArgsGrammarAccess;

}

@members {
 
 	private CmdArgsGrammarAccess grammarAccess;
 	
 	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
 	
 	{
 	}
 	
    public void setGrammarAccess(CmdArgsGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }

	@Override
    protected String getValueForTokenName(String tokenName) {
    	String result = tokenNameToValue.get(tokenName);
    	if (result == null)
    		result = tokenName;
    	return result;
    }
}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCmdLine
entryRuleCmdLine 
:
{ before(grammarAccess.getCmdLineRule()); }
	 ruleCmdLine
{ after(grammarAccess.getCmdLineRule()); } 
	 EOF 
;

// Rule CmdLine
ruleCmdLine 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getCmdLineAccess().getGroup()); }
(rule__CmdLine__Group__0)
{ after(grammarAccess.getCmdLineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgument
entryRuleArgument 
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleArgument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule Argument
ruleArgument 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getArgumentAccess().getGroup()); }
(rule__Argument__Group__0)
{ after(grammarAccess.getArgumentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIncSys
entryRuleIncSys 
:
{ before(grammarAccess.getIncSysRule()); }
	 ruleIncSys
{ after(grammarAccess.getIncSysRule()); } 
	 EOF 
;

// Rule IncSys
ruleIncSys 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIncSysAccess().getGroup()); }
(rule__IncSys__Group__0)
{ after(grammarAccess.getIncSysAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoStdInc
entryRuleNoStdInc 
:
{ before(grammarAccess.getNoStdIncRule()); }
	 ruleNoStdInc
{ after(grammarAccess.getNoStdIncRule()); } 
	 EOF 
;

// Rule NoStdInc
ruleNoStdInc 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNoStdIncAccess().getGroup()); }
(rule__NoStdInc__Group__0)
{ after(grammarAccess.getNoStdIncAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMacro
entryRuleMacro 
:
{ before(grammarAccess.getMacroRule()); }
	 ruleMacro
{ after(grammarAccess.getMacroRule()); } 
	 EOF 
;

// Rule Macro
ruleMacro 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMacroAccess().getAlternatives()); }
(rule__Macro__Alternatives)
{ after(grammarAccess.getMacroAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleMacro
entryRuleSimpleMacro 
:
{ before(grammarAccess.getSimpleMacroRule()); }
	 ruleSimpleMacro
{ after(grammarAccess.getSimpleMacroRule()); } 
	 EOF 
;

// Rule SimpleMacro
ruleSimpleMacro 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSimpleMacroAccess().getGroup()); }
(rule__SimpleMacro__Group__0)
{ after(grammarAccess.getSimpleMacroAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectMacro
entryRuleObjectMacro 
:
{ before(grammarAccess.getObjectMacroRule()); }
	 ruleObjectMacro
{ after(grammarAccess.getObjectMacroRule()); } 
	 EOF 
;

// Rule ObjectMacro
ruleObjectMacro 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getObjectMacroAccess().getGroup()); }
(rule__ObjectMacro__Group__0)
{ after(grammarAccess.getObjectMacroAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionMacro
entryRuleFunctionMacro 
:
{ before(grammarAccess.getFunctionMacroRule()); }
	 ruleFunctionMacro
{ after(grammarAccess.getFunctionMacroRule()); } 
	 EOF 
;

// Rule FunctionMacro
ruleFunctionMacro 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFunctionMacroAccess().getGroup()); }
(rule__FunctionMacro__Group__0)
{ after(grammarAccess.getFunctionMacroAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringMacro
entryRuleStringMacro 
:
{ before(grammarAccess.getStringMacroRule()); }
	 ruleStringMacro
{ after(grammarAccess.getStringMacroRule()); } 
	 EOF 
;

// Rule StringMacro
ruleStringMacro 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getStringMacroAccess().getGroup()); }
(rule__StringMacro__Group__0)
{ after(grammarAccess.getStringMacroAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathCmd
entryRulePathCmd 
:
{ before(grammarAccess.getPathCmdRule()); }
	 rulePathCmd
{ after(grammarAccess.getPathCmdRule()); } 
	 EOF 
;

// Rule PathCmd
rulePathCmd 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPathCmdAccess().getPathAssignment()); }
(rule__PathCmd__PathAssignment)
{ after(grammarAccess.getPathCmdAccess().getPathAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdentifier
entryRuleIdentifier 
:
{ before(grammarAccess.getIdentifierRule()); }
	 ruleIdentifier
{ after(grammarAccess.getIdentifierRule()); } 
	 EOF 
;

// Rule Identifier
ruleIdentifier 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIdentifierAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getIdentifierAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMyCode
entryRuleMyCode 
:
{ before(grammarAccess.getMyCodeRule()); }
	 ruleMyCode
{ after(grammarAccess.getMyCodeRule()); } 
	 EOF 
;

// Rule MyCode
ruleMyCode 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
(
{ before(grammarAccess.getMyCodeAccess().getAlternatives()); }
(rule__MyCode__Alternatives)
{ after(grammarAccess.getMyCodeAccess().getAlternatives()); }
)
(
{ before(grammarAccess.getMyCodeAccess().getAlternatives()); }
(rule__MyCode__Alternatives)*
{ after(grammarAccess.getMyCodeAccess().getAlternatives()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOption
entryRuleOption 
:
{ before(grammarAccess.getOptionRule()); }
	 ruleOption
{ after(grammarAccess.getOptionRule()); } 
	 EOF 
;

// Rule Option
ruleOption 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOptionAccess().getGroup()); }
(rule__Option__Group__0)
{ after(grammarAccess.getOptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptionChar
entryRuleOptionChar 
:
{ before(grammarAccess.getOptionCharRule()); }
	 ruleOptionChar
{ after(grammarAccess.getOptionCharRule()); } 
	 EOF 
;

// Rule OptionChar
ruleOptionChar 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOptionCharAccess().getAlternatives()); }
(rule__OptionChar__Alternatives)
{ after(grammarAccess.getOptionCharAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Argument__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getGroup_1_0()); }
(rule__Argument__Group_1_0__0)
{ after(grammarAccess.getArgumentAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getArgumentAccess().getGroup_1_1()); }
(rule__Argument__Group_1_1__0)
{ after(grammarAccess.getArgumentAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getArgumentAccess().getGroup_1_2()); }
(rule__Argument__Group_1_2__0)
{ after(grammarAccess.getArgumentAccess().getGroup_1_2()); }
)

    |(
{ before(grammarAccess.getArgumentAccess().getNostdincAssignment_1_3()); }
(rule__Argument__NostdincAssignment_1_3)
{ after(grammarAccess.getArgumentAccess().getNostdincAssignment_1_3()); }
)

    |(
{ before(grammarAccess.getArgumentAccess().getGroup_1_4()); }
(rule__Argument__Group_1_4__0)
{ after(grammarAccess.getArgumentAccess().getGroup_1_4()); }
)

    |(
{ before(grammarAccess.getArgumentAccess().getGroup_1_5()); }
(rule__Argument__Group_1_5__0)
{ after(grammarAccess.getArgumentAccess().getGroup_1_5()); }
)

    |(
{ before(grammarAccess.getArgumentAccess().getGroup_1_6()); }
(rule__Argument__Group_1_6__0)
{ after(grammarAccess.getArgumentAccess().getGroup_1_6()); }
)

    |(
{ before(grammarAccess.getArgumentAccess().getGroup_1_7()); }
(rule__Argument__Group_1_7__0)
{ after(grammarAccess.getArgumentAccess().getGroup_1_7()); }
)

    |(
{ before(grammarAccess.getArgumentAccess().getInAssignment_1_8()); }
(rule__Argument__InAssignment_1_8)
{ after(grammarAccess.getArgumentAccess().getInAssignment_1_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getSimpleMacroParserRuleCall_0()); }
	ruleSimpleMacro
{ after(grammarAccess.getMacroAccess().getSimpleMacroParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMacroAccess().getObjectMacroParserRuleCall_1()); }
	ruleObjectMacro
{ after(grammarAccess.getMacroAccess().getObjectMacroParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getMacroAccess().getFunctionMacroParserRuleCall_2()); }
	ruleFunctionMacro
{ after(grammarAccess.getMacroAccess().getFunctionMacroParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getMacroAccess().getStringMacroParserRuleCall_3()); }
	ruleStringMacro
{ after(grammarAccess.getMacroAccess().getStringMacroParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathCmd__PathAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathCmdAccess().getPathIdentifierParserRuleCall_0_0()); }
	ruleIdentifier
{ after(grammarAccess.getPathCmdAccess().getPathIdentifierParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getPathCmdAccess().getPathSTRING2TerminalRuleCall_0_1()); }
	RULE_STRING2
{ after(grammarAccess.getPathCmdAccess().getPathSTRING2TerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MyCode__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMyCodeAccess().getOptionCharParserRuleCall_0()); }
	ruleOptionChar
{ after(grammarAccess.getMyCodeAccess().getOptionCharParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMyCodeAccess().getSKW_LEFTPARENTerminalRuleCall_1()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getMyCodeAccess().getSKW_LEFTPARENTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getMyCodeAccess().getSKW_RIGHTPARENTerminalRuleCall_2()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getMyCodeAccess().getSKW_RIGHTPARENTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionChar__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionCharAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getOptionCharAccess().getIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOptionCharAccess().getSTRING2TerminalRuleCall_1()); }
	RULE_STRING2
{ after(grammarAccess.getOptionCharAccess().getSTRING2TerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getOptionCharAccess().getSKW_ASSIGNTerminalRuleCall_2()); }
	RULE_SKW_ASSIGN
{ after(grammarAccess.getOptionCharAccess().getSKW_ASSIGNTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getOptionCharAccess().getANY_OTHERTerminalRuleCall_3()); }
	RULE_ANY_OTHER
{ after(grammarAccess.getOptionCharAccess().getANY_OTHERTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelAction_0()); }
(

)
{ after(grammarAccess.getModelAccess().getModelAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGroup_1()); }
(rule__Model__Group_1__0)?
{ after(grammarAccess.getModelAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNEWLINETerminalRuleCall_2()); }
(	RULE_NEWLINE)?
{ after(grammarAccess.getModelAccess().getNEWLINETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Model__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_1__0__Impl
	rule__Model__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getLinesAssignment_1_0()); }
(rule__Model__LinesAssignment_1_0)
{ after(grammarAccess.getModelAccess().getLinesAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGroup_1_1()); }
(rule__Model__Group_1_1__0)*
{ after(grammarAccess.getModelAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Model__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_1_1__0__Impl
	rule__Model__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNEWLINETerminalRuleCall_1_1_0()); }
(	RULE_NEWLINE)*
{ after(grammarAccess.getModelAccess().getNEWLINETerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getLinesAssignment_1_1_1()); }
(rule__Model__LinesAssignment_1_1_1)
{ after(grammarAccess.getModelAccess().getLinesAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CmdLine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmdLine__Group__0__Impl
	rule__CmdLine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CmdLine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmdLineAccess().getCmdLineAction_0()); }
(

)
{ after(grammarAccess.getCmdLineAccess().getCmdLineAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmdLine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmdLine__Group__1__Impl
	rule__CmdLine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CmdLine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmdLineAccess().getStartAssignment_1()); }
(rule__CmdLine__StartAssignment_1)
{ after(grammarAccess.getCmdLineAccess().getStartAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmdLine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmdLine__Group__2__Impl
	rule__CmdLine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CmdLine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getCmdLineAccess().getWSTerminalRuleCall_2()); }
(	RULE_WS)
{ after(grammarAccess.getCmdLineAccess().getWSTerminalRuleCall_2()); }
)
(
{ before(grammarAccess.getCmdLineAccess().getWSTerminalRuleCall_2()); }
(	RULE_WS)*
{ after(grammarAccess.getCmdLineAccess().getWSTerminalRuleCall_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmdLine__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmdLine__Group__3__Impl
	rule__CmdLine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CmdLine__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmdLineAccess().getSKW_COLONTerminalRuleCall_3()); }
	RULE_SKW_COLON
{ after(grammarAccess.getCmdLineAccess().getSKW_COLONTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmdLine__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmdLine__Group__4__Impl
	rule__CmdLine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CmdLine__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmdLineAccess().getSKW_ASSIGNTerminalRuleCall_4()); }
	RULE_SKW_ASSIGN
{ after(grammarAccess.getCmdLineAccess().getSKW_ASSIGNTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmdLine__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmdLine__Group__5__Impl
	rule__CmdLine__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CmdLine__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getCmdLineAccess().getWSTerminalRuleCall_5()); }
(	RULE_WS)
{ after(grammarAccess.getCmdLineAccess().getWSTerminalRuleCall_5()); }
)
(
{ before(grammarAccess.getCmdLineAccess().getWSTerminalRuleCall_5()); }
(	RULE_WS)*
{ after(grammarAccess.getCmdLineAccess().getWSTerminalRuleCall_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmdLine__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmdLine__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CmdLine__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmdLineAccess().getGroup_6()); }
(rule__CmdLine__Group_6__0)
{ after(grammarAccess.getCmdLineAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__CmdLine__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmdLine__Group_6__0__Impl
	rule__CmdLine__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CmdLine__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmdLineAccess().getArgumentsAssignment_6_0()); }
(rule__CmdLine__ArgumentsAssignment_6_0)
{ after(grammarAccess.getCmdLineAccess().getArgumentsAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmdLine__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmdLine__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CmdLine__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmdLineAccess().getGroup_6_1()); }
(rule__CmdLine__Group_6_1__0)*
{ after(grammarAccess.getCmdLineAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CmdLine__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmdLine__Group_6_1__0__Impl
	rule__CmdLine__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CmdLine__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getCmdLineAccess().getWSTerminalRuleCall_6_1_0()); }
(	RULE_WS)
{ after(grammarAccess.getCmdLineAccess().getWSTerminalRuleCall_6_1_0()); }
)
(
{ before(grammarAccess.getCmdLineAccess().getWSTerminalRuleCall_6_1_0()); }
(	RULE_WS)*
{ after(grammarAccess.getCmdLineAccess().getWSTerminalRuleCall_6_1_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmdLine__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmdLine__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CmdLine__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmdLineAccess().getArgumentsAssignment_6_1_1()); }
(rule__CmdLine__ArgumentsAssignment_6_1_1)
{ after(grammarAccess.getCmdLineAccess().getArgumentsAssignment_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Argument__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group__0__Impl
	rule__Argument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getArgumentAction_0()); }
(

)
{ after(grammarAccess.getArgumentAccess().getArgumentAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getAlternatives_1()); }
(rule__Argument__Alternatives_1)
{ after(grammarAccess.getArgumentAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Argument__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_0__0__Impl
	rule__Argument__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getKW_DEFINETerminalRuleCall_1_0_0()); }
	RULE_KW_DEFINE
{ after(grammarAccess.getArgumentAccess().getKW_DEFINETerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getMacroAssignment_1_0_1()); }
(rule__Argument__MacroAssignment_1_0_1)
{ after(grammarAccess.getArgumentAccess().getMacroAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Argument__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_1__0__Impl
	rule__Argument__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getIncDirAssignment_1_1_0()); }
(rule__Argument__IncDirAssignment_1_1_0)
{ after(grammarAccess.getArgumentAccess().getIncDirAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getUseIncDirAssignment_1_1_1()); }
(rule__Argument__UseIncDirAssignment_1_1_1)
{ after(grammarAccess.getArgumentAccess().getUseIncDirAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Argument__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_2__0__Impl
	rule__Argument__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getIncSysAssignment_1_2_0()); }
(rule__Argument__IncSysAssignment_1_2_0)
{ after(grammarAccess.getArgumentAccess().getIncSysAssignment_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_2__1__Impl
	rule__Argument__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getArgumentAccess().getWSTerminalRuleCall_1_2_1()); }
(	RULE_WS)
{ after(grammarAccess.getArgumentAccess().getWSTerminalRuleCall_1_2_1()); }
)
(
{ before(grammarAccess.getArgumentAccess().getWSTerminalRuleCall_1_2_1()); }
(	RULE_WS)*
{ after(grammarAccess.getArgumentAccess().getWSTerminalRuleCall_1_2_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getUseIncDirAssignment_1_2_2()); }
(rule__Argument__UseIncDirAssignment_1_2_2)
{ after(grammarAccess.getArgumentAccess().getUseIncDirAssignment_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Argument__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_4__0__Impl
	rule__Argument__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getSKW_MINUSTerminalRuleCall_1_4_0()); }
	RULE_SKW_MINUS
{ after(grammarAccess.getArgumentAccess().getSKW_MINUSTerminalRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_4__1__Impl
	rule__Argument__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getKW_INCLUDETerminalRuleCall_1_4_1()); }
	RULE_KW_INCLUDE
{ after(grammarAccess.getArgumentAccess().getKW_INCLUDETerminalRuleCall_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_1_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_4__2__Impl
	rule__Argument__Group_1_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getArgumentAccess().getWSTerminalRuleCall_1_4_2()); }
(	RULE_WS)
{ after(grammarAccess.getArgumentAccess().getWSTerminalRuleCall_1_4_2()); }
)
(
{ before(grammarAccess.getArgumentAccess().getWSTerminalRuleCall_1_4_2()); }
(	RULE_WS)*
{ after(grammarAccess.getArgumentAccess().getWSTerminalRuleCall_1_4_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_1_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getIncludeAssignment_1_4_3()); }
(rule__Argument__IncludeAssignment_1_4_3)
{ after(grammarAccess.getArgumentAccess().getIncludeAssignment_1_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Argument__Group_1_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_5__0__Impl
	rule__Argument__Group_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getKW_OUTPUTTerminalRuleCall_1_5_0()); }
	RULE_KW_OUTPUT
{ after(grammarAccess.getArgumentAccess().getKW_OUTPUTTerminalRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_1_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_5__1__Impl
	rule__Argument__Group_1_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getArgumentAccess().getWSTerminalRuleCall_1_5_1()); }
(	RULE_WS)
{ after(grammarAccess.getArgumentAccess().getWSTerminalRuleCall_1_5_1()); }
)
(
{ before(grammarAccess.getArgumentAccess().getWSTerminalRuleCall_1_5_1()); }
(	RULE_WS)*
{ after(grammarAccess.getArgumentAccess().getWSTerminalRuleCall_1_5_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_1_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getOutAssignment_1_5_2()); }
(rule__Argument__OutAssignment_1_5_2)
{ after(grammarAccess.getArgumentAccess().getOutAssignment_1_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Argument__Group_1_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_6__0__Impl
	rule__Argument__Group_1_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getKW_LANGTerminalRuleCall_1_6_0()); }
	RULE_KW_LANG
{ after(grammarAccess.getArgumentAccess().getKW_LANGTerminalRuleCall_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_1_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_6__1__Impl
	rule__Argument__Group_1_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getArgumentAccess().getWSTerminalRuleCall_1_6_1()); }
(	RULE_WS)
{ after(grammarAccess.getArgumentAccess().getWSTerminalRuleCall_1_6_1()); }
)
(
{ before(grammarAccess.getArgumentAccess().getWSTerminalRuleCall_1_6_1()); }
(	RULE_WS)*
{ after(grammarAccess.getArgumentAccess().getWSTerminalRuleCall_1_6_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_1_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getLangAssignment_1_6_2()); }
(rule__Argument__LangAssignment_1_6_2)
{ after(grammarAccess.getArgumentAccess().getLangAssignment_1_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Argument__Group_1_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_7__0__Impl
	rule__Argument__Group_1_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getSKW_MINUSTerminalRuleCall_1_7_0()); }
	RULE_SKW_MINUS
{ after(grammarAccess.getArgumentAccess().getSKW_MINUSTerminalRuleCall_1_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_1_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_7__1__Impl
	rule__Argument__Group_1_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getSKW_MINUSTerminalRuleCall_1_7_1()); }
(	RULE_SKW_MINUS)?
{ after(grammarAccess.getArgumentAccess().getSKW_MINUSTerminalRuleCall_1_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_1_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getOptionAssignment_1_7_2()); }
(rule__Argument__OptionAssignment_1_7_2)?
{ after(grammarAccess.getArgumentAccess().getOptionAssignment_1_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IncSys__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncSys__Group__0__Impl
	rule__IncSys__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncSys__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncSysAccess().getSKW_MINUSTerminalRuleCall_0()); }
	RULE_SKW_MINUS
{ after(grammarAccess.getIncSysAccess().getSKW_MINUSTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncSys__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncSys__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncSys__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncSysAccess().getKW_INCSYSTerminalRuleCall_1()); }
	RULE_KW_INCSYS
{ after(grammarAccess.getIncSysAccess().getKW_INCSYSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NoStdInc__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoStdInc__Group__0__Impl
	rule__NoStdInc__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NoStdInc__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoStdIncAccess().getSKW_MINUSTerminalRuleCall_0()); }
	RULE_SKW_MINUS
{ after(grammarAccess.getNoStdIncAccess().getSKW_MINUSTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NoStdInc__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoStdInc__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NoStdInc__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoStdIncAccess().getKW_NOSTDINCTerminalRuleCall_1()); }
	RULE_KW_NOSTDINC
{ after(grammarAccess.getNoStdIncAccess().getKW_NOSTDINCTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleMacro__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleMacro__Group__0__Impl
	rule__SimpleMacro__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleMacro__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleMacroAccess().getSimpleMacroAction_0()); }
(

)
{ after(grammarAccess.getSimpleMacroAccess().getSimpleMacroAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleMacro__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleMacro__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleMacro__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleMacroAccess().getNameAssignment_1()); }
(rule__SimpleMacro__NameAssignment_1)
{ after(grammarAccess.getSimpleMacroAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ObjectMacro__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectMacro__Group__0__Impl
	rule__ObjectMacro__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMacro__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectMacroAccess().getObjectMacroAction_0()); }
(

)
{ after(grammarAccess.getObjectMacroAccess().getObjectMacroAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectMacro__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectMacro__Group__1__Impl
	rule__ObjectMacro__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMacro__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectMacroAccess().getNameAssignment_1()); }
(rule__ObjectMacro__NameAssignment_1)
{ after(grammarAccess.getObjectMacroAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectMacro__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectMacro__Group__2__Impl
	rule__ObjectMacro__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMacro__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectMacroAccess().getSKW_ASSIGNTerminalRuleCall_2()); }
	RULE_SKW_ASSIGN
{ after(grammarAccess.getObjectMacroAccess().getSKW_ASSIGNTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectMacro__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectMacro__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMacro__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectMacroAccess().getValueAssignment_3()); }
(rule__ObjectMacro__ValueAssignment_3)
{ after(grammarAccess.getObjectMacroAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionMacro__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMacro__Group__0__Impl
	rule__FunctionMacro__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMacro__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMacroAccess().getFunctionMacroAction_0()); }
(

)
{ after(grammarAccess.getFunctionMacroAccess().getFunctionMacroAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMacro__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMacro__Group__1__Impl
	rule__FunctionMacro__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMacro__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMacroAccess().getNameAssignment_1()); }
(rule__FunctionMacro__NameAssignment_1)
{ after(grammarAccess.getFunctionMacroAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMacro__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMacro__Group__2__Impl
	rule__FunctionMacro__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMacro__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMacroAccess().getSKW_LEFTPARENTerminalRuleCall_2()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getFunctionMacroAccess().getSKW_LEFTPARENTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMacro__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMacro__Group__3__Impl
	rule__FunctionMacro__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMacro__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMacroAccess().getGroup_3()); }
(rule__FunctionMacro__Group_3__0)?
{ after(grammarAccess.getFunctionMacroAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMacro__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMacro__Group__4__Impl
	rule__FunctionMacro__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMacro__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMacroAccess().getSKW_RIGHTPARENTerminalRuleCall_4()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getFunctionMacroAccess().getSKW_RIGHTPARENTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMacro__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMacro__Group__5__Impl
	rule__FunctionMacro__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMacro__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMacroAccess().getSKW_ASSIGNTerminalRuleCall_5()); }
	RULE_SKW_ASSIGN
{ after(grammarAccess.getFunctionMacroAccess().getSKW_ASSIGNTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMacro__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMacro__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMacro__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMacroAccess().getValueAssignment_6()); }
(rule__FunctionMacro__ValueAssignment_6)
{ after(grammarAccess.getFunctionMacroAccess().getValueAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__FunctionMacro__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMacro__Group_3__0__Impl
	rule__FunctionMacro__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMacro__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMacroAccess().getParamsAssignment_3_0()); }
(rule__FunctionMacro__ParamsAssignment_3_0)
{ after(grammarAccess.getFunctionMacroAccess().getParamsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMacro__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMacro__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMacro__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMacroAccess().getGroup_3_1()); }
(rule__FunctionMacro__Group_3_1__0)*
{ after(grammarAccess.getFunctionMacroAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionMacro__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMacro__Group_3_1__0__Impl
	rule__FunctionMacro__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMacro__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMacroAccess().getSKW_COMMATerminalRuleCall_3_1_0()); }
	RULE_SKW_COMMA
{ after(grammarAccess.getFunctionMacroAccess().getSKW_COMMATerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMacro__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMacro__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMacro__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMacroAccess().getParamsAssignment_3_1_1()); }
(rule__FunctionMacro__ParamsAssignment_3_1_1)
{ after(grammarAccess.getFunctionMacroAccess().getParamsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringMacro__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringMacro__Group__0__Impl
	rule__StringMacro__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringMacro__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringMacroAccess().getStringMacroAction_0()); }
(

)
{ after(grammarAccess.getStringMacroAccess().getStringMacroAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringMacro__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringMacro__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringMacro__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringMacroAccess().getStringAssignment_1()); }
(rule__StringMacro__StringAssignment_1)
{ after(grammarAccess.getStringMacroAccess().getStringAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Option__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Option__Group__0__Impl
	rule__Option__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getOptionAccess().getOptionCharParserRuleCall_0()); }
(	ruleOptionChar)
{ after(grammarAccess.getOptionAccess().getOptionCharParserRuleCall_0()); }
)
(
{ before(grammarAccess.getOptionAccess().getOptionCharParserRuleCall_0()); }
(	ruleOptionChar)*
{ after(grammarAccess.getOptionAccess().getOptionCharParserRuleCall_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Option__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Option__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionAccess().getGroup_1()); }
(rule__Option__Group_1__0)*
{ after(grammarAccess.getOptionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Option__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Option__Group_1__0__Impl
	rule__Option__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionAccess().getSKW_COMMATerminalRuleCall_1_0()); }
	RULE_SKW_COMMA
{ after(grammarAccess.getOptionAccess().getSKW_COMMATerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Option__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Option__Group_1__1__Impl
	rule__Option__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionAccess().getSKW_MINUSTerminalRuleCall_1_1()); }
(	RULE_SKW_MINUS)?
{ after(grammarAccess.getOptionAccess().getSKW_MINUSTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Option__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Option__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getOptionAccess().getOptionCharParserRuleCall_1_2()); }
(	ruleOptionChar)
{ after(grammarAccess.getOptionAccess().getOptionCharParserRuleCall_1_2()); }
)
(
{ before(grammarAccess.getOptionAccess().getOptionCharParserRuleCall_1_2()); }
(	ruleOptionChar)*
{ after(grammarAccess.getOptionAccess().getOptionCharParserRuleCall_1_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__LinesAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getLinesCmdLineParserRuleCall_1_0_0()); }
	ruleCmdLine{ after(grammarAccess.getModelAccess().getLinesCmdLineParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__LinesAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getLinesCmdLineParserRuleCall_1_1_1_0()); }
	ruleCmdLine{ after(grammarAccess.getModelAccess().getLinesCmdLineParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CmdLine__StartAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmdLineAccess().getStartIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getCmdLineAccess().getStartIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CmdLine__ArgumentsAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmdLineAccess().getArgumentsArgumentParserRuleCall_6_0_0()); }
	ruleArgument{ after(grammarAccess.getCmdLineAccess().getArgumentsArgumentParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CmdLine__ArgumentsAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmdLineAccess().getArgumentsArgumentParserRuleCall_6_1_1_0()); }
	ruleArgument{ after(grammarAccess.getCmdLineAccess().getArgumentsArgumentParserRuleCall_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__MacroAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getMacroMacroParserRuleCall_1_0_1_0()); }
	ruleMacro{ after(grammarAccess.getArgumentAccess().getMacroMacroParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__IncDirAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getIncDirKW_INCDIRTerminalRuleCall_1_1_0_0()); }
	RULE_KW_INCDIR{ after(grammarAccess.getArgumentAccess().getIncDirKW_INCDIRTerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__UseIncDirAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getUseIncDirPathCmdParserRuleCall_1_1_1_0()); }
	rulePathCmd{ after(grammarAccess.getArgumentAccess().getUseIncDirPathCmdParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__IncSysAssignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getIncSysIncSysParserRuleCall_1_2_0_0()); }
	ruleIncSys{ after(grammarAccess.getArgumentAccess().getIncSysIncSysParserRuleCall_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__UseIncDirAssignment_1_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getUseIncDirPathCmdParserRuleCall_1_2_2_0()); }
	rulePathCmd{ after(grammarAccess.getArgumentAccess().getUseIncDirPathCmdParserRuleCall_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__NostdincAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getNostdincNoStdIncParserRuleCall_1_3_0()); }
	ruleNoStdInc{ after(grammarAccess.getArgumentAccess().getNostdincNoStdIncParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__IncludeAssignment_1_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getIncludePathCmdParserRuleCall_1_4_3_0()); }
	rulePathCmd{ after(grammarAccess.getArgumentAccess().getIncludePathCmdParserRuleCall_1_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__OutAssignment_1_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getOutPathCmdParserRuleCall_1_5_2_0()); }
	rulePathCmd{ after(grammarAccess.getArgumentAccess().getOutPathCmdParserRuleCall_1_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__LangAssignment_1_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getLangPathCmdParserRuleCall_1_6_2_0()); }
	rulePathCmd{ after(grammarAccess.getArgumentAccess().getLangPathCmdParserRuleCall_1_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__OptionAssignment_1_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getOptionOptionParserRuleCall_1_7_2_0()); }
	ruleOption{ after(grammarAccess.getArgumentAccess().getOptionOptionParserRuleCall_1_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__InAssignment_1_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getInIdentifierParserRuleCall_1_8_0()); }
	ruleIdentifier{ after(grammarAccess.getArgumentAccess().getInIdentifierParserRuleCall_1_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleMacro__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleMacroAccess().getNameIdentifierParserRuleCall_1_0()); }
	ruleIdentifier{ after(grammarAccess.getSimpleMacroAccess().getNameIdentifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMacro__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectMacroAccess().getNameIdentifierParserRuleCall_1_0()); }
	ruleIdentifier{ after(grammarAccess.getObjectMacroAccess().getNameIdentifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMacro__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectMacroAccess().getValueMyCodeParserRuleCall_3_0()); }
	ruleMyCode{ after(grammarAccess.getObjectMacroAccess().getValueMyCodeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMacro__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMacroAccess().getNameIdentifierParserRuleCall_1_0()); }
	ruleIdentifier{ after(grammarAccess.getFunctionMacroAccess().getNameIdentifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMacro__ParamsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMacroAccess().getParamsIdentifierParserRuleCall_3_0_0()); }
	ruleIdentifier{ after(grammarAccess.getFunctionMacroAccess().getParamsIdentifierParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMacro__ParamsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMacroAccess().getParamsIdentifierParserRuleCall_3_1_1_0()); }
	ruleIdentifier{ after(grammarAccess.getFunctionMacroAccess().getParamsIdentifierParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMacro__ValueAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMacroAccess().getValueMyCodeParserRuleCall_6_0()); }
	ruleMyCode{ after(grammarAccess.getFunctionMacroAccess().getValueMyCodeParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringMacro__StringAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringMacroAccess().getStringSTRING2TerminalRuleCall_1_0()); }
	RULE_STRING2{ after(grammarAccess.getStringMacroAccess().getStringSTRING2TerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathCmd__PathAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathCmdAccess().getPathAlternatives_0()); }
(rule__PathCmd__PathAlternatives_0)
{ after(grammarAccess.getPathCmdAccess().getPathAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


