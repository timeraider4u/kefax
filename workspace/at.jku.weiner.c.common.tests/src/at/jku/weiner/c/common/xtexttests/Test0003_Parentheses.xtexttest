//----------------------------------------------------------------------
//----------------------------------------------------------------------
package at.jku.weiner.c.common
language common
//----------------------------------------------------------------------
source file="res/Test0003_Parentheses.txt"
//----------------------------------------------------------------------
lexer-tokens
SKW_LEFTPAREN 
	DECIMAL_LITERAL WHITESPACE SKW_PLUS WHITESPACE DECIMAL_LITERAL
SKW_RIGHTPAREN
//----------------------------------------------------------------------
(Expression
	expression=
	(ConditionalExpression
		expr=
		(LogicalOrExpression
			expr+=
			(LogicalAndExpression
				expr+=
				(InclusiveOrExpression
					expr+=
					(ExclusiveOrExpression
						expr+=
						(AndExpression
							expr+=
							(EqualityExpression
								expr+=
								(RelationalExpression
									expr+=
									(ShiftExpression
										expr+=
										(AdditiveExpression
											expr+=
											(MultiplicativeExpression
												expr+=
												(CastExpression
													expr=
													(UnaryExpression
														expr=
														(PostfixExpression
															expr=
															(PrimaryExpression
																expr=
																(Expression
																	expression=
																	(ConditionalExpression
																		expr=
																		(LogicalOrExpression
																			expr+=
																			(LogicalAndExpression
																				expr+=
																				(InclusiveOrExpression
																					expr+=
																					(ExclusiveOrExpression
																						expr+=
																						(AndExpression
																							expr+=
																							(EqualityExpression
																								expr+=
																								(RelationalExpression
																									expr+=
																									(ShiftExpression
																										expr+=
																										(AdditiveExpression
																											op+*"[+]",
																											expr+=
																											(MultiplicativeExpression
																												expr+=
																												(CastExpression
																													expr=
																													(UnaryExpression
																														expr=
																														(PostfixExpression
																															expr=
																															(PrimaryExpression
																																const++"1"
																															)
																														)
																													)
																												)
																											),
																											(MultiplicativeExpression
																												expr+=
																												(CastExpression
																													expr=
																													(UnaryExpression
																														expr=
																														(PostfixExpression
																															expr=
																															(PrimaryExpression
																																const++"2"
																															)
																														)
																													)
																												)
																											)
																										)
																									)
																								)
																								
																							)
																						)
																					)
																				)
																			)
																		)
																	)
																)//end expression		
															)
														)
													)
												)
											)
										)
									)
								)
								
							)
						)
					)
				)
			)
		)
	)
)//end expression			

//----------------------------------------------------------------------
//output file="bin/Test0010_SimpleExpr.c"
//expected file isSameAsInputFile
//replacePatterns file="res/Patterns.txt"
//----------------------------------------------------------------------
//----------------------------------------------------------------------
