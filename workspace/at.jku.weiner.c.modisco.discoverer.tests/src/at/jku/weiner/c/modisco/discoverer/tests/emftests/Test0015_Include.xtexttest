emftest
package at.jku.weiner.c.modisco.discoverer.tests
default at.jku.weiner.c.common.common
imports at.jku.weiner.c.preprocess.preprocess as preprocess
imports at.jku.weiner.c.parser.parser as parser

timeOut = 45000

class=EMFTest method=emfTestB()
options class=EMFTest method=getOptions()
xtexttest-params class=EMFTest method=getParameters()

source file="res/Test0015_Include"

(Model
	units+=
	// Predefined
	(TranslationUnit
		path++"platform:/plugin/at.jku.weiner.c.preprocess/res/predefined/gcc_4.9.3_default.h",
		preprocess=
		(preprocess::Preprocess
			
		)
	),
	// A.c
	(TranslationUnit
		path++"${{path}}/${{plugin_id}}/res/Test0015_Include1/A.c",
		preprocess=
		(preprocess::Preprocess
			group=
			(preprocess::GroupOpt
				lines+=
				(preprocess::PreprocessorDirectives
					directive=
					(preprocess::DefineObjectMacro
						ident++"FOO",
						string++"1"
					)
				),
				(preprocess::PreprocessorDirectives
					directive=
					(preprocess::IncludeDirective
						string++"\\\"../include/Test0015_Include.h\\\""
					)
				),
				(preprocess::Code
					code++"TYPE_FOO i;"
				)
			)
		),
		parser=
		(parser::Parser
			external+=
			// comes from Test0015_Include.h
			(parser::ExternalDeclaration 
				declaration=
				(parser::Declaration
					specifiers=
					(parser::DeclarationSpecifiers
						declarationSpecifier+=
						(parser::StorageClassSpecifier
							name++"typedef"
						),
						(parser::TypeSpecifier
							name++"int"
						)
					),
					initDeclaratorList+=
					(parser::InitDeclaratorList
						initDeclarator+=
						(parser::InitDeclarator
							declarator=
							(parser::Declarator
								declarator=
								(parser::DirectDeclarator
									ident++"TYPE_FOO"
								)
							)
						)
					)
				)	
			),
			// comes from A.c
			(parser::ExternalDeclaration 
				declaration=
				(parser::Declaration
					specifiers=
					(parser::DeclarationSpecifiers
						declarationSpecifier+=
						(parser::TypeSpecifier
							type=
							(parser::TypedefName
								ident++"TYPE_FOO"
							)
						)
					),
					initDeclaratorList+=
					(parser::InitDeclaratorList
						initDeclarator+=
						(parser::InitDeclarator
							declarator=
							(parser::Declarator
								declarator=
								(parser::DirectDeclarator
									ident++"i"
								)
							)
						)
					)
				)
			)
		)
	),
	// Test0015_Include.h
	(TranslationUnit
		path++"${{path}}/${{plugin_id}}/res/include/Test0015_Include.h",
		preprocess=
		(preprocess::Preprocess
			group=
			(preprocess::GroupOpt
				lines+=
				(preprocess::PreprocessorDirectives
					directive=
					(preprocess::ConditionalDirective
						conditional=
						(preprocess::IfConditional
							expression=
							(preprocess::PrimaryExpression
								defined?=false,
								ident++"FOOBAR"
							),
							group=
							(preprocess::GroupOpt
								lines+=
								(preprocess::Code
									code++"	typedef int TYPE_FOO_BAR;"
								)
							)
						), // end if conditional
						elifs+=
						(preprocess::ElIfConditional
							expression=
							(preprocess::PrimaryExpression
								defined?=false,
								ident++"FOO"
							),
							group=
							(preprocess::GroupOpt
								lines+=
								(preprocess::Code
									code++"	typedef int TYPE_FOO;"
								)
							)
						), // end elif conditional
						(preprocess::ElIfConditional
							expression=
							(preprocess::PrimaryExpression
								defined?=false,
								ident++"BAR"
							),
							group=
							(preprocess::GroupOpt
								lines+=
								(preprocess::Code
									code++"	typedef int TYPE_BAR;"
								)
							)
						), // end elif conditional
						else=
						(preprocess::ElseConditional
							group=
							(preprocess::GroupOpt
								lines+=
								(preprocess::Code
									code++"	typedef int TYPE_BAZ;"
								)
							)
						)
					) // end conditional directive
				)
			)
		),
		parser isNull
	),
	// B.c
	(TranslationUnit
		path++"${{path}}/${{plugin_id}}/res/Test0015_Include2/B.c",
		preprocess=
		(preprocess::Preprocess
			group=
			(preprocess::GroupOpt
				lines+=
				(preprocess::PreprocessorDirectives
					directive=
					(preprocess::IncludeDirective
						string++"\\\"../include/Test0015_Include.h\\\""
					)
				),
				(preprocess::Code
					code++"TYPE_BAZ j;"
				),
				(preprocess::NewLineLine),
				(preprocess::PreprocessorDirectives
					directive=
					(preprocess::DefineObjectMacro
						ident++"BAR",
						string++"1"
					)
				),
				(preprocess::PreprocessorDirectives
					directive=
					(preprocess::IncludeDirective
						string++"\\\"../include/Test0015_Include.h\\\""
					)
				),
				(preprocess::Code
					code++"TYPE_BAZ k;"
				),
				(preprocess::Code
					code++"TYPE_BAR l;"
				)
			)
		),
		parser=
		(parser::Parser
			external+=
			// comes from Test0015_Include.h
			(parser::ExternalDeclaration 
				declaration=
				(parser::Declaration
					specifiers=
					(parser::DeclarationSpecifiers
						declarationSpecifier+=
						(parser::StorageClassSpecifier
							name++"typedef"
						),
						(parser::TypeSpecifier
							name++"int"
						)
					),
					initDeclaratorList+=
					(parser::InitDeclaratorList
						initDeclarator+=
						(parser::InitDeclarator
							declarator=
							(parser::Declarator
								declarator=
								(parser::DirectDeclarator
									ident++"TYPE_BAZ"
								)
							)
						)
					)
				)	
			),
			// comes from A.c
			(parser::ExternalDeclaration 
				declaration=
				(parser::Declaration
					specifiers=
					(parser::DeclarationSpecifiers
						declarationSpecifier+=
						(parser::TypeSpecifier
							type=
							(parser::TypedefName
								ident++"TYPE_BAZ"
							)
						)
					),
					initDeclaratorList+=
					(parser::InitDeclaratorList
						initDeclarator+=
						(parser::InitDeclarator
							declarator=
							(parser::Declarator
								declarator=
								(parser::DirectDeclarator
									ident++"j"
								)
							)
						)
					)
				)
			),
			// comes from Test0015_Include.h
			(parser::ExternalDeclaration 
				declaration=
				(parser::Declaration
					specifiers=
					(parser::DeclarationSpecifiers
						declarationSpecifier+=
						(parser::StorageClassSpecifier
							name++"typedef"
						),
						(parser::TypeSpecifier
							name++"int"
						)
					),
					initDeclaratorList+=
					(parser::InitDeclaratorList
						initDeclarator+=
						(parser::InitDeclarator
							declarator=
							(parser::Declarator
								declarator=
								(parser::DirectDeclarator
									ident++"TYPE_BAR"
								)
							)
						)
					)
				)	
			),
			// comes from A.h
			(parser::ExternalDeclaration 
				declaration=
				(parser::Declaration
					specifiers=
					(parser::DeclarationSpecifiers
						declarationSpecifier+=
						(parser::TypeSpecifier
							type=
							(parser::TypedefName
								ident++"TYPE_BAZ"
							)
						)
					),
					initDeclaratorList+=
					(parser::InitDeclaratorList
						initDeclarator+=
						(parser::InitDeclarator
							declarator=
							(parser::Declarator
								declarator=
								(parser::DirectDeclarator
									ident++"k"
								)
							)
						)
					)
				)
			),
			(parser::ExternalDeclaration 
				declaration=
				(parser::Declaration
					specifiers=
					(parser::DeclarationSpecifiers
						declarationSpecifier+=
						(parser::TypeSpecifier
							type=
							(parser::TypedefName
								ident++"TYPE_BAR"
							)
						)
					),
					initDeclaratorList+=
					(parser::InitDeclaratorList
						initDeclarator+=
						(parser::InitDeclarator
							declarator=
							(parser::Declarator
								declarator=
								(parser::DirectDeclarator
									ident++"l"
								)
							)
						)
					)
				)
			)
		)
	)
)

before class=at.jku.weiner.c.modisco.discoverer.tests.EMFTest method=test0015_before()
after class=at.jku.weiner.c.modisco.discoverer.tests.EMFTest method=test0015_after()

