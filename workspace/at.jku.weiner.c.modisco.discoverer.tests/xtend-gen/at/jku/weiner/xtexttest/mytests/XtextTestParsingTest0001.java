/**
 * generated by Xtext 2.9.0-SNAPSHOT
 */
package at.jku.weiner.xtexttest.mytests;

import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.junit.Test;
import org.junit.runner.RunWith;

/* @RunWith(/* name is null */)
@InjectWith(/* name is null */) */@SuppressWarnings("all")
public class XtextTestParsingTest0001 {
  /* @Inject
   */private /* ParseHelper<Model> */Object parseHelper;
  
  /* @Inject
   */private /* XtextTestGenerator */Object generator;
  
  /* @Inject
   */private /* Provider<ResourceSet> */Object resourceSetProvider;
  
  /* @Inject
   */private /* IResourceValidator */Object validator;
  
  /* @Inject
   */private /* JavaIoFileSystemAccess */Object fileAccessSystem;
  
  private int wordCount = 0;
  
  public String getTextFromFile(final String fileName) throws Exception {
    final Path path = Paths.get(fileName);
    byte[] _readAllBytes = Files.readAllBytes(path);
    final String content = new String(_readAllBytes);
    return content;
  }
  
  @Test
  public void loadModel() {
    throw new Error("Unresolved compilation problems:"
      + "\nIssue cannot be resolved to a type."
      + "\nThe method or field CheckMode is undefined"
      + "\nThe method or field CancelIndicator is undefined"
      + "\n++ cannot be resolved."
      + "\nparse cannot be resolved"
      + "\nget cannot be resolved"
      + "\nvalidate cannot be resolved"
      + "\nALL cannot be resolved"
      + "\nNullImpl cannot be resolved"
      + "\nsetOutputPath cannot be resolved"
      + "\nsetFileName cannot be resolved"
      + "\ndoGenerate cannot be resolved");
  }
}
