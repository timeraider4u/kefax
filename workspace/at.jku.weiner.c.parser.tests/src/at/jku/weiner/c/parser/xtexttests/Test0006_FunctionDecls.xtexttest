//----------------------------------------------------------------------
//----------------------------------------------------------------------
package at.jku.weiner.c.parser
language parser
imports at.jku.weiner.c.common.common
//----------------------------------------------------------------------
source file="res/Test0006_FunctionDecls.c"
//----------------------------------------------------------------------
lexer-tokens
KW_VOID WHITESPACE ID SKW_LEFTPAREN
KW_CHAR WHITESPACE ID SKW_COMMA WHITESPACE
KW_FLOAT WHITESPACE ID SKW_COMMA WHITESPACE
KW_INT WHITESPACE ID 
SKW_RIGHTPAREN SKW_SEMI NEWLINE
KW_VOID WHITESPACE ID SKW_LEFTPAREN
KW_CHAR SKW_COMMA WHITESPACE
KW_FLOAT SKW_COMMA WHITESPACE
KW_INT
SKW_RIGHTPAREN SKW_SEMI NEWLINE
// LINE_COMMENT NEWLINE
IGNORED NEWLINE
//----------------------------------------------------------------------
//(common::Model units+=
	//(common::TranslationUnit 
	(Parser
		external+=
		// int do1(int a, int b, int c);
		(ExternalDeclaration 
			declaration=
			(Declaration
				specifiers=
				(DeclarationSpecifiers
					declarationSpecifier+=
					(TypeSpecifier
						name++"void"
					)
				),
				initDeclaratorList+=
				(InitDeclaratorList
					initDeclarator+=
					(InitDeclarator
						declarator=
						(Declarator
							declarator=
							(DirectDeclarator
								ident++"do1",
								declaratorSuffix+=
								(DeclaratorSuffix
									lastSuffix=
									(DirectDeclaratorLastSuffix
										parameterTypeList+=
										(ParameterTypeList
											list=
											(ParameterList
												parameterDeclaration+=
												(ParameterDeclaration
													declSpecifiers=
													(DeclarationSpecifiers
														declarationSpecifier+=
														(TypeSpecifier
															name++"char"
														)
													),
													declarator=
													(Declarator
														declarator=
														(DirectDeclarator
															ident++"c"
														)
													)
												),
												(ParameterDeclaration
													declSpecifiers=
													(DeclarationSpecifiers
														declarationSpecifier+=
														(TypeSpecifier
															name++"float"
														)
													),
													declarator=
													(Declarator
														declarator=
														(DirectDeclarator
															ident++"f"
														)
													)
												),
												(ParameterDeclaration
													declSpecifiers=
													(DeclarationSpecifiers
														declarationSpecifier+=
														(TypeSpecifier
															name++"int"
														)
													),
													declarator=
													(Declarator
														declarator=
														(DirectDeclarator
															ident++"i"
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
		),
		// void do2(int, int, int);
		(ExternalDeclaration 
			declaration=
			(Declaration
				specifiers=
				(DeclarationSpecifiers
					declarationSpecifier+=
					(TypeSpecifier
						name++"void"
					)
				),
				initDeclaratorList+=
				(InitDeclaratorList
					initDeclarator+=
					(InitDeclarator
						declarator=
						(Declarator
							declarator=
							(DirectDeclarator
								ident++"do2",
								declaratorSuffix+=
								(DeclaratorSuffix
									lastSuffix=
									(DirectDeclaratorLastSuffix
										parameterTypeList+=
										(ParameterTypeList
											list=
											(ParameterList
												parameterDeclaration+=
												(ParameterDeclaration
													declSpecifiers=
													(DeclarationSpecifiers
														declarationSpecifier+=
														(TypeSpecifier
															name++"char"
														)
													)
												),
												(ParameterDeclaration
													declSpecifiers=
													(DeclarationSpecifiers
														declarationSpecifier+=
														(TypeSpecifier
															name++"float"
														)
													)
												),
												(ParameterDeclaration
													declSpecifiers=
													(DeclarationSpecifiers
														declarationSpecifier+=
														(TypeSpecifier
															name++"int"
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
		
	)
//)
//)
//----------------------------------------------------------------------
output file="bin/Test0006_FunctionDecls.c"
expected file isSameAsInputFile

replacePatterns file="res/Patterns.txt"
//----------------------------------------------------------------------
//----------------------------------------------------------------------
