//----------------------------------------------------------------------
//----------------------------------------------------------------------
package at.jku.weiner.c.parser
language parser
imports at.jku.weiner.c.common.common
//----------------------------------------------------------------------
source file="res/Test0008_FunctionDef.c"
//----------------------------------------------------------------------
lexer-tokens
KW_VOID WHITESPACE ID SKW_LEFTPAREN
KW_CHAR WHITESPACE ID SKW_COMMA WHITESPACE
KW_FLOAT WHITESPACE ID SKW_COMMA WHITESPACE
KW_INT WHITESPACE ID
SKW_RIGHTPAREN WHITESPACE SKW_LEFTBRACE NEWLINE
SKW_RIGHTBRACE NEWLINE
//BLOCK_COMMENT NEWLINE
IGNORED NEWLINE
KW_VOID WHITESPACE ID SKW_LEFTPAREN
ID SKW_COMMA WHITESPACE
ID SKW_COMMA WHITESPACE
ID
SKW_RIGHTPAREN WHITESPACE 
//LINE_COMMENT NEWLINE
IGNORED NEWLINE
//WHITESPACE LINE_COMMENT NEWLINE
WHITESPACE IGNORED NEWLINE
WHITESPACE KW_CHAR WHITESPACE ID SKW_SEMI NEWLINE
WHITESPACE KW_FLOAT WHITESPACE ID SKW_SEMI NEWLINE
//WHITESPACE LINE_COMMENT NEWLINE
WHITESPACE IGNORED NEWLINE
WHITESPACE KW_INT WHITESPACE ID SKW_SEMI WHITESPACE 
// LINE_COMMENT NEWLINE
IGNORED NEWLINE
SKW_LEFTBRACE NEWLINE
NEWLINE
SKW_RIGHTBRACE NEWLINE
//----------------------------------------------------------------------
//(common::Model units+=
	//(common::TranslationUnit 
	(Parser
		external+=
		(ExternalDeclaration 
			functiondefHead=
			(FunctionDefHead
				funDeclSpecifiers=
				(FunctionDeclarationSpecifiers
					declarationSpecifier+=
					(TypeSpecifier
						name++"void"
					)
				),
				funDeclarator=
				(Declarator
					declarator=
					(DirectDeclarator
						ident++"do1",
						declaratorSuffix+=
						(DeclaratorSuffix
							lastSuffix=
							(DirectDeclaratorLastSuffix
								parameterTypeList+=
								(ParameterTypeList
									list=
									(ParameterList
										parameterDeclaration+=
										(ParameterDeclaration
											declSpecifiers=
											(DeclarationSpecifiers
												declarationSpecifier+=
												(TypeSpecifier
													name++"char"
												)
											),
											declarator=
											(Declarator
												declarator=
												(DirectDeclarator
													ident++"c"
												)
											)
										),
										(ParameterDeclaration
											declSpecifiers=
											(DeclarationSpecifiers
												declarationSpecifier+=
												(TypeSpecifier
													name++"float"
												)
											),
											declarator=
											(Declarator
												declarator=
												(DirectDeclarator
													ident++"f"
												)
											)
										),
										(ParameterDeclaration
											declSpecifiers=
											(DeclarationSpecifiers
												declarationSpecifier+=
												(TypeSpecifier
													name++"int"
												)
											),
											declarator=
											(Declarator
												declarator=
												(DirectDeclarator
													ident++"i"
												)
											)
										)
									)
								)
							)
						) // DeclaratorSuffix
					)
				)
			)
		),
		(ExternalDeclaration
			functionDefinition=
			(FunctionDefinition
				body=
				(BodyStatement
					
				)
			),
			functiondefHead=
			(FunctionDefHead
				funDeclSpecifiers=
				(FunctionDeclarationSpecifiers
					declarationSpecifier+=
					(TypeSpecifier
						name++"void"
					)
				),
				funDeclarator=
				(Declarator
					declarator=
					(DirectDeclarator
						ident++"do3",
						declaratorSuffix+=
						(DeclaratorSuffix
							lastSuffix=
							(DirectDeclaratorLastSuffix
								identifierList=
								(IdentifierList
									ident+=
									(MyIdentifier
										ident++"c"
									),
									(MyIdentifier
										ident++"f"
									),
									(MyIdentifier
										ident++"i"
									)
								)
							)
						)
					)
				), // funDeclarator
				funDeclaration+=
				(Declaration
					specifiers=
					(DeclarationSpecifiers
						declarationSpecifier+=
						(TypeSpecifier
							name++"char"
						)
					),
					initDeclaratorList+=
					(InitDeclaratorList
						initDeclarator+=
						(InitDeclarator
							declarator=
							(Declarator
								declarator=
								(DirectDeclarator
									ident++"c"
								)
							)
						)
					)
				),
				(Declaration
					specifiers=
					(DeclarationSpecifiers
						declarationSpecifier+=
						(TypeSpecifier
							name++"float"
						)
					),
					initDeclaratorList+=
					(InitDeclaratorList
						initDeclarator+=
						(InitDeclarator
							declarator=
							(Declarator
								declarator=
								(DirectDeclarator
									ident++"f"
								)
							)
						)
					)
				),
				(Declaration
					specifiers=
					(DeclarationSpecifiers
						declarationSpecifier+=
						(TypeSpecifier
							name++"int"
						)
					),
					initDeclaratorList+=
					(InitDeclaratorList
						initDeclarator+=
						(InitDeclarator
							declarator=
							(Declarator
								declarator=
								(DirectDeclarator
									ident++"i"
								)
							)
						)
					)
				)
			),
			functionDefinition=
			(FunctionDefinition
				body=
				(BodyStatement
					
				)
			)
		)
		
	)
//)
//)
//----------------------------------------------------------------------
output file="bin/Test0008_FunctionDef.c"
expected file isSameAsInputFile
replacePatterns file="res/Patterns.txt"
//----------------------------------------------------------------------
//----------------------------------------------------------------------
