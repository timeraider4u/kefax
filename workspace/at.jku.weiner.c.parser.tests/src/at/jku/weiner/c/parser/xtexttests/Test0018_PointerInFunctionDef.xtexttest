//----------------------------------------------------------------------
//----------------------------------------------------------------------
package at.jku.weiner.c.parser
language parser
imports at.jku.weiner.c.common.common
//----------------------------------------------------------------------
source file="res/Test0018_PointerInFunctionDef.c"
//----------------------------------------------------------------------
lexer-tokens
KW_VOID WHITESPACE ID SKW_LEFTPAREN
KW_INT WHITESPACE ID SKW_COMMA WHITESPACE
KW_CHAR WHITESPACE SKW_STAR SKW_STAR WHITESPACE ID SKW_COMMA WHITESPACE
KW_FLOAT WHITESPACE ID SKW_COMMA WHITESPACE
KW_INT WHITESPACE ID
SKW_RIGHTPAREN WHITESPACE SKW_LEFTBRACE NEWLINE
WHITESPACE SKW_LEFTPAREN ID SKW_LEFTBRACKET DECIMAL_LITERAL SKW_RIGHTBRACKET SKW_RIGHTPAREN
WHITESPACE
SKW_ASSIGN WHITESPACE ID SKW_LEFTBRACKET ID SKW_RIGHTBRACKET WHITESPACE
//SKW_PLUS WHITESPACE DECIMAL_LITERAL SKW_SEMI NEWLINE
SKW_PLUS WHITESPACE BIN_LITERAL SKW_SEMI NEWLINE
SKW_RIGHTBRACE NEWLINE
//----------------------------------------------------------------------
//(common::Model units+=
	//(common::TranslationUnit 
	(Parser
		external+=
		(ExternalDeclaration 
			functiondefHead=
			(FunctionDefHead
				funDeclSpecifiers=
				(FunctionDeclarationSpecifiers
					declarationSpecifier+=
					(TypeSpecifier
						name++"void"
					)
				),
				funDeclarator=
				(Declarator
					declarator=
					(DirectDeclarator
						id++"do1",
						declaratorSuffix+=
						(DeclaratorSuffix
							lastSuffix=
							(DirectDeclaratorLastSuffix
								parameterTypeList+=
								(ParameterTypeList
									list=
									(ParameterList
										parameterDeclaration+=
										(ParameterDeclaration
											declSpecifiers=
											(DeclarationSpecifiers
												declarationSpecifier+=
												(TypeSpecifier
													name++"int"
												)
											),
											declarator=
											(Declarator
												declarator=
												(DirectDeclarator
													id++"argc"
												),
												// this is no pointer
												// so our array of pointers is empty ;-)
												pointer=
												(Pointer 
													star+*"[]"
												)
											)
										),
										(ParameterDeclaration
											declSpecifiers=
											(DeclarationSpecifiers
												declarationSpecifier+=
												(TypeSpecifier
													name++"char"
												)
											),
											declarator=
											(Declarator
												declarator=
												(DirectDeclarator
													id++"argv"
												),
												pointer=
												(Pointer 
													star+*"[*, *]"
												)
											)
										),
										(ParameterDeclaration
											declSpecifiers=
											(DeclarationSpecifiers
												declarationSpecifier+=
												(TypeSpecifier
													name++"float"
												)
											),
											declarator=
											(Declarator
												declarator=
												(DirectDeclarator
													id++"f"
												)
											)
										),
										(ParameterDeclaration
											declSpecifiers=
											(DeclarationSpecifiers
												declarationSpecifier+=
												(TypeSpecifier
													name++"int"
												)
											),
											declarator=
											(Declarator
												declarator=
												(DirectDeclarator
													id++"i"
												)
											)
										)
									)
								)
							)
						)
					)
				)
			), // end functionDefHead
			functionDefinition=
			(FunctionDefinition
				body=
				(BodyStatement
					blockList+=
					(BlockList
						statement+=
						(Statement
							stmt=
							(ExpressionStatement
								expression=
								(AssignmentExpression
									expr=
									(PrimaryExpression
										parentheses?=true,
										expr=
										// ( ... )
										(PostfixExpression
											expr=
											(PrimaryExpression
												id++"argv"
											),
											// [9]
											suffix=
											(PostfixExpressionSuffixArray
												arrayExpr=
												(PrimaryExpression
													const=
													(common::Constant2
														dec++"9"
													)
												)
											)
										) // end postfix expression
									),
									op++"=",
									assignmentExpr=
									(AdditiveExpression
										left=
										(PostfixExpression
											expr=
											(PrimaryExpression
												id++"argv"
											),
											// [i]
											suffix=
											(PostfixExpressionSuffixArray
												arrayExpr=
												(PrimaryExpression
													id++"i"
												)
											)
										),
										right=
										(PrimaryExpression
											const=
											(common::Constant2
												bin++"0b011"
											)
										),
										op++"+"
									) // end assignment expression
								) // end expression
							) // end expression statement
						) // end statement
					) // end block list
				) // end body statement
			) // end function definition
		) // end external declaration
		
	)
//)
//)
//----------------------------------------------------------------------
output file="bin/Test0018_PointerInFunctionDef.c"
expected file isSameAsInputFile
replacePatterns file="res/Patterns.txt"
//----------------------------------------------------------------------
//----------------------------------------------------------------------
