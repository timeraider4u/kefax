//----------------------------------------------------------------------
//----------------------------------------------------------------------
package at.jku.weiner.c.parser
language parser
imports at.jku.weiner.c.common.common
//----------------------------------------------------------------------
source file="res/Test0019_HelloWorld.c"
//----------------------------------------------------------------------
lexer-tokens
LINEDIRECTIVE NEWLINE
KW_INT WHITESPACE ID SKW_LEFTPAREN
KW_INT WHITESPACE ID SKW_COMMA WHITESPACE
KW_CHAR WHITESPACE SKW_STAR SKW_STAR WHITESPACE ID
SKW_RIGHTPAREN WHITESPACE SKW_LEFTBRACE NEWLINE
WHITESPACE ID SKW_LEFTPAREN STRING_LITERAL SKW_COMMA WHITESPACE 
STRING_LITERAL SKW_RIGHTPAREN SKW_SEMI NEWLINE
WHITESPACE KW_RETURN WHITESPACE DECIMAL_LITERAL SKW_SEMI NEWLINE
SKW_RIGHTBRACE NEWLINE
//----------------------------------------------------------------------
//(common::Model units+=
	//(common::TranslationUnit 
	(Parser
		external+=
		(ExternalDeclaration 
			functiondefHead=
			(FunctionDefHead
				funDeclSpecifiers=
				(FunctionDeclarationSpecifiers
					declarationSpecifier+=
					(TypeSpecifier
						name++"int"
					)
				),
				funDeclarator=
				(Declarator
					declarator=
					(DirectDeclarator
						ident++"main",
						declaratorSuffix+=
						(DeclaratorSuffix
							lastSuffix=
							(DirectDeclaratorLastSuffix
								parameterTypeList+=
								(ParameterTypeList
									list=
									(ParameterList
										parameterDeclaration+=
										(ParameterDeclaration
											declSpecifiers=
											(DeclarationSpecifiers
												declarationSpecifier+=
												(TypeSpecifier
													name++"int"
												)
											),
											declarator=
											(Declarator
												declarator=
												(DirectDeclarator
													ident++"argc"
												)
											)
										),
										(ParameterDeclaration
											declSpecifiers=
											(DeclarationSpecifiers
												declarationSpecifier+=
												(TypeSpecifier
													name++"char"
												)
											),
											declarator=
											(Declarator
												declarator=
												(DirectDeclarator
													ident++"argv"
												),
												pointer=
												(Pointer 
													star+*"[*, *]"
												)
											)
										) 
									) // end parameter list
								)
							)
						) // DeclaratorSuffix
					)
				)
			),
			functionDefinition=
			(FunctionDefinition
				body=
				(BodyStatement
					blockList+=
					(BlockList
						statement+=
						(Statement
							stmt=
							(ExpressionStatement
								expression=
								(PostfixExpression
									expr=
									(PrimaryExpression
										ident++"printf"
									),
									suffix=
									(PostfixExpressionSuffixArgument
										argumentExpressionList=
										(ArgumentExpressionList
											expr+=
											(PrimaryExpression
												string+*"[\\\"%s\\\\n\\\"]"
											), // end expression
										
											(PrimaryExpression
												string+*"[\\\"Hello World!\\\"]"
											) // end  expression
										)
									)
								) // end expression
							) // end expression statement
						), // end first statement
						(Statement
							stmt=
							(JumpStatement
								expr=
								(PrimaryExpression
									const=
									(common::Constant2
										dec++"0"
									)
								), // end expression
								return++"return"
							) // end jump statement
						) // end second statement
					) // end block list
				) // end body statement
			)
		) // end external declaration
	)
//)
//)
//----------------------------------------------------------------------
output file="bin/Test0019_HelloWorld.c"
expected file isSameAsInputFile
replacePatterns file="res/Patterns.txt"
//----------------------------------------------------------------------
//----------------------------------------------------------------------
