//----------------------------------------------------------------------
//----------------------------------------------------------------------
package at.jku.weiner.c.parser
language parser
imports at.jku.weiner.c.common.common
//----------------------------------------------------------------------
source file="res/Test0076_EmptyStruct.c"
//----------------------------------------------------------------------
lexer-tokens
//LINE_COMMENT NEWLINE
IGNORED NEWLINE
//LINE_COMMENT NEWLINE
IGNORED NEWLINE
KW_STRUCT WHITESPACE ID WHITESPACE SKW_LEFTBRACE WHITESPACE
SKW_RIGHTBRACE WHITESPACE ID SKW_SEMI NEWLINE

//----------------------------------------------------------------------
//(common::Model units+=
	//(common::TranslationUnit 
	(Parser
		external+=
		// struct mystruct {  };
		(ExternalDeclaration
			declaration=
			(Declaration
				specifiers=
				(DeclarationSpecifiers
					declarationSpecifier+=
					(TypeSpecifier
						specifier=
						(StructOrUnionSpecifier
							type=
							(StructOrUnion
								name++"struct"
							),
							ident++"mystruct",
							braces?=true,
							structDeclList isNull
						) // end struct or union specifier
					)
				), // end declaration specifiers
				initDeclaratorList+=
				(InitDeclaratorList
					initDeclarator+=
					(InitDeclarator
						declarator=
						(Declarator
							declarator=
							(DirectDeclarator
								ident++"my"
							)
						)
					)
				)
			)
		) // end external declaration		  
	)
//)
//)
//----------------------------------------------------------------------
output file="bin/Test0037_Struct.c"
expected file isSameAsInputFile
replacePatterns file="res/Patterns.txt"
//----------------------------------------------------------------------
before
	class = at.jku.weiner.c.parser.xtexttests.TestSuite_Structs
	method = testSize
	()
after
	class = at.jku.weiner.c.parser.xtexttests.TestSuite_Structs
	method = testSize
	()
//----------------------------------------------------------------------
//----------------------------------------------------------------------
