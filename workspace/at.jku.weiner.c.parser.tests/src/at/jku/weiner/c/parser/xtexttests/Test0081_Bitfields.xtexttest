//----------------------------------------------------------------------
//----------------------------------------------------------------------
package at.jku.weiner.c.parser
language parser
imports at.jku.weiner.c.common.common
//----------------------------------------------------------------------
source file="res/Test0081_Bitfields.c"
//----------------------------------------------------------------------
lexer-tokens
KW_STRUCT WHITESPACE ID WHITESPACE SKW_LEFTBRACE NEWLINE
	WHITESPACE KW_INT WHITESPACE ID WHITESPACE SKW_COLON WHITESPACE DECIMAL_LITERAL SKW_SEMI NEWLINE
	WHITESPACE KW_INT WHITESPACE ID WHITESPACE SKW_COLON WHITESPACE DECIMAL_LITERAL SKW_SEMI NEWLINE
	WHITESPACE KW_INT WHITESPACE ID WHITESPACE SKW_COLON WHITESPACE DECIMAL_LITERAL SKW_SEMI NEWLINE
	WHITESPACE KW_INT WHITESPACE SKW_COLON WHITESPACE DECIMAL_LITERAL SKW_SEMI NEWLINE
SKW_RIGHTBRACE SKW_SEMI NEWLINE
//----------------------------------------------------------------------
//(common::Model units+=
	//(common::TranslationUnit 
	(Parser
		external+=
		// struct foo { ... };
		(ExternalDeclaration 
			declaration=
			(Declaration
				specifiers=
				(DeclarationSpecifiers
					declarationSpecifier+=
					(TypeSpecifier
						specifier=
						(StructOrUnionSpecifier
							type=
							(StructOrUnion
								name++"struct"
							),
							ident++"foo",
							structDeclList=
							(StructDeclarationList
								structDeclaration+=
								(StructDeclaration
									list=
									(SpecifierQualifierList
										typeSpecifier+=
										(TypeSpecifier
											name++"int"
										)
									),
									structDeclarationList=
									(StructDeclaratorList
										structDeclarator+=
										(StructDeclarator
											declarator=
											(Declarator
												declarator=
												(DirectDeclarator
													ident++"i"
												)
											),
											constExpr+=
											(PrimaryExpression
												const=
												(common::Constant2
													dec++"3"
												)
											)
										)
									)
								),
								(StructDeclaration
									list=
									(SpecifierQualifierList
										typeSpecifier+=
										(TypeSpecifier
											name++"int"
										)
									),
									structDeclarationList=
									(StructDeclaratorList
										structDeclarator+=
										(StructDeclarator
											declarator=
											(Declarator
												declarator=
												(DirectDeclarator
													ident++"j"
												)
											),
											constExpr+=
											(PrimaryExpression
												const=
												(common::Constant2
													dec++"4"
												)
											)
										)
									)
								),
								(StructDeclaration
									list=
									(SpecifierQualifierList
										typeSpecifier+=
										(TypeSpecifier
											name++"int"
										)
									),
									structDeclarationList=
									(StructDeclaratorList
										structDeclarator+=
										(StructDeclarator
											declarator=
											(Declarator
												declarator=
												(DirectDeclarator
													ident++"k"
												)
											),
											constExpr+=
											(PrimaryExpression
												const=
												(common::Constant2
													dec++"1"
												)
											)
										)
									)
								),
								(StructDeclaration
									list=
									(SpecifierQualifierList
										typeSpecifier+=
										(TypeSpecifier
											name++"int"
										)
									),
									structDeclarationList=
									(StructDeclaratorList
										structDeclarator+=
										(StructDeclarator
											declarator isNull,
											constExpr+=
											(PrimaryExpression
												const=
												(common::Constant2
													dec++"8"
												)
											) // end expression
										)
									)
								)
							)
						) // end struct or union specifier
					)
				)
			)
		)
	)
//)
//)
//----------------------------------------------------------------------
output file="bin/Test0081_Bitfields.c"
expected file isSameAsInputFile
replacePatterns file="res/Patterns.txt"
//----------------------------------------------------------------------
//----------------------------------------------------------------------
