/*
 * generated by Xtext 2.9.0-SNAPSHOT
 */
grammar InternalParser;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	 memoize=true;
	
	 k=2;
	
	
}

@lexer::header {
package at.jku.weiner.c.parser.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package at.jku.weiner.c.parser.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import at.jku.weiner.c.parser.services.ParserGrammarAccess;

}

@parser::members {
 
 	private ParserGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ParserGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}





// Entry rule entryRuleParser
entryRuleParser 
:
{ before(grammarAccess.getParserRule()); }
	 ruleParser
{ after(grammarAccess.getParserRule()); } 
	 EOF 
;

// Rule Parser
ruleParser
    @init {
		int stackSize = keepStackSize();
		at.jku.weiner.c.parser.utils.Scope.createFirstScope("Parser");
    }
	@after {
    		{at.jku.weiner.c.parser.utils.Scope.removeScope();}
     }:

(
{ before(grammarAccess.getParserAccess().getGroup()); }
(rule__Parser__Group__0)
{ after(grammarAccess.getParserAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleExternalDeclaration
entryRuleExternalDeclaration 
:
{ before(grammarAccess.getExternalDeclarationRule()); }
	 ruleExternalDeclaration
{ after(grammarAccess.getExternalDeclarationRule()); } 
	 EOF 
;

// Rule ExternalDeclaration
ruleExternalDeclaration
    @init {
		int stackSize = keepStackSize();
		at.jku.weiner.c.parser.utils.Scope.saveState();
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getExternalDeclarationAccess().getGroup()); }
(rule__ExternalDeclaration__Group__0)
{ after(grammarAccess.getExternalDeclarationAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleFunctionDefHead
entryRuleFunctionDefHead 
:
{ before(grammarAccess.getFunctionDefHeadRule()); }
	 ruleFunctionDefHead
{ after(grammarAccess.getFunctionDefHeadRule()); } 
	 EOF 
;

// Rule FunctionDefHead
ruleFunctionDefHead
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getFunctionDefHeadAccess().getGroup()); }
(rule__FunctionDefHead__Group__0)
{ after(grammarAccess.getFunctionDefHeadAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition 
:
{ before(grammarAccess.getFunctionDefinitionRule()); }
	 ruleFunctionDefinition
{ after(grammarAccess.getFunctionDefinitionRule()); } 
	 EOF 
;

// Rule FunctionDefinition
ruleFunctionDefinition
    @init {
		int stackSize = keepStackSize();
		at.jku.weiner.c.parser.utils.Scope.createNewScope("FunctionDefinition");
    }
	@after {
    		{at.jku.weiner.c.parser.utils.Scope.removeScope();}
     }:

(
{ before(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
(rule__FunctionDefinition__Group__0)
{ after(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleDeclaration
entryRuleDeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration
    @init {
		int stackSize = keepStackSize();
		at.jku.weiner.c.parser.utils.Scope.setTypedef(state.backtracking, false);
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getDeclarationAccess().getGroup()); }
(rule__Declaration__Group__0)
{ after(grammarAccess.getDeclarationAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleFunctionDeclarationSpecifiers
entryRuleFunctionDeclarationSpecifiers 
:
{ before(grammarAccess.getFunctionDeclarationSpecifiersRule()); }
	 ruleFunctionDeclarationSpecifiers
{ after(grammarAccess.getFunctionDeclarationSpecifiersRule()); } 
	 EOF 
;

// Rule FunctionDeclarationSpecifiers
ruleFunctionDeclarationSpecifiers
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getFunctionDeclarationSpecifiersAccess().getGroup()); }
(rule__FunctionDeclarationSpecifiers__Group__0)
{ after(grammarAccess.getFunctionDeclarationSpecifiersAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleDeclarationSpecifiers
entryRuleDeclarationSpecifiers 
:
{ before(grammarAccess.getDeclarationSpecifiersRule()); }
	 ruleDeclarationSpecifiers
{ after(grammarAccess.getDeclarationSpecifiersRule()); } 
	 EOF 
;

// Rule DeclarationSpecifiers
ruleDeclarationSpecifiers
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getDeclarationSpecifiersAccess().getGroup()); }
(rule__DeclarationSpecifiers__Group__0)
{ after(grammarAccess.getDeclarationSpecifiersAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleInitDeclaratorList
entryRuleInitDeclaratorList 
:
{ before(grammarAccess.getInitDeclaratorListRule()); }
	 ruleInitDeclaratorList
{ after(grammarAccess.getInitDeclaratorListRule()); } 
	 EOF 
;

// Rule InitDeclaratorList
ruleInitDeclaratorList
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getInitDeclaratorListAccess().getGroup()); }
(rule__InitDeclaratorList__Group__0)
{ after(grammarAccess.getInitDeclaratorListAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleInitDeclarator
entryRuleInitDeclarator 
:
{ before(grammarAccess.getInitDeclaratorRule()); }
	 ruleInitDeclarator
{ after(grammarAccess.getInitDeclaratorRule()); } 
	 EOF 
;

// Rule InitDeclarator
ruleInitDeclarator
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getInitDeclaratorAccess().getGroup()); }
(rule__InitDeclarator__Group__0)
{ after(grammarAccess.getInitDeclaratorAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleStorageClassSpecifier
entryRuleStorageClassSpecifier 
:
{ before(grammarAccess.getStorageClassSpecifierRule()); }
	 ruleStorageClassSpecifier
{ after(grammarAccess.getStorageClassSpecifierRule()); } 
	 EOF 
;

// Rule StorageClassSpecifier
ruleStorageClassSpecifier
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getStorageClassSpecifierAccess().getGroup()); }
(rule__StorageClassSpecifier__Group__0)
{ after(grammarAccess.getStorageClassSpecifierAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleTypeSpecifier
entryRuleTypeSpecifier 
:
{ before(grammarAccess.getTypeSpecifierRule()); }
	 ruleTypeSpecifier
{ after(grammarAccess.getTypeSpecifierRule()); } 
	 EOF 
;

// Rule TypeSpecifier
ruleTypeSpecifier
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getTypeSpecifierAccess().getAlternatives()); }
(rule__TypeSpecifier__Alternatives)
{ after(grammarAccess.getTypeSpecifierAccess().getAlternatives()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleTypedefName
entryRuleTypedefName 
:
{ before(grammarAccess.getTypedefNameRule()); }
	 ruleTypedefName
{ after(grammarAccess.getTypedefNameRule()); } 
	 EOF 
;

// Rule TypedefName
ruleTypedefName
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getTypedefNameAccess().getGroup()); }
(rule__TypedefName__Group__0)
{ after(grammarAccess.getTypedefNameAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleStructOrUnionSpecifier
entryRuleStructOrUnionSpecifier 
:
{ before(grammarAccess.getStructOrUnionSpecifierRule()); }
	 ruleStructOrUnionSpecifier
{ after(grammarAccess.getStructOrUnionSpecifierRule()); } 
	 EOF 
;

// Rule StructOrUnionSpecifier
ruleStructOrUnionSpecifier
    @init {
		int stackSize = keepStackSize();
		at.jku.weiner.c.parser.utils.Scope.createNewScope("StructOrUnion");
    }
	@after {
    		{at.jku.weiner.c.parser.utils.Scope.removeScope();}
     }:

(
{ before(grammarAccess.getStructOrUnionSpecifierAccess().getGroup()); }
(rule__StructOrUnionSpecifier__Group__0)
{ after(grammarAccess.getStructOrUnionSpecifierAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleStructOrUnion
entryRuleStructOrUnion 
:
{ before(grammarAccess.getStructOrUnionRule()); }
	 ruleStructOrUnion
{ after(grammarAccess.getStructOrUnionRule()); } 
	 EOF 
;

// Rule StructOrUnion
ruleStructOrUnion
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getStructOrUnionAccess().getAlternatives()); }
(rule__StructOrUnion__Alternatives)
{ after(grammarAccess.getStructOrUnionAccess().getAlternatives()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleStructDeclarationList
entryRuleStructDeclarationList 
:
{ before(grammarAccess.getStructDeclarationListRule()); }
	 ruleStructDeclarationList
{ after(grammarAccess.getStructDeclarationListRule()); } 
	 EOF 
;

// Rule StructDeclarationList
ruleStructDeclarationList
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
(
{ before(grammarAccess.getStructDeclarationListAccess().getStructDeclarationAssignment()); }
(rule__StructDeclarationList__StructDeclarationAssignment)
{ after(grammarAccess.getStructDeclarationListAccess().getStructDeclarationAssignment()); }
)
(
{ before(grammarAccess.getStructDeclarationListAccess().getStructDeclarationAssignment()); }
(rule__StructDeclarationList__StructDeclarationAssignment)*
{ after(grammarAccess.getStructDeclarationListAccess().getStructDeclarationAssignment()); }
)
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleStructDeclaration
entryRuleStructDeclaration 
:
{ before(grammarAccess.getStructDeclarationRule()); }
	 ruleStructDeclaration
{ after(grammarAccess.getStructDeclarationRule()); } 
	 EOF 
;

// Rule StructDeclaration
ruleStructDeclaration
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getStructDeclarationAccess().getGroup()); }
(rule__StructDeclaration__Group__0)
{ after(grammarAccess.getStructDeclarationAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleSpecifierQualifierList
entryRuleSpecifierQualifierList 
:
{ before(grammarAccess.getSpecifierQualifierListRule()); }
	 ruleSpecifierQualifierList
{ after(grammarAccess.getSpecifierQualifierListRule()); } 
	 EOF 
;

// Rule SpecifierQualifierList
ruleSpecifierQualifierList
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getSpecifierQualifierListAccess().getGroup()); }
(rule__SpecifierQualifierList__Group__0)
{ after(grammarAccess.getSpecifierQualifierListAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleStructDeclaratorList
entryRuleStructDeclaratorList 
:
{ before(grammarAccess.getStructDeclaratorListRule()); }
	 ruleStructDeclaratorList
{ after(grammarAccess.getStructDeclaratorListRule()); } 
	 EOF 
;

// Rule StructDeclaratorList
ruleStructDeclaratorList
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getStructDeclaratorListAccess().getGroup()); }
(rule__StructDeclaratorList__Group__0)
{ after(grammarAccess.getStructDeclaratorListAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleStructDeclarator
entryRuleStructDeclarator 
:
{ before(grammarAccess.getStructDeclaratorRule()); }
	 ruleStructDeclarator
{ after(grammarAccess.getStructDeclaratorRule()); } 
	 EOF 
;

// Rule StructDeclarator
ruleStructDeclarator
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getStructDeclaratorAccess().getAlternatives()); }
(rule__StructDeclarator__Alternatives)
{ after(grammarAccess.getStructDeclaratorAccess().getAlternatives()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleEnumSpecifier
entryRuleEnumSpecifier 
:
{ before(grammarAccess.getEnumSpecifierRule()); }
	 ruleEnumSpecifier
{ after(grammarAccess.getEnumSpecifierRule()); } 
	 EOF 
;

// Rule EnumSpecifier
ruleEnumSpecifier
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getEnumSpecifierAccess().getGroup()); }
(rule__EnumSpecifier__Group__0)
{ after(grammarAccess.getEnumSpecifierAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleEnumeratorList
entryRuleEnumeratorList 
:
{ before(grammarAccess.getEnumeratorListRule()); }
	 ruleEnumeratorList
{ after(grammarAccess.getEnumeratorListRule()); } 
	 EOF 
;

// Rule EnumeratorList
ruleEnumeratorList
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getEnumeratorListAccess().getGroup()); }
(rule__EnumeratorList__Group__0)
{ after(grammarAccess.getEnumeratorListAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleEnumerator
entryRuleEnumerator 
:
{ before(grammarAccess.getEnumeratorRule()); }
	 ruleEnumerator
{ after(grammarAccess.getEnumeratorRule()); } 
	 EOF 
;

// Rule Enumerator
ruleEnumerator
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getEnumeratorAccess().getGroup()); }
(rule__Enumerator__Group__0)
{ after(grammarAccess.getEnumeratorAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleTypeQualifier
entryRuleTypeQualifier 
:
{ before(grammarAccess.getTypeQualifierRule()); }
	 ruleTypeQualifier
{ after(grammarAccess.getTypeQualifierRule()); } 
	 EOF 
;

// Rule TypeQualifier
ruleTypeQualifier
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getTypeQualifierAccess().getGroup()); }
(rule__TypeQualifier__Group__0)
{ after(grammarAccess.getTypeQualifierAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleFunctionSpecifier
entryRuleFunctionSpecifier 
:
{ before(grammarAccess.getFunctionSpecifierRule()); }
	 ruleFunctionSpecifier
{ after(grammarAccess.getFunctionSpecifierRule()); } 
	 EOF 
;

// Rule FunctionSpecifier
ruleFunctionSpecifier
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getFunctionSpecifierAccess().getGroup()); }
(rule__FunctionSpecifier__Group__0)
{ after(grammarAccess.getFunctionSpecifierAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleDeclarator
entryRuleDeclarator 
:
{ before(grammarAccess.getDeclaratorRule()); }
	 ruleDeclarator
{ after(grammarAccess.getDeclaratorRule()); } 
	 EOF 
;

// Rule Declarator
ruleDeclarator
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getDeclaratorAccess().getGroup()); }
(rule__Declarator__Group__0)
{ after(grammarAccess.getDeclaratorAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleDirectDeclarator
entryRuleDirectDeclarator 
:
{ before(grammarAccess.getDirectDeclaratorRule()); }
	 ruleDirectDeclarator
{ after(grammarAccess.getDirectDeclaratorRule()); } 
	 EOF 
;

// Rule DirectDeclarator
ruleDirectDeclarator
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getDirectDeclaratorAccess().getGroup()); }
(rule__DirectDeclarator__Group__0)
{ after(grammarAccess.getDirectDeclaratorAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleDeclaratorSuffix
entryRuleDeclaratorSuffix 
:
{ before(grammarAccess.getDeclaratorSuffixRule()); }
	 ruleDeclaratorSuffix
{ after(grammarAccess.getDeclaratorSuffixRule()); } 
	 EOF 
;

// Rule DeclaratorSuffix
ruleDeclaratorSuffix
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getDeclaratorSuffixAccess().getGroup()); }
(rule__DeclaratorSuffix__Group__0)
{ after(grammarAccess.getDeclaratorSuffixAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleDirectDeclaratorLastSuffix
entryRuleDirectDeclaratorLastSuffix 
:
{ before(grammarAccess.getDirectDeclaratorLastSuffixRule()); }
	 ruleDirectDeclaratorLastSuffix
{ after(grammarAccess.getDirectDeclaratorLastSuffixRule()); } 
	 EOF 
;

// Rule DirectDeclaratorLastSuffix
ruleDirectDeclaratorLastSuffix
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getDirectDeclaratorLastSuffixAccess().getGroup()); }
(rule__DirectDeclaratorLastSuffix__Group__0)
{ after(grammarAccess.getDirectDeclaratorLastSuffixAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleGccDeclaratorExtension
entryRuleGccDeclaratorExtension 
:
{ before(grammarAccess.getGccDeclaratorExtensionRule()); }
	 ruleGccDeclaratorExtension
{ after(grammarAccess.getGccDeclaratorExtensionRule()); } 
	 EOF 
;

// Rule GccDeclaratorExtension
ruleGccDeclaratorExtension
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getGccDeclaratorExtensionAccess().getGroup()); }
(rule__GccDeclaratorExtension__Group__0)
{ after(grammarAccess.getGccDeclaratorExtensionAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleGccAttributeSpecifier
entryRuleGccAttributeSpecifier 
:
{ before(grammarAccess.getGccAttributeSpecifierRule()); }
	 ruleGccAttributeSpecifier
{ after(grammarAccess.getGccAttributeSpecifierRule()); } 
	 EOF 
;

// Rule GccAttributeSpecifier
ruleGccAttributeSpecifier
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getGccAttributeSpecifierAccess().getGroup()); }
(rule__GccAttributeSpecifier__Group__0)
{ after(grammarAccess.getGccAttributeSpecifierAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleGccAttributeList
entryRuleGccAttributeList 
:
{ before(grammarAccess.getGccAttributeListRule()); }
	 ruleGccAttributeList
{ after(grammarAccess.getGccAttributeListRule()); } 
	 EOF 
;

// Rule GccAttributeList
ruleGccAttributeList
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getGccAttributeListAccess().getGroup()); }
(rule__GccAttributeList__Group__0)
{ after(grammarAccess.getGccAttributeListAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleGccAttribute
entryRuleGccAttribute 
:
{ before(grammarAccess.getGccAttributeRule()); }
	 ruleGccAttribute
{ after(grammarAccess.getGccAttributeRule()); } 
	 EOF 
;

// Rule GccAttribute
ruleGccAttribute
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getGccAttributeAccess().getGroup()); }
(rule__GccAttribute__Group__0)
{ after(grammarAccess.getGccAttributeAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRulePointer
entryRulePointer 
:
{ before(grammarAccess.getPointerRule()); }
	 rulePointer
{ after(grammarAccess.getPointerRule()); } 
	 EOF 
;

// Rule Pointer
rulePointer
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getPointerAccess().getGroup()); }
(rule__Pointer__Group__0)
{ after(grammarAccess.getPointerAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleTypeQualifierList
entryRuleTypeQualifierList 
:
{ before(grammarAccess.getTypeQualifierListRule()); }
	 ruleTypeQualifierList
{ after(grammarAccess.getTypeQualifierListRule()); } 
	 EOF 
;

// Rule TypeQualifierList
ruleTypeQualifierList
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getTypeQualifierListAccess().getGroup()); }
(rule__TypeQualifierList__Group__0)
{ after(grammarAccess.getTypeQualifierListAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleParameterTypeList
entryRuleParameterTypeList 
:
{ before(grammarAccess.getParameterTypeListRule()); }
	 ruleParameterTypeList
{ after(grammarAccess.getParameterTypeListRule()); } 
	 EOF 
;

// Rule ParameterTypeList
ruleParameterTypeList
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getParameterTypeListAccess().getGroup()); }
(rule__ParameterTypeList__Group__0)
{ after(grammarAccess.getParameterTypeListAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleParameterList
entryRuleParameterList 
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleParameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule ParameterList
ruleParameterList
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getParameterListAccess().getGroup()); }
(rule__ParameterList__Group__0)
{ after(grammarAccess.getParameterListAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleParameterDeclaration
entryRuleParameterDeclaration 
:
{ before(grammarAccess.getParameterDeclarationRule()); }
	 ruleParameterDeclaration
{ after(grammarAccess.getParameterDeclarationRule()); } 
	 EOF 
;

// Rule ParameterDeclaration
ruleParameterDeclaration
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getParameterDeclarationAccess().getGroup()); }
(rule__ParameterDeclaration__Group__0)
{ after(grammarAccess.getParameterDeclarationAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleIdentifierList
entryRuleIdentifierList 
:
{ before(grammarAccess.getIdentifierListRule()); }
	 ruleIdentifierList
{ after(grammarAccess.getIdentifierListRule()); } 
	 EOF 
;

// Rule IdentifierList
ruleIdentifierList
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getIdentifierListAccess().getGroup()); }
(rule__IdentifierList__Group__0)
{ after(grammarAccess.getIdentifierListAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleMyIdentifier
entryRuleMyIdentifier 
:
{ before(grammarAccess.getMyIdentifierRule()); }
	 ruleMyIdentifier
{ after(grammarAccess.getMyIdentifierRule()); } 
	 EOF 
;

// Rule MyIdentifier
ruleMyIdentifier
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getMyIdentifierAccess().getGroup()); }
(rule__MyIdentifier__Group__0)
{ after(grammarAccess.getMyIdentifierAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleTypeName
entryRuleTypeName 
:
{ before(grammarAccess.getTypeNameRule()); }
	 ruleTypeName
{ after(grammarAccess.getTypeNameRule()); } 
	 EOF 
;

// Rule TypeName
ruleTypeName
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getTypeNameAccess().getGroup()); }
(rule__TypeName__Group__0)
{ after(grammarAccess.getTypeNameAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleAbstractDeclarator
entryRuleAbstractDeclarator 
:
{ before(grammarAccess.getAbstractDeclaratorRule()); }
	 ruleAbstractDeclarator
{ after(grammarAccess.getAbstractDeclaratorRule()); } 
	 EOF 
;

// Rule AbstractDeclarator
ruleAbstractDeclarator
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getAbstractDeclaratorAccess().getGroup()); }
(rule__AbstractDeclarator__Group__0)
{ after(grammarAccess.getAbstractDeclaratorAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleDirectAbstractDeclarator
entryRuleDirectAbstractDeclarator 
:
{ before(grammarAccess.getDirectAbstractDeclaratorRule()); }
	 ruleDirectAbstractDeclarator
{ after(grammarAccess.getDirectAbstractDeclaratorRule()); } 
	 EOF 
;

// Rule DirectAbstractDeclarator
ruleDirectAbstractDeclarator
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getDirectAbstractDeclaratorAccess().getGroup()); }
(rule__DirectAbstractDeclarator__Group__0)
{ after(grammarAccess.getDirectAbstractDeclaratorAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleAbstractDeclaratorSuffix
entryRuleAbstractDeclaratorSuffix 
:
{ before(grammarAccess.getAbstractDeclaratorSuffixRule()); }
	 ruleAbstractDeclaratorSuffix
{ after(grammarAccess.getAbstractDeclaratorSuffixRule()); } 
	 EOF 
;

// Rule AbstractDeclaratorSuffix
ruleAbstractDeclaratorSuffix
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getGroup()); }
(rule__AbstractDeclaratorSuffix__Group__0)
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleInitializer
entryRuleInitializer 
:
{ before(grammarAccess.getInitializerRule()); }
	 ruleInitializer
{ after(grammarAccess.getInitializerRule()); } 
	 EOF 
;

// Rule Initializer
ruleInitializer
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getInitializerAccess().getGroup()); }
(rule__Initializer__Group__0)
{ after(grammarAccess.getInitializerAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleInitializerList
entryRuleInitializerList 
:
{ before(grammarAccess.getInitializerListRule()); }
	 ruleInitializerList
{ after(grammarAccess.getInitializerListRule()); } 
	 EOF 
;

// Rule InitializerList
ruleInitializerList
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getInitializerListAccess().getGroup()); }
(rule__InitializerList__Group__0)
{ after(grammarAccess.getInitializerListAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleInit
entryRuleInit 
:
{ before(grammarAccess.getInitRule()); }
	 ruleInit
{ after(grammarAccess.getInitRule()); } 
	 EOF 
;

// Rule Init
ruleInit
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getInitAccess().getGroup()); }
(rule__Init__Group__0)
{ after(grammarAccess.getInitAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleBlockList
entryRuleBlockList 
:
{ before(grammarAccess.getBlockListRule()); }
	 ruleBlockList
{ after(grammarAccess.getBlockListRule()); } 
	 EOF 
;

// Rule BlockList
ruleBlockList
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getBlockListAccess().getGroup()); }
(rule__BlockList__Group__0)
{ after(grammarAccess.getBlockListAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getStatementAccess().getGroup()); }
(rule__Statement__Group__0)
{ after(grammarAccess.getStatementAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleLabeledStatement
entryRuleLabeledStatement 
:
{ before(grammarAccess.getLabeledStatementRule()); }
	 ruleLabeledStatement
{ after(grammarAccess.getLabeledStatementRule()); } 
	 EOF 
;

// Rule LabeledStatement
ruleLabeledStatement
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getLabeledStatementAccess().getGroup()); }
(rule__LabeledStatement__Group__0)
{ after(grammarAccess.getLabeledStatementAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleCompoundStatement
entryRuleCompoundStatement 
:
{ before(grammarAccess.getCompoundStatementRule()); }
	 ruleCompoundStatement
{ after(grammarAccess.getCompoundStatementRule()); } 
	 EOF 
;

// Rule CompoundStatement
ruleCompoundStatement
    @init {
		int stackSize = keepStackSize();
		at.jku.weiner.c.parser.utils.Scope.createNewScope("CompoundStatement");
    }
	@after {
    		{at.jku.weiner.c.parser.utils.Scope.removeScope();}
     }:

(
{ before(grammarAccess.getCompoundStatementAccess().getGroup()); }
(rule__CompoundStatement__Group__0)
{ after(grammarAccess.getCompoundStatementAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleBodyStatement
entryRuleBodyStatement 
:
{ before(grammarAccess.getBodyStatementRule()); }
	 ruleBodyStatement
{ after(grammarAccess.getBodyStatementRule()); } 
	 EOF 
;

// Rule BodyStatement
ruleBodyStatement
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getBodyStatementAccess().getGroup()); }
(rule__BodyStatement__Group__0)
{ after(grammarAccess.getBodyStatementAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleExpressionStatement
entryRuleExpressionStatement 
:
{ before(grammarAccess.getExpressionStatementRule()); }
	 ruleExpressionStatement
{ after(grammarAccess.getExpressionStatementRule()); } 
	 EOF 
;

// Rule ExpressionStatement
ruleExpressionStatement
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getExpressionStatementAccess().getGroup()); }
(rule__ExpressionStatement__Group__0)
{ after(grammarAccess.getExpressionStatementAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleSelectionStatement
entryRuleSelectionStatement 
:
{ before(grammarAccess.getSelectionStatementRule()); }
	 ruleSelectionStatement
{ after(grammarAccess.getSelectionStatementRule()); } 
	 EOF 
;

// Rule SelectionStatement
ruleSelectionStatement
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getSelectionStatementAccess().getGroup()); }
(rule__SelectionStatement__Group__0)
{ after(grammarAccess.getSelectionStatementAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleIterationStatement
entryRuleIterationStatement 
:
{ before(grammarAccess.getIterationStatementRule()); }
	 ruleIterationStatement
{ after(grammarAccess.getIterationStatementRule()); } 
	 EOF 
;

// Rule IterationStatement
ruleIterationStatement
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getIterationStatementAccess().getGroup()); }
(rule__IterationStatement__Group__0)
{ after(grammarAccess.getIterationStatementAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleJumpStatement
entryRuleJumpStatement 
:
{ before(grammarAccess.getJumpStatementRule()); }
	 ruleJumpStatement
{ after(grammarAccess.getJumpStatementRule()); } 
	 EOF 
;

// Rule JumpStatement
ruleJumpStatement
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getJumpStatementAccess().getGroup()); }
(rule__JumpStatement__Group__0)
{ after(grammarAccess.getJumpStatementAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleAsmStatement
entryRuleAsmStatement 
:
{ before(grammarAccess.getAsmStatementRule()); }
	 ruleAsmStatement
{ after(grammarAccess.getAsmStatementRule()); } 
	 EOF 
;

// Rule AsmStatement
ruleAsmStatement
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getAsmStatementAccess().getGroup()); }
(rule__AsmStatement__Group__0)
{ after(grammarAccess.getAsmStatementAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleAsmLine
entryRuleAsmLine 
:
{ before(grammarAccess.getAsmLineRule()); }
	 ruleAsmLine
{ after(grammarAccess.getAsmLineRule()); } 
	 EOF 
;

// Rule AsmLine
ruleAsmLine
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getAsmLineAccess().getGroup()); }
(rule__AsmLine__Group__0)
{ after(grammarAccess.getAsmLineAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleAsmSymbolicName
entryRuleAsmSymbolicName 
:
{ before(grammarAccess.getAsmSymbolicNameRule()); }
	 ruleAsmSymbolicName
{ after(grammarAccess.getAsmSymbolicNameRule()); } 
	 EOF 
;

// Rule AsmSymbolicName
ruleAsmSymbolicName
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getAsmSymbolicNameAccess().getGroup()); }
(rule__AsmSymbolicName__Group__0)
{ after(grammarAccess.getAsmSymbolicNameAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleAsmLineWithColon
entryRuleAsmLineWithColon 
:
{ before(grammarAccess.getAsmLineWithColonRule()); }
	 ruleAsmLineWithColon
{ after(grammarAccess.getAsmLineWithColonRule()); } 
	 EOF 
;

// Rule AsmLineWithColon
ruleAsmLineWithColon
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getAsmLineWithColonAccess().getGroup()); }
(rule__AsmLineWithColon__Group__0)
{ after(grammarAccess.getAsmLineWithColonAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleAsmLineWithoutColon
entryRuleAsmLineWithoutColon 
:
{ before(grammarAccess.getAsmLineWithoutColonRule()); }
	 ruleAsmLineWithoutColon
{ after(grammarAccess.getAsmLineWithoutColonRule()); } 
	 EOF 
;

// Rule AsmLineWithoutColon
ruleAsmLineWithoutColon
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getAsmLineWithoutColonAccess().getGroup()); }
(rule__AsmLineWithoutColon__Group__0)
{ after(grammarAccess.getAsmLineWithoutColonAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleDesignation
entryRuleDesignation 
:
{ before(grammarAccess.getDesignationRule()); }
	 ruleDesignation
{ after(grammarAccess.getDesignationRule()); } 
	 EOF 
;

// Rule Designation
ruleDesignation
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getDesignationAccess().getGroup()); }
(rule__Designation__Group__0)
{ after(grammarAccess.getDesignationAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleDesignatorList
entryRuleDesignatorList 
:
{ before(grammarAccess.getDesignatorListRule()); }
	 ruleDesignatorList
{ after(grammarAccess.getDesignatorListRule()); } 
	 EOF 
;

// Rule DesignatorList
ruleDesignatorList
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getDesignatorListAccess().getGroup()); }
(rule__DesignatorList__Group__0)
{ after(grammarAccess.getDesignatorListAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleDesignator
entryRuleDesignator 
:
{ before(grammarAccess.getDesignatorRule()); }
	 ruleDesignator
{ after(grammarAccess.getDesignatorRule()); } 
	 EOF 
;

// Rule Designator
ruleDesignator
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getDesignatorAccess().getGroup()); }
(rule__Designator__Group__0)
{ after(grammarAccess.getDesignatorAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleAssignmentExpression
entryRuleAssignmentExpression 
:
{ before(grammarAccess.getAssignmentExpressionRule()); }
	 ruleAssignmentExpression
{ after(grammarAccess.getAssignmentExpressionRule()); } 
	 EOF 
;

// Rule AssignmentExpression
ruleAssignmentExpression
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getAssignmentExpressionAccess().getAlternatives()); }
(rule__AssignmentExpression__Alternatives)
{ after(grammarAccess.getAssignmentExpressionAccess().getAlternatives()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleLvalue
entryRuleLvalue 
:
{ before(grammarAccess.getLvalueRule()); }
	 ruleLvalue
{ after(grammarAccess.getLvalueRule()); } 
	 EOF 
;

// Rule Lvalue
ruleLvalue
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getLvalueAccess().getUnaryExpressionParserRuleCall()); }
	ruleUnaryExpression
{ after(grammarAccess.getLvalueAccess().getUnaryExpressionParserRuleCall()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleAssignmentOperator
entryRuleAssignmentOperator 
:
{ before(grammarAccess.getAssignmentOperatorRule()); }
	 ruleAssignmentOperator
{ after(grammarAccess.getAssignmentOperatorRule()); } 
	 EOF 
;

// Rule AssignmentOperator
ruleAssignmentOperator
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); }
(rule__AssignmentOperator__Alternatives)
{ after(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression 
:
{ before(grammarAccess.getConditionalExpressionRule()); }
	 ruleConditionalExpression
{ after(grammarAccess.getConditionalExpressionRule()); } 
	 EOF 
;

// Rule ConditionalExpression
ruleConditionalExpression
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getConditionalExpressionAccess().getGroup()); }
(rule__ConditionalExpression__Group__0)
{ after(grammarAccess.getConditionalExpressionAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleLogicalOrExpression
entryRuleLogicalOrExpression 
:
{ before(grammarAccess.getLogicalOrExpressionRule()); }
	 ruleLogicalOrExpression
{ after(grammarAccess.getLogicalOrExpressionRule()); } 
	 EOF 
;

// Rule LogicalOrExpression
ruleLogicalOrExpression
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup()); }
(rule__LogicalOrExpression__Group__0)
{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleLogicalAndExpression
entryRuleLogicalAndExpression 
:
{ before(grammarAccess.getLogicalAndExpressionRule()); }
	 ruleLogicalAndExpression
{ after(grammarAccess.getLogicalAndExpressionRule()); } 
	 EOF 
;

// Rule LogicalAndExpression
ruleLogicalAndExpression
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup()); }
(rule__LogicalAndExpression__Group__0)
{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleInclusiveOrExpression
entryRuleInclusiveOrExpression 
:
{ before(grammarAccess.getInclusiveOrExpressionRule()); }
	 ruleInclusiveOrExpression
{ after(grammarAccess.getInclusiveOrExpressionRule()); } 
	 EOF 
;

// Rule InclusiveOrExpression
ruleInclusiveOrExpression
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getGroup()); }
(rule__InclusiveOrExpression__Group__0)
{ after(grammarAccess.getInclusiveOrExpressionAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleExclusiveOrExpression
entryRuleExclusiveOrExpression 
:
{ before(grammarAccess.getExclusiveOrExpressionRule()); }
	 ruleExclusiveOrExpression
{ after(grammarAccess.getExclusiveOrExpressionRule()); } 
	 EOF 
;

// Rule ExclusiveOrExpression
ruleExclusiveOrExpression
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getGroup()); }
(rule__ExclusiveOrExpression__Group__0)
{ after(grammarAccess.getExclusiveOrExpressionAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleAndExpression
entryRuleAndExpression 
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
(rule__AndExpression__Group__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression 
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
(rule__EqualityExpression__Group__0)
{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression 
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
(rule__RelationalExpression__Group__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleShiftExpression
entryRuleShiftExpression 
:
{ before(grammarAccess.getShiftExpressionRule()); }
	 ruleShiftExpression
{ after(grammarAccess.getShiftExpressionRule()); } 
	 EOF 
;

// Rule ShiftExpression
ruleShiftExpression
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getShiftExpressionAccess().getGroup()); }
(rule__ShiftExpression__Group__0)
{ after(grammarAccess.getShiftExpressionAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression 
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
(rule__AdditiveExpression__Group__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression 
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
(rule__MultiplicativeExpression__Group__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleCastExpression
entryRuleCastExpression 
:
{ before(grammarAccess.getCastExpressionRule()); }
	 ruleCastExpression
{ after(grammarAccess.getCastExpressionRule()); } 
	 EOF 
;

// Rule CastExpression
ruleCastExpression
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getCastExpressionAccess().getAlternatives()); }
(rule__CastExpression__Alternatives)
{ after(grammarAccess.getCastExpressionAccess().getAlternatives()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression 
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
(rule__UnaryExpression__Alternatives)
{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleUnaryOperator
entryRuleUnaryOperator 
:
{ before(grammarAccess.getUnaryOperatorRule()); }
	 ruleUnaryOperator
{ after(grammarAccess.getUnaryOperatorRule()); } 
	 EOF 
;

// Rule UnaryOperator
ruleUnaryOperator
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
(rule__UnaryOperator__Alternatives)
{ after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRulePostfixExpression
entryRulePostfixExpression 
:
{ before(grammarAccess.getPostfixExpressionRule()); }
	 rulePostfixExpression
{ after(grammarAccess.getPostfixExpressionRule()); } 
	 EOF 
;

// Rule PostfixExpression
rulePostfixExpression
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getPostfixExpressionAccess().getGroup()); }
(rule__PostfixExpression__Group__0)
{ after(grammarAccess.getPostfixExpressionAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRulePostfixExpressionSuffixArray
entryRulePostfixExpressionSuffixArray 
:
{ before(grammarAccess.getPostfixExpressionSuffixArrayRule()); }
	 rulePostfixExpressionSuffixArray
{ after(grammarAccess.getPostfixExpressionSuffixArrayRule()); } 
	 EOF 
;

// Rule PostfixExpressionSuffixArray
rulePostfixExpressionSuffixArray
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getPostfixExpressionSuffixArrayAccess().getGroup()); }
(rule__PostfixExpressionSuffixArray__Group__0)
{ after(grammarAccess.getPostfixExpressionSuffixArrayAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRulePostfixExpressionSuffixArgument
entryRulePostfixExpressionSuffixArgument 
:
{ before(grammarAccess.getPostfixExpressionSuffixArgumentRule()); }
	 rulePostfixExpressionSuffixArgument
{ after(grammarAccess.getPostfixExpressionSuffixArgumentRule()); } 
	 EOF 
;

// Rule PostfixExpressionSuffixArgument
rulePostfixExpressionSuffixArgument
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getPostfixExpressionSuffixArgumentAccess().getGroup()); }
(rule__PostfixExpressionSuffixArgument__Group__0)
{ after(grammarAccess.getPostfixExpressionSuffixArgumentAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRulePostfixExpressionSuffixDot
entryRulePostfixExpressionSuffixDot 
:
{ before(grammarAccess.getPostfixExpressionSuffixDotRule()); }
	 rulePostfixExpressionSuffixDot
{ after(grammarAccess.getPostfixExpressionSuffixDotRule()); } 
	 EOF 
;

// Rule PostfixExpressionSuffixDot
rulePostfixExpressionSuffixDot
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getPostfixExpressionSuffixDotAccess().getGroup()); }
(rule__PostfixExpressionSuffixDot__Group__0)
{ after(grammarAccess.getPostfixExpressionSuffixDotAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRulePostfixExpressionSuffixArrow
entryRulePostfixExpressionSuffixArrow 
:
{ before(grammarAccess.getPostfixExpressionSuffixArrowRule()); }
	 rulePostfixExpressionSuffixArrow
{ after(grammarAccess.getPostfixExpressionSuffixArrowRule()); } 
	 EOF 
;

// Rule PostfixExpressionSuffixArrow
rulePostfixExpressionSuffixArrow
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getPostfixExpressionSuffixArrowAccess().getGroup()); }
(rule__PostfixExpressionSuffixArrow__Group__0)
{ after(grammarAccess.getPostfixExpressionSuffixArrowAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRulePostfixExpressionSuffixPlusPlus
entryRulePostfixExpressionSuffixPlusPlus 
:
{ before(grammarAccess.getPostfixExpressionSuffixPlusPlusRule()); }
	 rulePostfixExpressionSuffixPlusPlus
{ after(grammarAccess.getPostfixExpressionSuffixPlusPlusRule()); } 
	 EOF 
;

// Rule PostfixExpressionSuffixPlusPlus
rulePostfixExpressionSuffixPlusPlus
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getPostfixExpressionSuffixPlusPlusAccess().getGroup()); }
(rule__PostfixExpressionSuffixPlusPlus__Group__0)
{ after(grammarAccess.getPostfixExpressionSuffixPlusPlusAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRulePostfixExpressionSuffixMinusMinus
entryRulePostfixExpressionSuffixMinusMinus 
:
{ before(grammarAccess.getPostfixExpressionSuffixMinusMinusRule()); }
	 rulePostfixExpressionSuffixMinusMinus
{ after(grammarAccess.getPostfixExpressionSuffixMinusMinusRule()); } 
	 EOF 
;

// Rule PostfixExpressionSuffixMinusMinus
rulePostfixExpressionSuffixMinusMinus
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getPostfixExpressionSuffixMinusMinusAccess().getGroup()); }
(rule__PostfixExpressionSuffixMinusMinus__Group__0)
{ after(grammarAccess.getPostfixExpressionSuffixMinusMinusAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleArgumentExpressionList
entryRuleArgumentExpressionList 
:
{ before(grammarAccess.getArgumentExpressionListRule()); }
	 ruleArgumentExpressionList
{ after(grammarAccess.getArgumentExpressionListRule()); } 
	 EOF 
;

// Rule ArgumentExpressionList
ruleArgumentExpressionList
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getArgumentExpressionListAccess().getGroup()); }
(rule__ArgumentExpressionList__Group__0)
{ after(grammarAccess.getArgumentExpressionListAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup()); }
(rule__PrimaryExpression__Group__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleConstantExpression
entryRuleConstantExpression 
:
{ before(grammarAccess.getConstantExpressionRule()); }
	 ruleConstantExpression
{ after(grammarAccess.getConstantExpressionRule()); } 
	 EOF 
;

// Rule ConstantExpression
ruleConstantExpression
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getConstantExpressionAccess().getConditionalExpressionParserRuleCall()); }
	ruleConditionalExpression
{ after(grammarAccess.getConstantExpressionAccess().getConditionalExpressionParserRuleCall()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleParserKeywords
entryRuleParserKeywords 
:
{ before(grammarAccess.getParserKeywordsRule()); }
	 ruleParserKeywords
{ after(grammarAccess.getParserKeywordsRule()); } 
	 EOF 
;

// Rule ParserKeywords
ruleParserKeywords
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getParserKeywordsAccess().getAlternatives()); }
(rule__ParserKeywords__Alternatives)
{ after(grammarAccess.getParserKeywordsAccess().getAlternatives()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleConstant1
entryRuleConstant1 
:
{ before(grammarAccess.getConstant1Rule()); }
	 ruleConstant1
{ after(grammarAccess.getConstant1Rule()); } 
	 EOF 
;

// Rule Constant1
ruleConstant1
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getConstant1Access().getAlternatives()); }
(rule__Constant1__Alternatives)
{ after(grammarAccess.getConstant1Access().getAlternatives()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleConstant2
entryRuleConstant2 
:
{ before(grammarAccess.getConstant2Rule()); }
	 ruleConstant2
{ after(grammarAccess.getConstant2Rule()); } 
	 EOF 
;

// Rule Constant2
ruleConstant2
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getConstant2Access().getGroup()); }
(rule__Constant2__Group__0)
{ after(grammarAccess.getConstant2Access().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleEllipsis
entryRuleEllipsis 
:
{ before(grammarAccess.getEllipsisRule()); }
	 ruleEllipsis
{ after(grammarAccess.getEllipsisRule()); } 
	 EOF 
;

// Rule Ellipsis
ruleEllipsis
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getEllipsisAccess().getGroup()); }
(rule__Ellipsis__Group__0)
{ after(grammarAccess.getEllipsisAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleHexLiteral
entryRuleHexLiteral 
:
{ before(grammarAccess.getHexLiteralRule()); }
	 ruleHexLiteral
{ after(grammarAccess.getHexLiteralRule()); } 
	 EOF 
;

// Rule HexLiteral
ruleHexLiteral
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getHexLiteralAccess().getHEX_LITERALTerminalRuleCall()); }
	RULE_HEX_LITERAL
{ after(grammarAccess.getHexLiteralAccess().getHEX_LITERALTerminalRuleCall()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleOctalLiteral
entryRuleOctalLiteral 
:
{ before(grammarAccess.getOctalLiteralRule()); }
	 ruleOctalLiteral
{ after(grammarAccess.getOctalLiteralRule()); } 
	 EOF 
;

// Rule OctalLiteral
ruleOctalLiteral
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getOctalLiteralAccess().getOCTAL_LITERALTerminalRuleCall()); }
	RULE_OCTAL_LITERAL
{ after(grammarAccess.getOctalLiteralAccess().getOCTAL_LITERALTerminalRuleCall()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleDecimalLiteral
entryRuleDecimalLiteral 
:
{ before(grammarAccess.getDecimalLiteralRule()); }
	 ruleDecimalLiteral
{ after(grammarAccess.getDecimalLiteralRule()); } 
	 EOF 
;

// Rule DecimalLiteral
ruleDecimalLiteral
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getDecimalLiteralAccess().getDECIMAL_LITERALTerminalRuleCall()); }
	RULE_DECIMAL_LITERAL
{ after(grammarAccess.getDecimalLiteralAccess().getDECIMAL_LITERALTerminalRuleCall()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleCharLiteral
entryRuleCharLiteral 
:
{ before(grammarAccess.getCharLiteralRule()); }
	 ruleCharLiteral
{ after(grammarAccess.getCharLiteralRule()); } 
	 EOF 
;

// Rule CharLiteral
ruleCharLiteral
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getCharLiteralAccess().getCHAR_LITERALTerminalRuleCall()); }
	RULE_CHAR_LITERAL
{ after(grammarAccess.getCharLiteralAccess().getCHAR_LITERALTerminalRuleCall()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getStringLiteralAccess().getSTRING_LITERALTerminalRuleCall()); }
	RULE_STRING_LITERAL
{ after(grammarAccess.getStringLiteralAccess().getSTRING_LITERALTerminalRuleCall()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleFloatLiteral
entryRuleFloatLiteral 
:
{ before(grammarAccess.getFloatLiteralRule()); }
	 ruleFloatLiteral
{ after(grammarAccess.getFloatLiteralRule()); } 
	 EOF 
;

// Rule FloatLiteral
ruleFloatLiteral
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getFloatLiteralAccess().getFLOAT_LITERALTerminalRuleCall()); }
	RULE_FLOAT_LITERAL
{ after(grammarAccess.getFloatLiteralAccess().getFLOAT_LITERALTerminalRuleCall()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleBinLiteral
entryRuleBinLiteral 
:
{ before(grammarAccess.getBinLiteralRule()); }
	 ruleBinLiteral
{ after(grammarAccess.getBinLiteralRule()); } 
	 EOF 
;

// Rule BinLiteral
ruleBinLiteral
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getBinLiteralAccess().getBIN_LITERALTerminalRuleCall()); }
	RULE_BIN_LITERAL
{ after(grammarAccess.getBinLiteralAccess().getBIN_LITERALTerminalRuleCall()); }
)



;
finally {
	restoreStackSize(stackSize);
}




rule__ExternalDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExternalDeclarationAccess().getGroup_1_0()); }
(rule__ExternalDeclaration__Group_1_0__0)
{ after(grammarAccess.getExternalDeclarationAccess().getGroup_1_0()); }
)



    |{{at.jku.weiner.c.parser.utils.Scope.restoreState();}}

(
{ before(grammarAccess.getExternalDeclarationAccess().getDeclarationAssignment_1_1()); }
(rule__ExternalDeclaration__DeclarationAssignment_1_1)
{ after(grammarAccess.getExternalDeclarationAccess().getDeclarationAssignment_1_1()); }
)



    |{{at.jku.weiner.c.parser.utils.Scope.restoreState();}}

(
{ before(grammarAccess.getExternalDeclarationAccess().getSemiAssignment_1_2()); }
(rule__ExternalDeclaration__SemiAssignment_1_2)
{ after(grammarAccess.getExternalDeclarationAccess().getSemiAssignment_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclarationSpecifiers__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getFunctionDeclarationSpecifiersAccess().getDeclarationSpecifierAssignment_1_0()); }
(rule__FunctionDeclarationSpecifiers__DeclarationSpecifierAssignment_1_0)
{ after(grammarAccess.getFunctionDeclarationSpecifiersAccess().getDeclarationSpecifierAssignment_1_0()); }
)



    |
(
{ before(grammarAccess.getFunctionDeclarationSpecifiersAccess().getDeclarationSpecifierAssignment_1_1()); }
(rule__FunctionDeclarationSpecifiers__DeclarationSpecifierAssignment_1_1)
{ after(grammarAccess.getFunctionDeclarationSpecifiersAccess().getDeclarationSpecifierAssignment_1_1()); }
)



    |
(
{ before(grammarAccess.getFunctionDeclarationSpecifiersAccess().getDeclarationSpecifierAssignment_1_2()); }
(rule__FunctionDeclarationSpecifiers__DeclarationSpecifierAssignment_1_2)
{ after(grammarAccess.getFunctionDeclarationSpecifiersAccess().getDeclarationSpecifierAssignment_1_2()); }
)



    |
(
{ before(grammarAccess.getFunctionDeclarationSpecifiersAccess().getDeclarationSpecifierAssignment_1_3()); }
(rule__FunctionDeclarationSpecifiers__DeclarationSpecifierAssignment_1_3)
{ after(grammarAccess.getFunctionDeclarationSpecifiersAccess().getDeclarationSpecifierAssignment_1_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationSpecifiers__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierAssignment_1_0()); }
(rule__DeclarationSpecifiers__DeclarationSpecifierAssignment_1_0)
{ after(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierAssignment_1_0()); }
)



    |
(
{ before(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierAssignment_1_1()); }
(rule__DeclarationSpecifiers__DeclarationSpecifierAssignment_1_1)
{ after(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierAssignment_1_1()); }
)



    |
(
{ before(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierAssignment_1_2()); }
(rule__DeclarationSpecifiers__DeclarationSpecifierAssignment_1_2)
{ after(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierAssignment_1_2()); }
)



    |
(
{ before(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierAssignment_1_3()); }
(rule__DeclarationSpecifiers__DeclarationSpecifierAssignment_1_3)
{ after(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierAssignment_1_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__StorageClassSpecifier__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStorageClassSpecifierAccess().getNameAssignment_1_0()); }
(rule__StorageClassSpecifier__NameAssignment_1_0)
{ after(grammarAccess.getStorageClassSpecifierAccess().getNameAssignment_1_0()); }
)

{{at.jku.weiner.c.parser.utils.Scope.setTypedef(state.backtracking, true);}}


    |
(
{ before(grammarAccess.getStorageClassSpecifierAccess().getNameAssignment_1_1()); }
(rule__StorageClassSpecifier__NameAssignment_1_1)
{ after(grammarAccess.getStorageClassSpecifierAccess().getNameAssignment_1_1()); }
)



    |
(
{ before(grammarAccess.getStorageClassSpecifierAccess().getNameAssignment_1_2()); }
(rule__StorageClassSpecifier__NameAssignment_1_2)
{ after(grammarAccess.getStorageClassSpecifierAccess().getNameAssignment_1_2()); }
)



    |
(
{ before(grammarAccess.getStorageClassSpecifierAccess().getNameAssignment_1_3()); }
(rule__StorageClassSpecifier__NameAssignment_1_3)
{ after(grammarAccess.getStorageClassSpecifierAccess().getNameAssignment_1_3()); }
)



    |
(
{ before(grammarAccess.getStorageClassSpecifierAccess().getNameAssignment_1_4()); }
(rule__StorageClassSpecifier__NameAssignment_1_4)
{ after(grammarAccess.getStorageClassSpecifierAccess().getNameAssignment_1_4()); }
)



    |
(
{ before(grammarAccess.getStorageClassSpecifierAccess().getNameAssignment_1_5()); }
(rule__StorageClassSpecifier__NameAssignment_1_5)
{ after(grammarAccess.getStorageClassSpecifierAccess().getNameAssignment_1_5()); }
)



    |
(
{ before(grammarAccess.getStorageClassSpecifierAccess().getNameAssignment_1_6()); }
(rule__StorageClassSpecifier__NameAssignment_1_6)
{ after(grammarAccess.getStorageClassSpecifierAccess().getNameAssignment_1_6()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getGroup_0()); }
(rule__TypeSpecifier__Group_0__0)
{ after(grammarAccess.getTypeSpecifierAccess().getGroup_0()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment_1()); }
(rule__TypeSpecifier__NameAssignment_1)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment_1()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment_2()); }
(rule__TypeSpecifier__NameAssignment_2)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment_2()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment_3()); }
(rule__TypeSpecifier__NameAssignment_3)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment_3()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment_4()); }
(rule__TypeSpecifier__NameAssignment_4)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment_4()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment_5()); }
(rule__TypeSpecifier__NameAssignment_5)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment_5()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment_6()); }
(rule__TypeSpecifier__NameAssignment_6)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment_6()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment_7()); }
(rule__TypeSpecifier__NameAssignment_7)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment_7()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment_8()); }
(rule__TypeSpecifier__NameAssignment_8)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment_8()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment_9()); }
(rule__TypeSpecifier__NameAssignment_9)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment_9()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment_10()); }
(rule__TypeSpecifier__NameAssignment_10)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment_10()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment_11()); }
(rule__TypeSpecifier__NameAssignment_11)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment_11()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment_12()); }
(rule__TypeSpecifier__NameAssignment_12)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment_12()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment_13()); }
(rule__TypeSpecifier__NameAssignment_13)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment_13()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment_14()); }
(rule__TypeSpecifier__NameAssignment_14)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment_14()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment_15()); }
(rule__TypeSpecifier__NameAssignment_15)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment_15()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment_16()); }
(rule__TypeSpecifier__NameAssignment_16)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment_16()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment_17()); }
(rule__TypeSpecifier__NameAssignment_17)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment_17()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getGroup_18()); }
(rule__TypeSpecifier__Group_18__0)
{ after(grammarAccess.getTypeSpecifierAccess().getGroup_18()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getSpecifierAssignment_19()); }
(rule__TypeSpecifier__SpecifierAssignment_19)
{ after(grammarAccess.getTypeSpecifierAccess().getSpecifierAssignment_19()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getSpecifierAssignment_20()); }
(rule__TypeSpecifier__SpecifierAssignment_20)
{ after(grammarAccess.getTypeSpecifierAccess().getSpecifierAssignment_20()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getTypeAssignment_21()); }
(rule__TypeSpecifier__TypeAssignment_21)
{ after(grammarAccess.getTypeSpecifierAccess().getTypeAssignment_21()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getGroup_22()); }
(rule__TypeSpecifier__Group_22__0)
{ after(grammarAccess.getTypeSpecifierAccess().getGroup_22()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getGroup_23()); }
(rule__TypeSpecifier__Group_23__0)
{ after(grammarAccess.getTypeSpecifierAccess().getGroup_23()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Alternatives_18_1_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getExtTypeAssignment_18_1_1_0()); }
(rule__TypeSpecifier__ExtTypeAssignment_18_1_1_0)
{ after(grammarAccess.getTypeSpecifierAccess().getExtTypeAssignment_18_1_1_0()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getExtTypeAssignment_18_1_1_1()); }
(rule__TypeSpecifier__ExtTypeAssignment_18_1_1_1)
{ after(grammarAccess.getTypeSpecifierAccess().getExtTypeAssignment_18_1_1_1()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getExtTypeAssignment_18_1_1_2()); }
(rule__TypeSpecifier__ExtTypeAssignment_18_1_1_2)
{ after(grammarAccess.getTypeSpecifierAccess().getExtTypeAssignment_18_1_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__TypeOfAlternatives_22_0_0
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getTypeOfKW_TYPEOF1TerminalRuleCall_22_0_0_0()); }
	RULE_KW_TYPEOF1
{ after(grammarAccess.getTypeSpecifierAccess().getTypeOfKW_TYPEOF1TerminalRuleCall_22_0_0_0()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getTypeOfKW_TYPEOF2TerminalRuleCall_22_0_0_1()); }
	RULE_KW_TYPEOF2
{ after(grammarAccess.getTypeSpecifierAccess().getTypeOfKW_TYPEOF2TerminalRuleCall_22_0_0_1()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getTypeOfKW_TYPEOF3TerminalRuleCall_22_0_0_2()); }
	RULE_KW_TYPEOF3
{ after(grammarAccess.getTypeSpecifierAccess().getTypeOfKW_TYPEOF3TerminalRuleCall_22_0_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Alternatives_22_1_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getTypeNameAssignment_22_1_1_0()); }
(rule__TypeSpecifier__TypeNameAssignment_22_1_1_0)
{ after(grammarAccess.getTypeSpecifierAccess().getTypeNameAssignment_22_1_1_0()); }
)



    |
(
{ before(grammarAccess.getTypeSpecifierAccess().getConstExprAssignment_22_1_1_1()); }
(rule__TypeSpecifier__ConstExprAssignment_22_1_1_1)
{ after(grammarAccess.getTypeSpecifierAccess().getConstExprAssignment_22_1_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructOrUnionSpecifierAccess().getGroup_2_0()); }
(rule__StructOrUnionSpecifier__Group_2_0__0)
{ after(grammarAccess.getStructOrUnionSpecifierAccess().getGroup_2_0()); }
)



    |
(
{ before(grammarAccess.getStructOrUnionSpecifierAccess().getIdAssignment_2_1()); }
(rule__StructOrUnionSpecifier__IdAssignment_2_1)
{ after(grammarAccess.getStructOrUnionSpecifierAccess().getIdAssignment_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnion__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructOrUnionAccess().getGroup_0()); }
(rule__StructOrUnion__Group_0__0)
{ after(grammarAccess.getStructOrUnionAccess().getGroup_0()); }
)



    |
(
{ before(grammarAccess.getStructOrUnionAccess().getNameAssignment_1()); }
(rule__StructOrUnion__NameAssignment_1)
{ after(grammarAccess.getStructOrUnionAccess().getNameAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__SpecifierQualifierList__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getSpecifierQualifierListAccess().getTypeSpecifierAssignment_1_0()); }
(rule__SpecifierQualifierList__TypeSpecifierAssignment_1_0)
{ after(grammarAccess.getSpecifierQualifierListAccess().getTypeSpecifierAssignment_1_0()); }
)



    |
(
{ before(grammarAccess.getSpecifierQualifierListAccess().getTypeQualifierAssignment_1_1()); }
(rule__SpecifierQualifierList__TypeQualifierAssignment_1_1)
{ after(grammarAccess.getSpecifierQualifierListAccess().getTypeQualifierAssignment_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructDeclaratorAccess().getGroup_0()); }
(rule__StructDeclarator__Group_0__0)
{ after(grammarAccess.getStructDeclaratorAccess().getGroup_0()); }
)



    |
(
{ before(grammarAccess.getStructDeclaratorAccess().getGroup_1()); }
(rule__StructDeclarator__Group_1__0)
{ after(grammarAccess.getStructDeclaratorAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumSpecifierAccess().getGroup_1_1_0()); }
(rule__EnumSpecifier__Group_1_1_0__0)
{ after(grammarAccess.getEnumSpecifierAccess().getGroup_1_1_0()); }
)



    |
(
{ before(grammarAccess.getEnumSpecifierAccess().getGroup_1_1_1()); }
(rule__EnumSpecifier__Group_1_1_1__0)
{ after(grammarAccess.getEnumSpecifierAccess().getGroup_1_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__TypeQualifier__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeQualifierAccess().getTypeAssignment_1_0()); }
(rule__TypeQualifier__TypeAssignment_1_0)
{ after(grammarAccess.getTypeQualifierAccess().getTypeAssignment_1_0()); }
)



    |
(
{ before(grammarAccess.getTypeQualifierAccess().getTypeAssignment_1_1()); }
(rule__TypeQualifier__TypeAssignment_1_1)
{ after(grammarAccess.getTypeQualifierAccess().getTypeAssignment_1_1()); }
)



    |
(
{ before(grammarAccess.getTypeQualifierAccess().getTypeAssignment_1_2()); }
(rule__TypeQualifier__TypeAssignment_1_2)
{ after(grammarAccess.getTypeQualifierAccess().getTypeAssignment_1_2()); }
)



    |
(
{ before(grammarAccess.getTypeQualifierAccess().getTypeAssignment_1_3()); }
(rule__TypeQualifier__TypeAssignment_1_3)
{ after(grammarAccess.getTypeQualifierAccess().getTypeAssignment_1_3()); }
)



    |
(
{ before(grammarAccess.getTypeQualifierAccess().getTypeAssignment_1_4()); }
(rule__TypeQualifier__TypeAssignment_1_4)
{ after(grammarAccess.getTypeQualifierAccess().getTypeAssignment_1_4()); }
)



    |
(
{ before(grammarAccess.getTypeQualifierAccess().getTypeAssignment_1_5()); }
(rule__TypeQualifier__TypeAssignment_1_5)
{ after(grammarAccess.getTypeQualifierAccess().getTypeAssignment_1_5()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSpecifier__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getFunctionSpecifierAccess().getAlternatives_1_0()); }
(rule__FunctionSpecifier__Alternatives_1_0)
{ after(grammarAccess.getFunctionSpecifierAccess().getAlternatives_1_0()); }
)



    |
(
{ before(grammarAccess.getFunctionSpecifierAccess().getGccAttributeSpecifierAssignment_1_1()); }
(rule__FunctionSpecifier__GccAttributeSpecifierAssignment_1_1)
{ after(grammarAccess.getFunctionSpecifierAccess().getGccAttributeSpecifierAssignment_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSpecifier__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getFunctionSpecifierAccess().getNameAssignment_1_0_0()); }
(rule__FunctionSpecifier__NameAssignment_1_0_0)
{ after(grammarAccess.getFunctionSpecifierAccess().getNameAssignment_1_0_0()); }
)



    |
(
{ before(grammarAccess.getFunctionSpecifierAccess().getNameAssignment_1_0_1()); }
(rule__FunctionSpecifier__NameAssignment_1_0_1)
{ after(grammarAccess.getFunctionSpecifierAccess().getNameAssignment_1_0_1()); }
)



    |
(
{ before(grammarAccess.getFunctionSpecifierAccess().getNameAssignment_1_0_2()); }
(rule__FunctionSpecifier__NameAssignment_1_0_2)
{ after(grammarAccess.getFunctionSpecifierAccess().getNameAssignment_1_0_2()); }
)



    |
(
{ before(grammarAccess.getFunctionSpecifierAccess().getNameAssignment_1_0_3()); }
(rule__FunctionSpecifier__NameAssignment_1_0_3)
{ after(grammarAccess.getFunctionSpecifierAccess().getNameAssignment_1_0_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
{{at.jku.weiner.c.parser.utils.Scope.setTemp(input);}}

(
{ before(grammarAccess.getDirectDeclaratorAccess().getIdAssignment_1_0()); }
(rule__DirectDeclarator__IdAssignment_1_0)
{ after(grammarAccess.getDirectDeclaratorAccess().getIdAssignment_1_0()); }
)

{{at.jku.weiner.c.parser.utils.Scope.addTypedefIfIsTypedef(state.backtracking);}}


    |
(
{ before(grammarAccess.getDirectDeclaratorAccess().getGroup_1_1()); }
(rule__DirectDeclarator__Group_1_1__0)
{ after(grammarAccess.getDirectDeclaratorAccess().getGroup_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaratorSuffix__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDeclaratorSuffixAccess().getGroup_1_0()); }
(rule__DeclaratorSuffix__Group_1_0__0)
{ after(grammarAccess.getDeclaratorSuffixAccess().getGroup_1_0()); }
)



    |
(
{ before(grammarAccess.getDeclaratorSuffixAccess().getGroup_1_1()); }
(rule__DeclaratorSuffix__Group_1_1__0)
{ after(grammarAccess.getDeclaratorSuffixAccess().getGroup_1_1()); }
)



    |
(
{ before(grammarAccess.getDeclaratorSuffixAccess().getLastSuffixAssignment_1_2()); }
(rule__DeclaratorSuffix__LastSuffixAssignment_1_2)
{ after(grammarAccess.getDeclaratorSuffixAccess().getLastSuffixAssignment_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclaratorLastSuffix__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDirectDeclaratorLastSuffixAccess().getParameterTypeListAssignment_2_0()); }
(rule__DirectDeclaratorLastSuffix__ParameterTypeListAssignment_2_0)
{ after(grammarAccess.getDirectDeclaratorLastSuffixAccess().getParameterTypeListAssignment_2_0()); }
)



    |
(
{ before(grammarAccess.getDirectDeclaratorLastSuffixAccess().getIdentifierListAssignment_2_1()); }
(rule__DirectDeclaratorLastSuffix__IdentifierListAssignment_2_1)?
{ after(grammarAccess.getDirectDeclaratorLastSuffixAccess().getIdentifierListAssignment_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__GccDeclaratorExtension__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccDeclaratorExtensionAccess().getGroup_1_0()); }
(rule__GccDeclaratorExtension__Group_1_0__0)
{ after(grammarAccess.getGccDeclaratorExtensionAccess().getGroup_1_0()); }
)



    |
(
{ before(grammarAccess.getGccDeclaratorExtensionAccess().getGccAttributeSpecifierAssignment_1_1()); }
(rule__GccDeclaratorExtension__GccAttributeSpecifierAssignment_1_1)
{ after(grammarAccess.getGccDeclaratorExtensionAccess().getGccAttributeSpecifierAssignment_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__GccDeclaratorExtension__AsmAlternatives_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccDeclaratorExtensionAccess().getAsmKW_ASM1TerminalRuleCall_1_0_0_0_0()); }
	RULE_KW_ASM1
{ after(grammarAccess.getGccDeclaratorExtensionAccess().getAsmKW_ASM1TerminalRuleCall_1_0_0_0_0()); }
)



    |
(
{ before(grammarAccess.getGccDeclaratorExtensionAccess().getAsmKW_ASM2TerminalRuleCall_1_0_0_0_1()); }
	RULE_KW_ASM2
{ after(grammarAccess.getGccDeclaratorExtensionAccess().getAsmKW_ASM2TerminalRuleCall_1_0_0_0_1()); }
)



    |
(
{ before(grammarAccess.getGccDeclaratorExtensionAccess().getAsmKW_ASM3TerminalRuleCall_1_0_0_0_2()); }
	RULE_KW_ASM3
{ after(grammarAccess.getGccDeclaratorExtensionAccess().getAsmKW_ASM3TerminalRuleCall_1_0_0_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttributeSpecifier__AttributeAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccAttributeSpecifierAccess().getAttributeKW_ATTRIBUTE2TerminalRuleCall_1_0_0()); }
	RULE_KW_ATTRIBUTE2
{ after(grammarAccess.getGccAttributeSpecifierAccess().getAttributeKW_ATTRIBUTE2TerminalRuleCall_1_0_0()); }
)



    |
(
{ before(grammarAccess.getGccAttributeSpecifierAccess().getAttributeKW_ATTRIBUTE3TerminalRuleCall_1_0_1()); }
	RULE_KW_ATTRIBUTE3
{ after(grammarAccess.getGccAttributeSpecifierAccess().getAttributeKW_ATTRIBUTE3TerminalRuleCall_1_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttribute__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccAttributeAccess().getIdAssignment_1_0()); }
(rule__GccAttribute__IdAssignment_1_0)
{ after(grammarAccess.getGccAttributeAccess().getIdAssignment_1_0()); }
)



    |
(
{ before(grammarAccess.getGccAttributeAccess().getConstAssignment_1_1()); }
(rule__GccAttribute__ConstAssignment_1_1)
{ after(grammarAccess.getGccAttributeAccess().getConstAssignment_1_1()); }
)



    |
(
{ before(grammarAccess.getGccAttributeAccess().getKeywordAssignment_1_2()); }
(rule__GccAttribute__KeywordAssignment_1_2)
{ after(grammarAccess.getGccAttributeAccess().getKeywordAssignment_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPointerAccess().getStarAssignment_1_0_0()); }
(rule__Pointer__StarAssignment_1_0_0)
{ after(grammarAccess.getPointerAccess().getStarAssignment_1_0_0()); }
)



    |
(
{ before(grammarAccess.getPointerAccess().getCaretAssignment_1_0_1()); }
(rule__Pointer__CaretAssignment_1_0_1)
{ after(grammarAccess.getPointerAccess().getCaretAssignment_1_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getParameterDeclarationAccess().getDeclaratorAssignment_2_0()); }
(rule__ParameterDeclaration__DeclaratorAssignment_2_0)
{ after(grammarAccess.getParameterDeclarationAccess().getDeclaratorAssignment_2_0()); }
)



    |
(
{ before(grammarAccess.getParameterDeclarationAccess().getAbstractDeclatorAssignment_2_1()); }
(rule__ParameterDeclaration__AbstractDeclatorAssignment_2_1)?
{ after(grammarAccess.getParameterDeclarationAccess().getAbstractDeclatorAssignment_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclarator__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorAccess().getPointerAssignment_1_0()); }
(rule__AbstractDeclarator__PointerAssignment_1_0)
{ after(grammarAccess.getAbstractDeclaratorAccess().getPointerAssignment_1_0()); }
)



    |
(
{ before(grammarAccess.getAbstractDeclaratorAccess().getGroup_1_1()); }
(rule__AbstractDeclarator__Group_1_1__0)
{ after(grammarAccess.getAbstractDeclaratorAccess().getGroup_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDirectAbstractDeclaratorAccess().getGroup_1_0()); }
(rule__DirectAbstractDeclarator__Group_1_0__0)
{ after(grammarAccess.getDirectAbstractDeclaratorAccess().getGroup_1_0()); }
)



    |
(
{ before(grammarAccess.getDirectAbstractDeclaratorAccess().getAbstractDeclaratorSuffixAssignment_1_1()); }
(rule__DirectAbstractDeclarator__AbstractDeclaratorSuffixAssignment_1_1)
{ after(grammarAccess.getDirectAbstractDeclaratorAccess().getAbstractDeclaratorSuffixAssignment_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getGroup_1_0()); }
(rule__AbstractDeclaratorSuffix__Group_1_0__0)
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getGroup_1_0()); }
)



    |
(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getGroup_1_1()); }
(rule__AbstractDeclaratorSuffix__Group_1_1__0)
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getGroup_1_1()); }
)



    |
(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getGroup_1_2()); }
(rule__AbstractDeclaratorSuffix__Group_1_2__0)
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getGroup_1_2()); }
)



    |
(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getGroup_1_3()); }
(rule__AbstractDeclaratorSuffix__Group_1_3__0)
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getGroup_1_3()); }
)



    |
(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getGroup_1_4()); }
(rule__AbstractDeclaratorSuffix__Group_1_4__0)
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getGroup_1_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitializerAccess().getExprAssignment_1_0()); }
(rule__Initializer__ExprAssignment_1_0)
{ after(grammarAccess.getInitializerAccess().getExprAssignment_1_0()); }
)



    |
(
{ before(grammarAccess.getInitializerAccess().getGroup_1_1()); }
(rule__Initializer__Group_1_1__0)
{ after(grammarAccess.getInitializerAccess().getGroup_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__BlockList__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBlockListAccess().getDeclarationAssignment_1_0()); }
(rule__BlockList__DeclarationAssignment_1_0)
{ after(grammarAccess.getBlockListAccess().getDeclarationAssignment_1_0()); }
)



    |
(
{ before(grammarAccess.getBlockListAccess().getStatementAssignment_1_1()); }
(rule__BlockList__StatementAssignment_1_1)
{ after(grammarAccess.getBlockListAccess().getStatementAssignment_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStatementAccess().getStmtAssignment_1_0()); }
(rule__Statement__StmtAssignment_1_0)
{ after(grammarAccess.getStatementAccess().getStmtAssignment_1_0()); }
)



    |
(
{ before(grammarAccess.getStatementAccess().getStmtAssignment_1_1()); }
(rule__Statement__StmtAssignment_1_1)
{ after(grammarAccess.getStatementAccess().getStmtAssignment_1_1()); }
)



    |
(
{ before(grammarAccess.getStatementAccess().getStmtAssignment_1_2()); }
(rule__Statement__StmtAssignment_1_2)
{ after(grammarAccess.getStatementAccess().getStmtAssignment_1_2()); }
)



    |
(
{ before(grammarAccess.getStatementAccess().getStmtAssignment_1_3()); }
(rule__Statement__StmtAssignment_1_3)
{ after(grammarAccess.getStatementAccess().getStmtAssignment_1_3()); }
)



    |
(
{ before(grammarAccess.getStatementAccess().getStmtAssignment_1_4()); }
(rule__Statement__StmtAssignment_1_4)
{ after(grammarAccess.getStatementAccess().getStmtAssignment_1_4()); }
)



    |
(
{ before(grammarAccess.getStatementAccess().getStmtAssignment_1_5()); }
(rule__Statement__StmtAssignment_1_5)
{ after(grammarAccess.getStatementAccess().getStmtAssignment_1_5()); }
)



    |
(
{ before(grammarAccess.getStatementAccess().getStmtAssignment_1_6()); }
(rule__Statement__StmtAssignment_1_6)
{ after(grammarAccess.getStatementAccess().getStmtAssignment_1_6()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLabeledStatementAccess().getGroup_1_0()); }
(rule__LabeledStatement__Group_1_0__0)
{ after(grammarAccess.getLabeledStatementAccess().getGroup_1_0()); }
)



    |
(
{ before(grammarAccess.getLabeledStatementAccess().getGroup_1_1()); }
(rule__LabeledStatement__Group_1_1__0)
{ after(grammarAccess.getLabeledStatementAccess().getGroup_1_1()); }
)



    |
(
{ before(grammarAccess.getLabeledStatementAccess().getGroup_1_2()); }
(rule__LabeledStatement__Group_1_2__0)
{ after(grammarAccess.getLabeledStatementAccess().getGroup_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Alternatives_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLabeledStatementAccess().getGroup_1_1_1_0()); }
(rule__LabeledStatement__Group_1_1_1_0__0)
{ after(grammarAccess.getLabeledStatementAccess().getGroup_1_1_1_0()); }
)



    |
(
{ before(grammarAccess.getLabeledStatementAccess().getExprAssignment_1_1_1_1()); }
(rule__LabeledStatement__ExprAssignment_1_1_1_1)
{ after(grammarAccess.getLabeledStatementAccess().getExprAssignment_1_1_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getSelectionStatementAccess().getGroup_1_0()); }
(rule__SelectionStatement__Group_1_0__0)
{ after(grammarAccess.getSelectionStatementAccess().getGroup_1_0()); }
)



    |
(
{ before(grammarAccess.getSelectionStatementAccess().getGroup_1_1()); }
(rule__SelectionStatement__Group_1_1__0)
{ after(grammarAccess.getSelectionStatementAccess().getGroup_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getGroup_1_0()); }
(rule__IterationStatement__Group_1_0__0)
{ after(grammarAccess.getIterationStatementAccess().getGroup_1_0()); }
)



    |
(
{ before(grammarAccess.getIterationStatementAccess().getGroup_1_1()); }
(rule__IterationStatement__Group_1_1__0)
{ after(grammarAccess.getIterationStatementAccess().getGroup_1_1()); }
)



    |
(
{ before(grammarAccess.getIterationStatementAccess().getGroup_1_2()); }
(rule__IterationStatement__Group_1_2__0)
{ after(grammarAccess.getIterationStatementAccess().getGroup_1_2()); }
)



    |
(
{ before(grammarAccess.getIterationStatementAccess().getGroup_1_3()); }
(rule__IterationStatement__Group_1_3__0)
{ after(grammarAccess.getIterationStatementAccess().getGroup_1_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getJumpStatementAccess().getGroup_1_0()); }
(rule__JumpStatement__Group_1_0__0)
{ after(grammarAccess.getJumpStatementAccess().getGroup_1_0()); }
)



    |
(
{ before(grammarAccess.getJumpStatementAccess().getGroup_1_1()); }
(rule__JumpStatement__Group_1_1__0)
{ after(grammarAccess.getJumpStatementAccess().getGroup_1_1()); }
)



    |
(
{ before(grammarAccess.getJumpStatementAccess().getGroup_1_2()); }
(rule__JumpStatement__Group_1_2__0)
{ after(grammarAccess.getJumpStatementAccess().getGroup_1_2()); }
)



    |
(
{ before(grammarAccess.getJumpStatementAccess().getGroup_1_3()); }
(rule__JumpStatement__Group_1_3__0)
{ after(grammarAccess.getJumpStatementAccess().getGroup_1_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__AsmStatement__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmStatementAccess().getAsmAssignment_1_0()); }
(rule__AsmStatement__AsmAssignment_1_0)
{ after(grammarAccess.getAsmStatementAccess().getAsmAssignment_1_0()); }
)



    |
(
{ before(grammarAccess.getAsmStatementAccess().getAsmAssignment_1_1()); }
(rule__AsmStatement__AsmAssignment_1_1)
{ after(grammarAccess.getAsmStatementAccess().getAsmAssignment_1_1()); }
)



    |
(
{ before(grammarAccess.getAsmStatementAccess().getAsmAssignment_1_2()); }
(rule__AsmStatement__AsmAssignment_1_2)
{ after(grammarAccess.getAsmStatementAccess().getAsmAssignment_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__AsmStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmStatementAccess().getVolatileAssignment_2_0()); }
(rule__AsmStatement__VolatileAssignment_2_0)
{ after(grammarAccess.getAsmStatementAccess().getVolatileAssignment_2_0()); }
)



    |
(
{ before(grammarAccess.getAsmStatementAccess().getVolatileAssignment_2_1()); }
(rule__AsmStatement__VolatileAssignment_2_1)
{ after(grammarAccess.getAsmStatementAccess().getVolatileAssignment_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDesignatorAccess().getGroup_1_0()); }
(rule__Designator__Group_1_0__0)
{ after(grammarAccess.getDesignatorAccess().getGroup_1_0()); }
)



    |
(
{ before(grammarAccess.getDesignatorAccess().getGroup_1_1()); }
(rule__Designator__Group_1_1__0)
{ after(grammarAccess.getDesignatorAccess().getGroup_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAssignmentExpressionAccess().getGroup_0()); }
(rule__AssignmentExpression__Group_0__0)
{ after(grammarAccess.getAssignmentExpressionAccess().getGroup_0()); }
)



    |
(
{ before(grammarAccess.getAssignmentExpressionAccess().getConditionalExpressionParserRuleCall_1()); }
	ruleConditionalExpression
{ after(grammarAccess.getAssignmentExpressionAccess().getConditionalExpressionParserRuleCall_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAssignmentOperatorAccess().getSKW_ASSIGNTerminalRuleCall_0()); }
	RULE_SKW_ASSIGN
{ after(grammarAccess.getAssignmentOperatorAccess().getSKW_ASSIGNTerminalRuleCall_0()); }
)



    |
(
{ before(grammarAccess.getAssignmentOperatorAccess().getSTARASSIGNTerminalRuleCall_1()); }
	RULE_STARASSIGN
{ after(grammarAccess.getAssignmentOperatorAccess().getSTARASSIGNTerminalRuleCall_1()); }
)



    |
(
{ before(grammarAccess.getAssignmentOperatorAccess().getDIVASSIGNTerminalRuleCall_2()); }
	RULE_DIVASSIGN
{ after(grammarAccess.getAssignmentOperatorAccess().getDIVASSIGNTerminalRuleCall_2()); }
)



    |
(
{ before(grammarAccess.getAssignmentOperatorAccess().getMODASSIGNTerminalRuleCall_3()); }
	RULE_MODASSIGN
{ after(grammarAccess.getAssignmentOperatorAccess().getMODASSIGNTerminalRuleCall_3()); }
)



    |
(
{ before(grammarAccess.getAssignmentOperatorAccess().getPLUSASSIGNTerminalRuleCall_4()); }
	RULE_PLUSASSIGN
{ after(grammarAccess.getAssignmentOperatorAccess().getPLUSASSIGNTerminalRuleCall_4()); }
)



    |
(
{ before(grammarAccess.getAssignmentOperatorAccess().getMINUSASSIGNTerminalRuleCall_5()); }
	RULE_MINUSASSIGN
{ after(grammarAccess.getAssignmentOperatorAccess().getMINUSASSIGNTerminalRuleCall_5()); }
)



    |
(
{ before(grammarAccess.getAssignmentOperatorAccess().getLEFTSHIFTASSIGNTerminalRuleCall_6()); }
	RULE_LEFTSHIFTASSIGN
{ after(grammarAccess.getAssignmentOperatorAccess().getLEFTSHIFTASSIGNTerminalRuleCall_6()); }
)



    |
(
{ before(grammarAccess.getAssignmentOperatorAccess().getRIGHTSHIFTASSIGNTerminalRuleCall_7()); }
	RULE_RIGHTSHIFTASSIGN
{ after(grammarAccess.getAssignmentOperatorAccess().getRIGHTSHIFTASSIGNTerminalRuleCall_7()); }
)



    |
(
{ before(grammarAccess.getAssignmentOperatorAccess().getANDASSIGNTerminalRuleCall_8()); }
	RULE_ANDASSIGN
{ after(grammarAccess.getAssignmentOperatorAccess().getANDASSIGNTerminalRuleCall_8()); }
)



    |
(
{ before(grammarAccess.getAssignmentOperatorAccess().getXORASSIGNTerminalRuleCall_9()); }
	RULE_XORASSIGN
{ after(grammarAccess.getAssignmentOperatorAccess().getXORASSIGNTerminalRuleCall_9()); }
)



    |
(
{ before(grammarAccess.getAssignmentOperatorAccess().getORASSIGNTerminalRuleCall_10()); }
	RULE_ORASSIGN
{ after(grammarAccess.getAssignmentOperatorAccess().getORASSIGNTerminalRuleCall_10()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_1_0()); }
(rule__EqualityExpression__OpAssignment_1_1_0)
{ after(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_1_0()); }
)



    |
(
{ before(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_1_1()); }
(rule__EqualityExpression__OpAssignment_1_1_1)
{ after(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1_0()); }
(rule__RelationalExpression__OpAssignment_1_1_0)
{ after(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1_0()); }
)



    |
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1_1()); }
(rule__RelationalExpression__OpAssignment_1_1_1)
{ after(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1_1()); }
)



    |
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1_2()); }
(rule__RelationalExpression__OpAssignment_1_1_2)
{ after(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1_2()); }
)



    |
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1_3()); }
(rule__RelationalExpression__OpAssignment_1_1_3)
{ after(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShiftExpressionAccess().getOpAssignment_1_1_0()); }
(rule__ShiftExpression__OpAssignment_1_1_0)
{ after(grammarAccess.getShiftExpressionAccess().getOpAssignment_1_1_0()); }
)



    |
(
{ before(grammarAccess.getShiftExpressionAccess().getOpAssignment_1_1_1()); }
(rule__ShiftExpression__OpAssignment_1_1_1)
{ after(grammarAccess.getShiftExpressionAccess().getOpAssignment_1_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_1_0()); }
(rule__AdditiveExpression__OpAssignment_1_1_0)
{ after(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_1_0()); }
)



    |
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_1_1()); }
(rule__AdditiveExpression__OpAssignment_1_1_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_1_0()); }
(rule__MultiplicativeExpression__OpAssignment_1_1_0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_1_0()); }
)



    |
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_1_1()); }
(rule__MultiplicativeExpression__OpAssignment_1_1_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_1_1()); }
)



    |
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_1_2()); }
(rule__MultiplicativeExpression__OpAssignment_1_1_2)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getCastExpressionAccess().getGroup_0()); }
(rule__CastExpression__Group_0__0)
{ after(grammarAccess.getCastExpressionAccess().getGroup_0()); }
)



    |
(
{ before(grammarAccess.getCastExpressionAccess().getUnaryExpressionParserRuleCall_1()); }
	ruleUnaryExpression
{ after(grammarAccess.getCastExpressionAccess().getUnaryExpressionParserRuleCall_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getPostfixExpressionParserRuleCall_0()); }
	rulePostfixExpression
{ after(grammarAccess.getUnaryExpressionAccess().getPostfixExpressionParserRuleCall_0()); }
)



    |
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_1()); }
(rule__UnaryExpression__Group_1__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_1()); }
)



    |
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_2()); }
(rule__UnaryExpression__Group_2__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_2()); }
)



    |
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_3()); }
(rule__UnaryExpression__Group_3__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_3()); }
)



    |
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_4()); }
(rule__UnaryExpression__Group_4__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_4()); }
)



    |
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_5()); }
(rule__UnaryExpression__Group_5__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_5()); }
)



    |
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_6()); }
(rule__UnaryExpression__Group_6__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_6()); }
)



    |
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_7()); }
(rule__UnaryExpression__Group_7__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_7()); }
)



    |
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_8()); }
(rule__UnaryExpression__Group_8__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_8()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__AlignOfAlternatives_6_1_0
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getAlignOfKW_ALIGNOF1TerminalRuleCall_6_1_0_0()); }
	RULE_KW_ALIGNOF1
{ after(grammarAccess.getUnaryExpressionAccess().getAlignOfKW_ALIGNOF1TerminalRuleCall_6_1_0_0()); }
)



    |
(
{ before(grammarAccess.getUnaryExpressionAccess().getAlignOfKW_ALIGNOF2TerminalRuleCall_6_1_0_1()); }
	RULE_KW_ALIGNOF2
{ after(grammarAccess.getUnaryExpressionAccess().getAlignOfKW_ALIGNOF2TerminalRuleCall_6_1_0_1()); }
)



    |
(
{ before(grammarAccess.getUnaryExpressionAccess().getAlignOfKW_ALIGNOF3TerminalRuleCall_6_1_0_2()); }
	RULE_KW_ALIGNOF3
{ after(grammarAccess.getUnaryExpressionAccess().getAlignOfKW_ALIGNOF3TerminalRuleCall_6_1_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__AlignOfAlternatives_7_1_0
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getAlignOfKW_ALIGNOF1TerminalRuleCall_7_1_0_0()); }
	RULE_KW_ALIGNOF1
{ after(grammarAccess.getUnaryExpressionAccess().getAlignOfKW_ALIGNOF1TerminalRuleCall_7_1_0_0()); }
)



    |
(
{ before(grammarAccess.getUnaryExpressionAccess().getAlignOfKW_ALIGNOF2TerminalRuleCall_7_1_0_1()); }
	RULE_KW_ALIGNOF2
{ after(grammarAccess.getUnaryExpressionAccess().getAlignOfKW_ALIGNOF2TerminalRuleCall_7_1_0_1()); }
)



    |
(
{ before(grammarAccess.getUnaryExpressionAccess().getAlignOfKW_ALIGNOF3TerminalRuleCall_7_1_0_2()); }
	RULE_KW_ALIGNOF3
{ after(grammarAccess.getUnaryExpressionAccess().getAlignOfKW_ALIGNOF3TerminalRuleCall_7_1_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryOperatorAccess().getSKW_ANDTerminalRuleCall_0()); }
	RULE_SKW_AND
{ after(grammarAccess.getUnaryOperatorAccess().getSKW_ANDTerminalRuleCall_0()); }
)



    |
(
{ before(grammarAccess.getUnaryOperatorAccess().getSKW_STARTerminalRuleCall_1()); }
	RULE_SKW_STAR
{ after(grammarAccess.getUnaryOperatorAccess().getSKW_STARTerminalRuleCall_1()); }
)



    |
(
{ before(grammarAccess.getUnaryOperatorAccess().getSKW_PLUSTerminalRuleCall_2()); }
	RULE_SKW_PLUS
{ after(grammarAccess.getUnaryOperatorAccess().getSKW_PLUSTerminalRuleCall_2()); }
)



    |
(
{ before(grammarAccess.getUnaryOperatorAccess().getSKW_MINUSTerminalRuleCall_3()); }
	RULE_SKW_MINUS
{ after(grammarAccess.getUnaryOperatorAccess().getSKW_MINUSTerminalRuleCall_3()); }
)



    |
(
{ before(grammarAccess.getUnaryOperatorAccess().getSKW_TILDETerminalRuleCall_4()); }
	RULE_SKW_TILDE
{ after(grammarAccess.getUnaryOperatorAccess().getSKW_TILDETerminalRuleCall_4()); }
)



    |
(
{ before(grammarAccess.getUnaryOperatorAccess().getSKW_NOTTerminalRuleCall_5()); }
	RULE_SKW_NOT
{ after(grammarAccess.getUnaryOperatorAccess().getSKW_NOTTerminalRuleCall_5()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionAccess().getGroup_0_0()); }
(rule__PostfixExpression__Group_0_0__0)
{ after(grammarAccess.getPostfixExpressionAccess().getGroup_0_0()); }
)



    |
(
{ before(grammarAccess.getPostfixExpressionAccess().getPrimaryExpressionParserRuleCall_0_1()); }
	rulePrimaryExpression
{ after(grammarAccess.getPostfixExpressionAccess().getPrimaryExpressionParserRuleCall_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionAccess().getSuffixAssignment_1_1_0()); }
(rule__PostfixExpression__SuffixAssignment_1_1_0)
{ after(grammarAccess.getPostfixExpressionAccess().getSuffixAssignment_1_1_0()); }
)



    |
(
{ before(grammarAccess.getPostfixExpressionAccess().getSuffixAssignment_1_1_1()); }
(rule__PostfixExpression__SuffixAssignment_1_1_1)
{ after(grammarAccess.getPostfixExpressionAccess().getSuffixAssignment_1_1_1()); }
)



    |
(
{ before(grammarAccess.getPostfixExpressionAccess().getSuffixAssignment_1_1_2()); }
(rule__PostfixExpression__SuffixAssignment_1_1_2)
{ after(grammarAccess.getPostfixExpressionAccess().getSuffixAssignment_1_1_2()); }
)



    |
(
{ before(grammarAccess.getPostfixExpressionAccess().getSuffixAssignment_1_1_3()); }
(rule__PostfixExpression__SuffixAssignment_1_1_3)
{ after(grammarAccess.getPostfixExpressionAccess().getSuffixAssignment_1_1_3()); }
)



    |
(
{ before(grammarAccess.getPostfixExpressionAccess().getSuffixAssignment_1_1_4()); }
(rule__PostfixExpression__SuffixAssignment_1_1_4)
{ after(grammarAccess.getPostfixExpressionAccess().getSuffixAssignment_1_1_4()); }
)



    |
(
{ before(grammarAccess.getPostfixExpressionAccess().getSuffixAssignment_1_1_5()); }
(rule__PostfixExpression__SuffixAssignment_1_1_5)
{ after(grammarAccess.getPostfixExpressionAccess().getSuffixAssignment_1_1_5()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getIdAssignment_1_0()); }
(rule__PrimaryExpression__IdAssignment_1_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getIdAssignment_1_0()); }
)



    |
(
{ before(grammarAccess.getPrimaryExpressionAccess().getConstAssignment_1_1()); }
(rule__PrimaryExpression__ConstAssignment_1_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getConstAssignment_1_1()); }
)



    |
(
(
{ before(grammarAccess.getPrimaryExpressionAccess().getStringAssignment_1_2()); }
(rule__PrimaryExpression__StringAssignment_1_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getStringAssignment_1_2()); }
)
(
{ before(grammarAccess.getPrimaryExpressionAccess().getStringAssignment_1_2()); }
(rule__PrimaryExpression__StringAssignment_1_2)*
{ after(grammarAccess.getPrimaryExpressionAccess().getStringAssignment_1_2()); }
)
)



    |
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1_3()); }
(rule__PrimaryExpression__Group_1_3__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1_3()); }
)



    |
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1_4()); }
(rule__PrimaryExpression__Group_1_4__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1_4()); }
)



    |
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1_5()); }
(rule__PrimaryExpression__Group_1_5__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1_5()); }
)



    |
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1_6()); }
(rule__PrimaryExpression__Group_1_6__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1_6()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__ParserKeywords__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getParserKeywordsAccess().getKW_ATOMICTerminalRuleCall_0()); }
	RULE_KW_ATOMIC
{ after(grammarAccess.getParserKeywordsAccess().getKW_ATOMICTerminalRuleCall_0()); }
)



    |
(
{ before(grammarAccess.getParserKeywordsAccess().getKW_AUTOTerminalRuleCall_1()); }
	RULE_KW_AUTO
{ after(grammarAccess.getParserKeywordsAccess().getKW_AUTOTerminalRuleCall_1()); }
)



    |
(
{ before(grammarAccess.getParserKeywordsAccess().getKW_BOOLTerminalRuleCall_2()); }
	RULE_KW_BOOL
{ after(grammarAccess.getParserKeywordsAccess().getKW_BOOLTerminalRuleCall_2()); }
)



    |
(
{ before(grammarAccess.getParserKeywordsAccess().getKW_CONSTTerminalRuleCall_3()); }
	RULE_KW_CONST
{ after(grammarAccess.getParserKeywordsAccess().getKW_CONSTTerminalRuleCall_3()); }
)



    |
(
{ before(grammarAccess.getParserKeywordsAccess().getKW_CHARTerminalRuleCall_4()); }
	RULE_KW_CHAR
{ after(grammarAccess.getParserKeywordsAccess().getKW_CHARTerminalRuleCall_4()); }
)



    |
(
{ before(grammarAccess.getParserKeywordsAccess().getKW_DOUBLETerminalRuleCall_5()); }
	RULE_KW_DOUBLE
{ after(grammarAccess.getParserKeywordsAccess().getKW_DOUBLETerminalRuleCall_5()); }
)



    |
(
{ before(grammarAccess.getParserKeywordsAccess().getKW_EXTERNTerminalRuleCall_6()); }
	RULE_KW_EXTERN
{ after(grammarAccess.getParserKeywordsAccess().getKW_EXTERNTerminalRuleCall_6()); }
)



    |
(
{ before(grammarAccess.getParserKeywordsAccess().getKW_FLOATTerminalRuleCall_7()); }
	RULE_KW_FLOAT
{ after(grammarAccess.getParserKeywordsAccess().getKW_FLOATTerminalRuleCall_7()); }
)



    |
(
{ before(grammarAccess.getParserKeywordsAccess().getKW_INTTerminalRuleCall_8()); }
	RULE_KW_INT
{ after(grammarAccess.getParserKeywordsAccess().getKW_INTTerminalRuleCall_8()); }
)



    |
(
{ before(grammarAccess.getParserKeywordsAccess().getKW_LONGTerminalRuleCall_9()); }
	RULE_KW_LONG
{ after(grammarAccess.getParserKeywordsAccess().getKW_LONGTerminalRuleCall_9()); }
)



    |
(
{ before(grammarAccess.getParserKeywordsAccess().getKW_RESTRICTTerminalRuleCall_10()); }
	RULE_KW_RESTRICT
{ after(grammarAccess.getParserKeywordsAccess().getKW_RESTRICTTerminalRuleCall_10()); }
)



    |
(
{ before(grammarAccess.getParserKeywordsAccess().getKW_SHORTTerminalRuleCall_11()); }
	RULE_KW_SHORT
{ after(grammarAccess.getParserKeywordsAccess().getKW_SHORTTerminalRuleCall_11()); }
)



    |
(
{ before(grammarAccess.getParserKeywordsAccess().getKW_SIGNED1TerminalRuleCall_12()); }
	RULE_KW_SIGNED1
{ after(grammarAccess.getParserKeywordsAccess().getKW_SIGNED1TerminalRuleCall_12()); }
)



    |
(
{ before(grammarAccess.getParserKeywordsAccess().getKW_SIGNED2TerminalRuleCall_13()); }
	RULE_KW_SIGNED2
{ after(grammarAccess.getParserKeywordsAccess().getKW_SIGNED2TerminalRuleCall_13()); }
)



    |
(
{ before(grammarAccess.getParserKeywordsAccess().getKW_SIGNED3TerminalRuleCall_14()); }
	RULE_KW_SIGNED3
{ after(grammarAccess.getParserKeywordsAccess().getKW_SIGNED3TerminalRuleCall_14()); }
)



    |
(
{ before(grammarAccess.getParserKeywordsAccess().getKW_VOIDTerminalRuleCall_15()); }
	RULE_KW_VOID
{ after(grammarAccess.getParserKeywordsAccess().getKW_VOIDTerminalRuleCall_15()); }
)



    |
(
{ before(grammarAccess.getParserKeywordsAccess().getKW_UNSIGNEDTerminalRuleCall_16()); }
	RULE_KW_UNSIGNED
{ after(grammarAccess.getParserKeywordsAccess().getKW_UNSIGNEDTerminalRuleCall_16()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__Constant1__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getConstant1Access().getHexLiteralParserRuleCall_0()); }
	ruleHexLiteral
{ after(grammarAccess.getConstant1Access().getHexLiteralParserRuleCall_0()); }
)



    |
(
{ before(grammarAccess.getConstant1Access().getOctalLiteralParserRuleCall_1()); }
	ruleOctalLiteral
{ after(grammarAccess.getConstant1Access().getOctalLiteralParserRuleCall_1()); }
)



    |
(
{ before(grammarAccess.getConstant1Access().getDecimalLiteralParserRuleCall_2()); }
	ruleDecimalLiteral
{ after(grammarAccess.getConstant1Access().getDecimalLiteralParserRuleCall_2()); }
)



    |
(
{ before(grammarAccess.getConstant1Access().getCharLiteralParserRuleCall_3()); }
	ruleCharLiteral
{ after(grammarAccess.getConstant1Access().getCharLiteralParserRuleCall_3()); }
)



    |
(
{ before(grammarAccess.getConstant1Access().getStringLiteralParserRuleCall_4()); }
	ruleStringLiteral
{ after(grammarAccess.getConstant1Access().getStringLiteralParserRuleCall_4()); }
)



    |
(
{ before(grammarAccess.getConstant1Access().getFloatLiteralParserRuleCall_5()); }
	ruleFloatLiteral
{ after(grammarAccess.getConstant1Access().getFloatLiteralParserRuleCall_5()); }
)



    |
(
{ before(grammarAccess.getConstant1Access().getBinLiteralParserRuleCall_6()); }
	ruleBinLiteral
{ after(grammarAccess.getConstant1Access().getBinLiteralParserRuleCall_6()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__Constant2__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getConstant2Access().getHexAssignment_1_0()); }
(rule__Constant2__HexAssignment_1_0)
{ after(grammarAccess.getConstant2Access().getHexAssignment_1_0()); }
)



    |
(
{ before(grammarAccess.getConstant2Access().getOctAssignment_1_1()); }
(rule__Constant2__OctAssignment_1_1)
{ after(grammarAccess.getConstant2Access().getOctAssignment_1_1()); }
)



    |
(
{ before(grammarAccess.getConstant2Access().getDecAssignment_1_2()); }
(rule__Constant2__DecAssignment_1_2)
{ after(grammarAccess.getConstant2Access().getDecAssignment_1_2()); }
)



    |
(
{ before(grammarAccess.getConstant2Access().getChAssignment_1_3()); }
(rule__Constant2__ChAssignment_1_3)
{ after(grammarAccess.getConstant2Access().getChAssignment_1_3()); }
)



    |
(
{ before(grammarAccess.getConstant2Access().getFloatAssignment_1_4()); }
(rule__Constant2__FloatAssignment_1_4)
{ after(grammarAccess.getConstant2Access().getFloatAssignment_1_4()); }
)



    |
(
{ before(grammarAccess.getConstant2Access().getBinAssignment_1_5()); }
(rule__Constant2__BinAssignment_1_5)
{ after(grammarAccess.getConstant2Access().getBinAssignment_1_5()); }
)



;
finally {
	restoreStackSize(stackSize);
}




rule__Parser__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parser__Group__0__Impl
	rule__Parser__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parser__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getParserAccess().getParserAction_0()); }
(

)
{ after(grammarAccess.getParserAccess().getParserAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Parser__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parser__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parser__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getParserAccess().getExternalAssignment_1()); }
(rule__Parser__ExternalAssignment_1)*
{ after(grammarAccess.getParserAccess().getExternalAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__ExternalDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalDeclaration__Group__0__Impl
	rule__ExternalDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExternalDeclarationAccess().getExternalDeclarationAction_0()); }
(

)
{ after(grammarAccess.getExternalDeclarationAccess().getExternalDeclarationAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExternalDeclarationAccess().getAlternatives_1()); }
(rule__ExternalDeclaration__Alternatives_1)
{ after(grammarAccess.getExternalDeclarationAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__ExternalDeclaration__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalDeclaration__Group_1_0__0__Impl
	rule__ExternalDeclaration__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDeclaration__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExternalDeclarationAccess().getGroup_1_0_0()); }
(rule__ExternalDeclaration__Group_1_0_0__0)
{ after(grammarAccess.getExternalDeclarationAccess().getGroup_1_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalDeclaration__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalDeclaration__Group_1_0__1__Impl
	rule__ExternalDeclaration__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDeclaration__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExternalDeclarationAccess().getFunctionDefinitionAssignment_1_0_1()); }
(rule__ExternalDeclaration__FunctionDefinitionAssignment_1_0_1)
{ after(grammarAccess.getExternalDeclarationAccess().getFunctionDefinitionAssignment_1_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalDeclaration__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalDeclaration__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDeclaration__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExternalDeclarationAccess().getSKW_RIGHTBRACETerminalRuleCall_1_0_2()); }
	RULE_SKW_RIGHTBRACE
{ after(grammarAccess.getExternalDeclarationAccess().getSKW_RIGHTBRACETerminalRuleCall_1_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__ExternalDeclaration__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalDeclaration__Group_1_0_0__0__Impl
	rule__ExternalDeclaration__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDeclaration__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExternalDeclarationAccess().getFunctiondefHeadAssignment_1_0_0_0()); }
(rule__ExternalDeclaration__FunctiondefHeadAssignment_1_0_0_0)
{ after(grammarAccess.getExternalDeclarationAccess().getFunctiondefHeadAssignment_1_0_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalDeclaration__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalDeclaration__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDeclaration__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExternalDeclarationAccess().getSKW_LEFTBRACETerminalRuleCall_1_0_0_1()); }
	RULE_SKW_LEFTBRACE
{ after(grammarAccess.getExternalDeclarationAccess().getSKW_LEFTBRACETerminalRuleCall_1_0_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionDefHead__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefHead__Group__0__Impl
	rule__FunctionDefHead__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefHead__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getFunctionDefHeadAccess().getFunctionDefHeadAction_0()); }
(

)
{ after(grammarAccess.getFunctionDefHeadAccess().getFunctionDefHeadAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefHead__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefHead__Group__1__Impl
	rule__FunctionDefHead__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefHead__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getFunctionDefHeadAccess().getFunDeclSpecifiersAssignment_1()); }
(rule__FunctionDefHead__FunDeclSpecifiersAssignment_1)?
{ after(grammarAccess.getFunctionDefHeadAccess().getFunDeclSpecifiersAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefHead__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefHead__Group__2__Impl
	rule__FunctionDefHead__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefHead__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getFunctionDefHeadAccess().getFunDeclaratorAssignment_2()); }
(rule__FunctionDefHead__FunDeclaratorAssignment_2)
{ after(grammarAccess.getFunctionDefHeadAccess().getFunDeclaratorAssignment_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefHead__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefHead__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefHead__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getFunctionDefHeadAccess().getFunDeclarationAssignment_3()); }
(rule__FunctionDefHead__FunDeclarationAssignment_3)*
{ after(grammarAccess.getFunctionDefHeadAccess().getFunDeclarationAssignment_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__0__Impl
	rule__FunctionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getFunctionDefinitionAccess().getFunctionDefinitionAction_0()); }
(

)
{ after(grammarAccess.getFunctionDefinitionAccess().getFunctionDefinitionAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getFunctionDefinitionAccess().getBodyAssignment_1()); }
(rule__FunctionDefinition__BodyAssignment_1)
{ after(grammarAccess.getFunctionDefinitionAccess().getBodyAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__Declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__0__Impl
	rule__Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDeclarationAccess().getDeclarationAction_0()); }
(

)
{ after(grammarAccess.getDeclarationAccess().getDeclarationAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDeclarationAccess().getGroup_1()); }
(rule__Declaration__Group_1__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__Declaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1__0__Impl
	rule__Declaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDeclarationAccess().getSpecifiersAssignment_1_0()); }
(rule__Declaration__SpecifiersAssignment_1_0)
{ after(grammarAccess.getDeclarationAccess().getSpecifiersAssignment_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1__1__Impl
	rule__Declaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDeclarationAccess().getInitDeclaratorListAssignment_1_1()); }
(rule__Declaration__InitDeclaratorListAssignment_1_1)?
{ after(grammarAccess.getDeclarationAccess().getInitDeclaratorListAssignment_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDeclarationAccess().getSKW_SEMITerminalRuleCall_1_2()); }
	RULE_SKW_SEMI
{ after(grammarAccess.getDeclarationAccess().getSKW_SEMITerminalRuleCall_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionDeclarationSpecifiers__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclarationSpecifiers__Group__0__Impl
	rule__FunctionDeclarationSpecifiers__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclarationSpecifiers__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getFunctionDeclarationSpecifiersAccess().getFunctionDeclarationSpecifiersAction_0()); }
(

)
{ after(grammarAccess.getFunctionDeclarationSpecifiersAccess().getFunctionDeclarationSpecifiersAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclarationSpecifiers__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclarationSpecifiers__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclarationSpecifiers__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
(
{ before(grammarAccess.getFunctionDeclarationSpecifiersAccess().getAlternatives_1()); }
(rule__FunctionDeclarationSpecifiers__Alternatives_1)
{ after(grammarAccess.getFunctionDeclarationSpecifiersAccess().getAlternatives_1()); }
)
(
{ before(grammarAccess.getFunctionDeclarationSpecifiersAccess().getAlternatives_1()); }
(rule__FunctionDeclarationSpecifiers__Alternatives_1)*
{ after(grammarAccess.getFunctionDeclarationSpecifiersAccess().getAlternatives_1()); }
)
)



;
finally {
	restoreStackSize(stackSize);
}






rule__DeclarationSpecifiers__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclarationSpecifiers__Group__0__Impl
	rule__DeclarationSpecifiers__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationSpecifiers__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifiersAction_0()); }
(

)
{ after(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifiersAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__DeclarationSpecifiers__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclarationSpecifiers__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationSpecifiers__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
(
{ before(grammarAccess.getDeclarationSpecifiersAccess().getAlternatives_1()); }
(rule__DeclarationSpecifiers__Alternatives_1)
{ after(grammarAccess.getDeclarationSpecifiersAccess().getAlternatives_1()); }
)
(
{ before(grammarAccess.getDeclarationSpecifiersAccess().getAlternatives_1()); }
(rule__DeclarationSpecifiers__Alternatives_1)*
{ after(grammarAccess.getDeclarationSpecifiersAccess().getAlternatives_1()); }
)
)



;
finally {
	restoreStackSize(stackSize);
}






rule__InitDeclaratorList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitDeclaratorList__Group__0__Impl
	rule__InitDeclaratorList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclaratorList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitDeclaratorListAccess().getInitDeclaratorListAction_0()); }
(

)
{ after(grammarAccess.getInitDeclaratorListAccess().getInitDeclaratorListAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__InitDeclaratorList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitDeclaratorList__Group__1__Impl
	rule__InitDeclaratorList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclaratorList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitDeclaratorListAccess().getInitDeclaratorAssignment_1()); }
(rule__InitDeclaratorList__InitDeclaratorAssignment_1)
{ after(grammarAccess.getInitDeclaratorListAccess().getInitDeclaratorAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__InitDeclaratorList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitDeclaratorList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclaratorList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitDeclaratorListAccess().getGroup_2()); }
(rule__InitDeclaratorList__Group_2__0)*
{ after(grammarAccess.getInitDeclaratorListAccess().getGroup_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__InitDeclaratorList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitDeclaratorList__Group_2__0__Impl
	rule__InitDeclaratorList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclaratorList__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitDeclaratorListAccess().getSKW_COMMATerminalRuleCall_2_0()); }
	RULE_SKW_COMMA
{ after(grammarAccess.getInitDeclaratorListAccess().getSKW_COMMATerminalRuleCall_2_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__InitDeclaratorList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitDeclaratorList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclaratorList__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitDeclaratorListAccess().getInitDeclaratorAssignment_2_1()); }
(rule__InitDeclaratorList__InitDeclaratorAssignment_2_1)
{ after(grammarAccess.getInitDeclaratorListAccess().getInitDeclaratorAssignment_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__InitDeclarator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitDeclarator__Group__0__Impl
	rule__InitDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclarator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitDeclaratorAccess().getInitDeclaratorAction_0()); }
(

)
{ after(grammarAccess.getInitDeclaratorAccess().getInitDeclaratorAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__InitDeclarator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitDeclarator__Group__1__Impl
	rule__InitDeclarator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclarator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitDeclaratorAccess().getDeclaratorAssignment_1()); }
(rule__InitDeclarator__DeclaratorAssignment_1)
{ after(grammarAccess.getInitDeclaratorAccess().getDeclaratorAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__InitDeclarator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitDeclarator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclarator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitDeclaratorAccess().getGroup_2()); }
(rule__InitDeclarator__Group_2__0)?
{ after(grammarAccess.getInitDeclaratorAccess().getGroup_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__InitDeclarator__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitDeclarator__Group_2__0__Impl
	rule__InitDeclarator__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclarator__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitDeclaratorAccess().getSKW_ASSIGNTerminalRuleCall_2_0()); }
	RULE_SKW_ASSIGN
{ after(grammarAccess.getInitDeclaratorAccess().getSKW_ASSIGNTerminalRuleCall_2_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__InitDeclarator__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitDeclarator__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclarator__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitDeclaratorAccess().getInitializerAssignment_2_1()); }
(rule__InitDeclarator__InitializerAssignment_2_1)
{ after(grammarAccess.getInitDeclaratorAccess().getInitializerAssignment_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__StorageClassSpecifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StorageClassSpecifier__Group__0__Impl
	rule__StorageClassSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageClassSpecifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStorageClassSpecifierAccess().getStorageClassSpecifierAction_0()); }
(

)
{ after(grammarAccess.getStorageClassSpecifierAccess().getStorageClassSpecifierAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__StorageClassSpecifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StorageClassSpecifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageClassSpecifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStorageClassSpecifierAccess().getAlternatives_1()); }
(rule__StorageClassSpecifier__Alternatives_1)
{ after(grammarAccess.getStorageClassSpecifierAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__TypeSpecifier__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_0__0__Impl
	rule__TypeSpecifier__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getTypeSpecifierAction_0_0()); }
(

)
{ after(grammarAccess.getTypeSpecifierAccess().getTypeSpecifierAction_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment_0_1()); }
(rule__TypeSpecifier__NameAssignment_0_1)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__TypeSpecifier__Group_18__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_18__0__Impl
	rule__TypeSpecifier__Group_18__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_18__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment_18_0()); }
(rule__TypeSpecifier__NameAssignment_18_0)
{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment_18_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_18__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_18__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_18__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getGroup_18_1()); }
(rule__TypeSpecifier__Group_18_1__0)?
{ after(grammarAccess.getTypeSpecifierAccess().getGroup_18_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__TypeSpecifier__Group_18_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_18_1__0__Impl
	rule__TypeSpecifier__Group_18_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_18_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getSKW_LEFTPARENTerminalRuleCall_18_1_0()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getTypeSpecifierAccess().getSKW_LEFTPARENTerminalRuleCall_18_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_18_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_18_1__1__Impl
	rule__TypeSpecifier__Group_18_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_18_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getAlternatives_18_1_1()); }
(rule__TypeSpecifier__Alternatives_18_1_1)
{ after(grammarAccess.getTypeSpecifierAccess().getAlternatives_18_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_18_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_18_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_18_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getSKW_RIGHTPARENTerminalRuleCall_18_1_2()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getTypeSpecifierAccess().getSKW_RIGHTPARENTerminalRuleCall_18_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__TypeSpecifier__Group_22__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_22__0__Impl
	rule__TypeSpecifier__Group_22__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_22__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getTypeOfAssignment_22_0()); }
(rule__TypeSpecifier__TypeOfAssignment_22_0)
{ after(grammarAccess.getTypeSpecifierAccess().getTypeOfAssignment_22_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_22__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_22__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_22__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getGroup_22_1()); }
(rule__TypeSpecifier__Group_22_1__0)
{ after(grammarAccess.getTypeSpecifierAccess().getGroup_22_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__TypeSpecifier__Group_22_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_22_1__0__Impl
	rule__TypeSpecifier__Group_22_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_22_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getSKW_LEFTPARENTerminalRuleCall_22_1_0()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getTypeSpecifierAccess().getSKW_LEFTPARENTerminalRuleCall_22_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_22_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_22_1__1__Impl
	rule__TypeSpecifier__Group_22_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_22_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getAlternatives_22_1_1()); }
(rule__TypeSpecifier__Alternatives_22_1_1)
{ after(grammarAccess.getTypeSpecifierAccess().getAlternatives_22_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_22_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_22_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_22_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getSKW_RIGHTPARENTerminalRuleCall_22_1_2()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getTypeSpecifierAccess().getSKW_RIGHTPARENTerminalRuleCall_22_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__TypeSpecifier__Group_23__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_23__0__Impl
	rule__TypeSpecifier__Group_23__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_23__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getBuiltinChooseExprAssignment_23_0()); }
(rule__TypeSpecifier__BuiltinChooseExprAssignment_23_0)
{ after(grammarAccess.getTypeSpecifierAccess().getBuiltinChooseExprAssignment_23_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_23__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_23__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_23__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getGroup_23_1()); }
(rule__TypeSpecifier__Group_23_1__0)
{ after(grammarAccess.getTypeSpecifierAccess().getGroup_23_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__TypeSpecifier__Group_23_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_23_1__0__Impl
	rule__TypeSpecifier__Group_23_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_23_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getSKW_LEFTPARENTerminalRuleCall_23_1_0()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getTypeSpecifierAccess().getSKW_LEFTPARENTerminalRuleCall_23_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_23_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_23_1__1__Impl
	rule__TypeSpecifier__Group_23_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_23_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getConstExprAssignment_23_1_1()); }
(rule__TypeSpecifier__ConstExprAssignment_23_1_1)
{ after(grammarAccess.getTypeSpecifierAccess().getConstExprAssignment_23_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_23_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_23_1__2__Impl
	rule__TypeSpecifier__Group_23_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_23_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getSKW_COMMATerminalRuleCall_23_1_2()); }
	RULE_SKW_COMMA
{ after(grammarAccess.getTypeSpecifierAccess().getSKW_COMMATerminalRuleCall_23_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_23_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_23_1__3__Impl
	rule__TypeSpecifier__Group_23_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_23_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getExpr1Assignment_23_1_3()); }
(rule__TypeSpecifier__Expr1Assignment_23_1_3)
{ after(grammarAccess.getTypeSpecifierAccess().getExpr1Assignment_23_1_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_23_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_23_1__4__Impl
	rule__TypeSpecifier__Group_23_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_23_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getSKW_COMMATerminalRuleCall_23_1_4()); }
	RULE_SKW_COMMA
{ after(grammarAccess.getTypeSpecifierAccess().getSKW_COMMATerminalRuleCall_23_1_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_23_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_23_1__5__Impl
	rule__TypeSpecifier__Group_23_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_23_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getExpr2Assignment_23_1_5()); }
(rule__TypeSpecifier__Expr2Assignment_23_1_5)
{ after(grammarAccess.getTypeSpecifierAccess().getExpr2Assignment_23_1_5()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_23_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_23_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_23_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeSpecifierAccess().getSKW_RIGHTPARENTerminalRuleCall_23_1_6()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getTypeSpecifierAccess().getSKW_RIGHTPARENTerminalRuleCall_23_1_6()); }
)



;
finally {
	restoreStackSize(stackSize);
}
















rule__TypedefName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedefName__Group__0__Impl
	rule__TypedefName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypedefNameAccess().getTypedefNameAction_0()); }
(

)
{ after(grammarAccess.getTypedefNameAccess().getTypedefNameAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__TypedefName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedefName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
{at.jku.weiner.c.parser.utils.Scope.isTypeName(state.backtracking, input)}?

(
{ before(grammarAccess.getTypedefNameAccess().getIdAssignment_1()); }
(rule__TypedefName__IdAssignment_1)
{ after(grammarAccess.getTypedefNameAccess().getIdAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__StructOrUnionSpecifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructOrUnionSpecifier__Group__0__Impl
	rule__StructOrUnionSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructOrUnionSpecifierAccess().getStructOrUnionSpecifierAction_0()); }
(

)
{ after(grammarAccess.getStructOrUnionSpecifierAccess().getStructOrUnionSpecifierAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__StructOrUnionSpecifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructOrUnionSpecifier__Group__1__Impl
	rule__StructOrUnionSpecifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructOrUnionSpecifierAccess().getTypeAssignment_1()); }
(rule__StructOrUnionSpecifier__TypeAssignment_1)
{ after(grammarAccess.getStructOrUnionSpecifierAccess().getTypeAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__StructOrUnionSpecifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructOrUnionSpecifier__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructOrUnionSpecifierAccess().getAlternatives_2()); }
(rule__StructOrUnionSpecifier__Alternatives_2)
{ after(grammarAccess.getStructOrUnionSpecifierAccess().getAlternatives_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__StructOrUnionSpecifier__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructOrUnionSpecifier__Group_2_0__0__Impl
	rule__StructOrUnionSpecifier__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructOrUnionSpecifierAccess().getIdAssignment_2_0_0()); }
(rule__StructOrUnionSpecifier__IdAssignment_2_0_0)?
{ after(grammarAccess.getStructOrUnionSpecifierAccess().getIdAssignment_2_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__StructOrUnionSpecifier__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructOrUnionSpecifier__Group_2_0__1__Impl
	rule__StructOrUnionSpecifier__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructOrUnionSpecifierAccess().getBracesAssignment_2_0_1()); }
(rule__StructOrUnionSpecifier__BracesAssignment_2_0_1)
{ after(grammarAccess.getStructOrUnionSpecifierAccess().getBracesAssignment_2_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__StructOrUnionSpecifier__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructOrUnionSpecifier__Group_2_0__2__Impl
	rule__StructOrUnionSpecifier__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructOrUnionSpecifierAccess().getStructDeclListAssignment_2_0_2()); }
(rule__StructOrUnionSpecifier__StructDeclListAssignment_2_0_2)?
{ after(grammarAccess.getStructOrUnionSpecifierAccess().getStructDeclListAssignment_2_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__StructOrUnionSpecifier__Group_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructOrUnionSpecifier__Group_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructOrUnionSpecifierAccess().getSKW_RIGHTBRACETerminalRuleCall_2_0_3()); }
	RULE_SKW_RIGHTBRACE
{ after(grammarAccess.getStructOrUnionSpecifierAccess().getSKW_RIGHTBRACETerminalRuleCall_2_0_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__StructOrUnion__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructOrUnion__Group_0__0__Impl
	rule__StructOrUnion__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnion__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructOrUnionAccess().getStructOrUnionAction_0_0()); }
(

)
{ after(grammarAccess.getStructOrUnionAccess().getStructOrUnionAction_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__StructOrUnion__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructOrUnion__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnion__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructOrUnionAccess().getNameAssignment_0_1()); }
(rule__StructOrUnion__NameAssignment_0_1)
{ after(grammarAccess.getStructOrUnionAccess().getNameAssignment_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__StructDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclaration__Group__0__Impl
	rule__StructDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructDeclarationAccess().getStructDeclarationAction_0()); }
(

)
{ after(grammarAccess.getStructDeclarationAccess().getStructDeclarationAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclaration__Group__1__Impl
	rule__StructDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructDeclarationAccess().getGroup_1()); }
(rule__StructDeclaration__Group_1__0)?
{ after(grammarAccess.getStructDeclarationAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructDeclarationAccess().getSKW_SEMITerminalRuleCall_2()); }
	RULE_SKW_SEMI
{ after(grammarAccess.getStructDeclarationAccess().getSKW_SEMITerminalRuleCall_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__StructDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclaration__Group_1__0__Impl
	rule__StructDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructDeclarationAccess().getListAssignment_1_0()); }
(rule__StructDeclaration__ListAssignment_1_0)
{ after(grammarAccess.getStructDeclarationAccess().getListAssignment_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructDeclarationAccess().getStructDeclarationListAssignment_1_1()); }
(rule__StructDeclaration__StructDeclarationListAssignment_1_1)?
{ after(grammarAccess.getStructDeclarationAccess().getStructDeclarationListAssignment_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__SpecifierQualifierList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecifierQualifierList__Group__0__Impl
	rule__SpecifierQualifierList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecifierQualifierList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getSpecifierQualifierListAccess().getSpecifierQualifierListAction_0()); }
(

)
{ after(grammarAccess.getSpecifierQualifierListAccess().getSpecifierQualifierListAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__SpecifierQualifierList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecifierQualifierList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecifierQualifierList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
(
{ before(grammarAccess.getSpecifierQualifierListAccess().getAlternatives_1()); }
(rule__SpecifierQualifierList__Alternatives_1)
{ after(grammarAccess.getSpecifierQualifierListAccess().getAlternatives_1()); }
)
(
{ before(grammarAccess.getSpecifierQualifierListAccess().getAlternatives_1()); }
(rule__SpecifierQualifierList__Alternatives_1)*
{ after(grammarAccess.getSpecifierQualifierListAccess().getAlternatives_1()); }
)
)



;
finally {
	restoreStackSize(stackSize);
}






rule__StructDeclaratorList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclaratorList__Group__0__Impl
	rule__StructDeclaratorList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaratorList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructDeclaratorListAccess().getStructDeclaratorAssignment_0()); }
(rule__StructDeclaratorList__StructDeclaratorAssignment_0)
{ after(grammarAccess.getStructDeclaratorListAccess().getStructDeclaratorAssignment_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclaratorList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclaratorList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaratorList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructDeclaratorListAccess().getGroup_1()); }
(rule__StructDeclaratorList__Group_1__0)*
{ after(grammarAccess.getStructDeclaratorListAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__StructDeclaratorList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclaratorList__Group_1__0__Impl
	rule__StructDeclaratorList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaratorList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructDeclaratorListAccess().getSKW_COMMATerminalRuleCall_1_0()); }
	RULE_SKW_COMMA
{ after(grammarAccess.getStructDeclaratorListAccess().getSKW_COMMATerminalRuleCall_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclaratorList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclaratorList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaratorList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructDeclaratorListAccess().getStructDeclaratorAssignment_1_1()); }
(rule__StructDeclaratorList__StructDeclaratorAssignment_1_1)
{ after(grammarAccess.getStructDeclaratorListAccess().getStructDeclaratorAssignment_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__StructDeclarator__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclarator__Group_0__0__Impl
	rule__StructDeclarator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructDeclaratorAccess().getDeclaratorAssignment_0_0()); }
(rule__StructDeclarator__DeclaratorAssignment_0_0)
{ after(grammarAccess.getStructDeclaratorAccess().getDeclaratorAssignment_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclarator__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclarator__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructDeclaratorAccess().getGroup_0_1()); }
(rule__StructDeclarator__Group_0_1__0)?
{ after(grammarAccess.getStructDeclaratorAccess().getGroup_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__StructDeclarator__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclarator__Group_0_1__0__Impl
	rule__StructDeclarator__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructDeclaratorAccess().getSKW_COLONTerminalRuleCall_0_1_0()); }
	RULE_SKW_COLON
{ after(grammarAccess.getStructDeclaratorAccess().getSKW_COLONTerminalRuleCall_0_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclarator__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclarator__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructDeclaratorAccess().getConstExprAssignment_0_1_1()); }
(rule__StructDeclarator__ConstExprAssignment_0_1_1)
{ after(grammarAccess.getStructDeclaratorAccess().getConstExprAssignment_0_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__StructDeclarator__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclarator__Group_1__0__Impl
	rule__StructDeclarator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructDeclaratorAccess().getSKW_COLONTerminalRuleCall_1_0()); }
	RULE_SKW_COLON
{ after(grammarAccess.getStructDeclaratorAccess().getSKW_COLONTerminalRuleCall_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclarator__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructDeclarator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStructDeclaratorAccess().getConstExprAssignment_1_1()); }
(rule__StructDeclarator__ConstExprAssignment_1_1)
{ after(grammarAccess.getStructDeclaratorAccess().getConstExprAssignment_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__EnumSpecifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumSpecifier__Group__0__Impl
	rule__EnumSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumSpecifierAccess().getEnumSpecifierAction_0()); }
(

)
{ after(grammarAccess.getEnumSpecifierAccess().getEnumSpecifierAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__EnumSpecifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumSpecifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumSpecifierAccess().getGroup_1()); }
(rule__EnumSpecifier__Group_1__0)
{ after(grammarAccess.getEnumSpecifierAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__EnumSpecifier__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumSpecifier__Group_1__0__Impl
	rule__EnumSpecifier__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumSpecifierAccess().getKW_ENUMTerminalRuleCall_1_0()); }
	RULE_KW_ENUM
{ after(grammarAccess.getEnumSpecifierAccess().getKW_ENUMTerminalRuleCall_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__EnumSpecifier__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumSpecifier__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumSpecifierAccess().getAlternatives_1_1()); }
(rule__EnumSpecifier__Alternatives_1_1)
{ after(grammarAccess.getEnumSpecifierAccess().getAlternatives_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__EnumSpecifier__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumSpecifier__Group_1_1_0__0__Impl
	rule__EnumSpecifier__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumSpecifierAccess().getSKW_LEFTBRACETerminalRuleCall_1_1_0_0()); }
	RULE_SKW_LEFTBRACE
{ after(grammarAccess.getEnumSpecifierAccess().getSKW_LEFTBRACETerminalRuleCall_1_1_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__EnumSpecifier__Group_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumSpecifier__Group_1_1_0__1__Impl
	rule__EnumSpecifier__Group_1_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumSpecifierAccess().getEnumListAssignment_1_1_0_1()); }
(rule__EnumSpecifier__EnumListAssignment_1_1_0_1)
{ after(grammarAccess.getEnumSpecifierAccess().getEnumListAssignment_1_1_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__EnumSpecifier__Group_1_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumSpecifier__Group_1_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_1_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumSpecifierAccess().getSKW_RIGHTBRACETerminalRuleCall_1_1_0_2()); }
	RULE_SKW_RIGHTBRACE
{ after(grammarAccess.getEnumSpecifierAccess().getSKW_RIGHTBRACETerminalRuleCall_1_1_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__EnumSpecifier__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumSpecifier__Group_1_1_1__0__Impl
	rule__EnumSpecifier__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumSpecifierAccess().getIdAssignment_1_1_1_0()); }
(rule__EnumSpecifier__IdAssignment_1_1_1_0)
{ after(grammarAccess.getEnumSpecifierAccess().getIdAssignment_1_1_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__EnumSpecifier__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumSpecifier__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumSpecifierAccess().getGroup_1_1_1_1()); }
(rule__EnumSpecifier__Group_1_1_1_1__0)?
{ after(grammarAccess.getEnumSpecifierAccess().getGroup_1_1_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__EnumSpecifier__Group_1_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumSpecifier__Group_1_1_1_1__0__Impl
	rule__EnumSpecifier__Group_1_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_1_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumSpecifierAccess().getSKW_LEFTBRACETerminalRuleCall_1_1_1_1_0()); }
	RULE_SKW_LEFTBRACE
{ after(grammarAccess.getEnumSpecifierAccess().getSKW_LEFTBRACETerminalRuleCall_1_1_1_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__EnumSpecifier__Group_1_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumSpecifier__Group_1_1_1_1__1__Impl
	rule__EnumSpecifier__Group_1_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_1_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumSpecifierAccess().getEnumListAssignment_1_1_1_1_1()); }
(rule__EnumSpecifier__EnumListAssignment_1_1_1_1_1)
{ after(grammarAccess.getEnumSpecifierAccess().getEnumListAssignment_1_1_1_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__EnumSpecifier__Group_1_1_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumSpecifier__Group_1_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_1_1_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumSpecifierAccess().getSKW_RIGHTBRACETerminalRuleCall_1_1_1_1_2()); }
	RULE_SKW_RIGHTBRACE
{ after(grammarAccess.getEnumSpecifierAccess().getSKW_RIGHTBRACETerminalRuleCall_1_1_1_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__EnumeratorList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratorList__Group__0__Impl
	rule__EnumeratorList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratorList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumeratorListAccess().getEnumeratorAssignment_0()); }
(rule__EnumeratorList__EnumeratorAssignment_0)
{ after(grammarAccess.getEnumeratorListAccess().getEnumeratorAssignment_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratorList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratorList__Group__1__Impl
	rule__EnumeratorList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratorList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumeratorListAccess().getGroup_1()); }
(rule__EnumeratorList__Group_1__0)*
{ after(grammarAccess.getEnumeratorListAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratorList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratorList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratorList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumeratorListAccess().getLastCommaAssignment_2()); }
(rule__EnumeratorList__LastCommaAssignment_2)?
{ after(grammarAccess.getEnumeratorListAccess().getLastCommaAssignment_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__EnumeratorList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratorList__Group_1__0__Impl
	rule__EnumeratorList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratorList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumeratorListAccess().getSKW_COMMATerminalRuleCall_1_0()); }
	RULE_SKW_COMMA
{ after(grammarAccess.getEnumeratorListAccess().getSKW_COMMATerminalRuleCall_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratorList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratorList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratorList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumeratorListAccess().getEnumeratorAssignment_1_1()); }
(rule__EnumeratorList__EnumeratorAssignment_1_1)
{ after(grammarAccess.getEnumeratorListAccess().getEnumeratorAssignment_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__Enumerator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumerator__Group__0__Impl
	rule__Enumerator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumeratorAccess().getEnumeratorAction_0()); }
(

)
{ after(grammarAccess.getEnumeratorAccess().getEnumeratorAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Enumerator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumerator__Group__1__Impl
	rule__Enumerator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumeratorAccess().getIdAssignment_1()); }
(rule__Enumerator__IdAssignment_1)
{ after(grammarAccess.getEnumeratorAccess().getIdAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Enumerator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumerator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumeratorAccess().getGroup_2()); }
(rule__Enumerator__Group_2__0)?
{ after(grammarAccess.getEnumeratorAccess().getGroup_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__Enumerator__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumerator__Group_2__0__Impl
	rule__Enumerator__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumeratorAccess().getSKW_ASSIGNTerminalRuleCall_2_0()); }
	RULE_SKW_ASSIGN
{ after(grammarAccess.getEnumeratorAccess().getSKW_ASSIGNTerminalRuleCall_2_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Enumerator__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumerator__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEnumeratorAccess().getExprAssignment_2_1()); }
(rule__Enumerator__ExprAssignment_2_1)
{ after(grammarAccess.getEnumeratorAccess().getExprAssignment_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__TypeQualifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeQualifier__Group__0__Impl
	rule__TypeQualifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeQualifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeQualifierAccess().getTypeQualifierAction_0()); }
(

)
{ after(grammarAccess.getTypeQualifierAccess().getTypeQualifierAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__TypeQualifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeQualifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeQualifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeQualifierAccess().getAlternatives_1()); }
(rule__TypeQualifier__Alternatives_1)
{ after(grammarAccess.getTypeQualifierAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionSpecifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionSpecifier__Group__0__Impl
	rule__FunctionSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSpecifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getFunctionSpecifierAccess().getFunctionSpecifierAction_0()); }
(

)
{ after(grammarAccess.getFunctionSpecifierAccess().getFunctionSpecifierAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionSpecifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionSpecifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSpecifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getFunctionSpecifierAccess().getAlternatives_1()); }
(rule__FunctionSpecifier__Alternatives_1)
{ after(grammarAccess.getFunctionSpecifierAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__Declarator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declarator__Group__0__Impl
	rule__Declarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDeclaratorAccess().getDeclaratorAction_0()); }
(

)
{ after(grammarAccess.getDeclaratorAccess().getDeclaratorAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Declarator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declarator__Group__1__Impl
	rule__Declarator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDeclaratorAccess().getPointerAssignment_1()); }
(rule__Declarator__PointerAssignment_1)?
{ after(grammarAccess.getDeclaratorAccess().getPointerAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Declarator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declarator__Group__2__Impl
	rule__Declarator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDeclaratorAccess().getGccDeclExt1Assignment_2()); }
(rule__Declarator__GccDeclExt1Assignment_2)*
{ after(grammarAccess.getDeclaratorAccess().getGccDeclExt1Assignment_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Declarator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declarator__Group__3__Impl
	rule__Declarator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDeclaratorAccess().getDeclaratorAssignment_3()); }
(rule__Declarator__DeclaratorAssignment_3)
{ after(grammarAccess.getDeclaratorAccess().getDeclaratorAssignment_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Declarator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declarator__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDeclaratorAccess().getGccDeclExt2Assignment_4()); }
(rule__Declarator__GccDeclExt2Assignment_4)*
{ after(grammarAccess.getDeclaratorAccess().getGccDeclExt2Assignment_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}












rule__DirectDeclarator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirectDeclarator__Group__0__Impl
	rule__DirectDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDirectDeclaratorAccess().getDirectDeclaratorAction_0()); }
(

)
{ after(grammarAccess.getDirectDeclaratorAccess().getDirectDeclaratorAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclarator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirectDeclarator__Group__1__Impl
	rule__DirectDeclarator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDirectDeclaratorAccess().getAlternatives_1()); }
(rule__DirectDeclarator__Alternatives_1)
{ after(grammarAccess.getDirectDeclaratorAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclarator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirectDeclarator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDirectDeclaratorAccess().getDeclaratorSuffixAssignment_2()); }
(rule__DirectDeclarator__DeclaratorSuffixAssignment_2)*
{ after(grammarAccess.getDirectDeclaratorAccess().getDeclaratorSuffixAssignment_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__DirectDeclarator__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirectDeclarator__Group_1_1__0__Impl
	rule__DirectDeclarator__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDirectDeclaratorAccess().getSKW_LEFTPARENTerminalRuleCall_1_1_0()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getDirectDeclaratorAccess().getSKW_LEFTPARENTerminalRuleCall_1_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclarator__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirectDeclarator__Group_1_1__1__Impl
	rule__DirectDeclarator__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDirectDeclaratorAccess().getDeclaratorAssignment_1_1_1()); }
(rule__DirectDeclarator__DeclaratorAssignment_1_1_1)
{ after(grammarAccess.getDirectDeclaratorAccess().getDeclaratorAssignment_1_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclarator__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirectDeclarator__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDirectDeclaratorAccess().getSKW_RIGHTPARENTerminalRuleCall_1_1_2()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getDirectDeclaratorAccess().getSKW_RIGHTPARENTerminalRuleCall_1_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__DeclaratorSuffix__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaratorSuffix__Group__0__Impl
	rule__DeclaratorSuffix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaratorSuffix__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDeclaratorSuffixAccess().getDeclaratorSuffixAction_0()); }
(

)
{ after(grammarAccess.getDeclaratorSuffixAccess().getDeclaratorSuffixAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__DeclaratorSuffix__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaratorSuffix__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaratorSuffix__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDeclaratorSuffixAccess().getAlternatives_1()); }
(rule__DeclaratorSuffix__Alternatives_1)
{ after(grammarAccess.getDeclaratorSuffixAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__DeclaratorSuffix__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaratorSuffix__Group_1_0__0__Impl
	rule__DeclaratorSuffix__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaratorSuffix__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDeclaratorSuffixAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_0_0()); }
	RULE_SKW_LEFTBRACKET
{ after(grammarAccess.getDeclaratorSuffixAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__DeclaratorSuffix__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaratorSuffix__Group_1_0__1__Impl
	rule__DeclaratorSuffix__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaratorSuffix__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDeclaratorSuffixAccess().getExprAssignment_1_0_1()); }
(rule__DeclaratorSuffix__ExprAssignment_1_0_1)
{ after(grammarAccess.getDeclaratorSuffixAccess().getExprAssignment_1_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__DeclaratorSuffix__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaratorSuffix__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaratorSuffix__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDeclaratorSuffixAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_0_2()); }
	RULE_SKW_RIGHTBRACKET
{ after(grammarAccess.getDeclaratorSuffixAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__DeclaratorSuffix__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaratorSuffix__Group_1_1__0__Impl
	rule__DeclaratorSuffix__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaratorSuffix__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDeclaratorSuffixAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_1_0()); }
	RULE_SKW_LEFTBRACKET
{ after(grammarAccess.getDeclaratorSuffixAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__DeclaratorSuffix__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaratorSuffix__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaratorSuffix__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDeclaratorSuffixAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_1_1()); }
	RULE_SKW_RIGHTBRACKET
{ after(grammarAccess.getDeclaratorSuffixAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__DirectDeclaratorLastSuffix__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirectDeclaratorLastSuffix__Group__0__Impl
	rule__DirectDeclaratorLastSuffix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclaratorLastSuffix__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDirectDeclaratorLastSuffixAccess().getDirectDeclaratorLastSuffixAction_0()); }
(

)
{ after(grammarAccess.getDirectDeclaratorLastSuffixAccess().getDirectDeclaratorLastSuffixAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclaratorLastSuffix__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirectDeclaratorLastSuffix__Group__1__Impl
	rule__DirectDeclaratorLastSuffix__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclaratorLastSuffix__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDirectDeclaratorLastSuffixAccess().getSKW_LEFTPARENTerminalRuleCall_1()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getDirectDeclaratorLastSuffixAccess().getSKW_LEFTPARENTerminalRuleCall_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclaratorLastSuffix__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirectDeclaratorLastSuffix__Group__2__Impl
	rule__DirectDeclaratorLastSuffix__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclaratorLastSuffix__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDirectDeclaratorLastSuffixAccess().getAlternatives_2()); }
(rule__DirectDeclaratorLastSuffix__Alternatives_2)
{ after(grammarAccess.getDirectDeclaratorLastSuffixAccess().getAlternatives_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclaratorLastSuffix__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirectDeclaratorLastSuffix__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclaratorLastSuffix__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDirectDeclaratorLastSuffixAccess().getSKW_RIGHTPARENTerminalRuleCall_3()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getDirectDeclaratorLastSuffixAccess().getSKW_RIGHTPARENTerminalRuleCall_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__GccDeclaratorExtension__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccDeclaratorExtension__Group__0__Impl
	rule__GccDeclaratorExtension__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GccDeclaratorExtension__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccDeclaratorExtensionAccess().getGccDeclaratorExtensionAction_0()); }
(

)
{ after(grammarAccess.getGccDeclaratorExtensionAccess().getGccDeclaratorExtensionAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__GccDeclaratorExtension__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccDeclaratorExtension__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GccDeclaratorExtension__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccDeclaratorExtensionAccess().getAlternatives_1()); }
(rule__GccDeclaratorExtension__Alternatives_1)
{ after(grammarAccess.getGccDeclaratorExtensionAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__GccDeclaratorExtension__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccDeclaratorExtension__Group_1_0__0__Impl
	rule__GccDeclaratorExtension__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GccDeclaratorExtension__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccDeclaratorExtensionAccess().getAsmAssignment_1_0_0()); }
(rule__GccDeclaratorExtension__AsmAssignment_1_0_0)
{ after(grammarAccess.getGccDeclaratorExtensionAccess().getAsmAssignment_1_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__GccDeclaratorExtension__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccDeclaratorExtension__Group_1_0__1__Impl
	rule__GccDeclaratorExtension__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GccDeclaratorExtension__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccDeclaratorExtensionAccess().getSKW_LEFTPARENTerminalRuleCall_1_0_1()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getGccDeclaratorExtensionAccess().getSKW_LEFTPARENTerminalRuleCall_1_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__GccDeclaratorExtension__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccDeclaratorExtension__Group_1_0__2__Impl
	rule__GccDeclaratorExtension__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GccDeclaratorExtension__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
(
{ before(grammarAccess.getGccDeclaratorExtensionAccess().getStringAssignment_1_0_2()); }
(rule__GccDeclaratorExtension__StringAssignment_1_0_2)
{ after(grammarAccess.getGccDeclaratorExtensionAccess().getStringAssignment_1_0_2()); }
)
(
{ before(grammarAccess.getGccDeclaratorExtensionAccess().getStringAssignment_1_0_2()); }
(rule__GccDeclaratorExtension__StringAssignment_1_0_2)*
{ after(grammarAccess.getGccDeclaratorExtensionAccess().getStringAssignment_1_0_2()); }
)
)



;
finally {
	restoreStackSize(stackSize);
}


rule__GccDeclaratorExtension__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccDeclaratorExtension__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GccDeclaratorExtension__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccDeclaratorExtensionAccess().getSKW_RIGHTPARENTerminalRuleCall_1_0_3()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getGccDeclaratorExtensionAccess().getSKW_RIGHTPARENTerminalRuleCall_1_0_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__GccAttributeSpecifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccAttributeSpecifier__Group__0__Impl
	rule__GccAttributeSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttributeSpecifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccAttributeSpecifierAccess().getGccAttributeSpecifierAction_0()); }
(

)
{ after(grammarAccess.getGccAttributeSpecifierAccess().getGccAttributeSpecifierAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__GccAttributeSpecifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccAttributeSpecifier__Group__1__Impl
	rule__GccAttributeSpecifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttributeSpecifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccAttributeSpecifierAccess().getAttributeAssignment_1()); }
(rule__GccAttributeSpecifier__AttributeAssignment_1)
{ after(grammarAccess.getGccAttributeSpecifierAccess().getAttributeAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__GccAttributeSpecifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccAttributeSpecifier__Group__2__Impl
	rule__GccAttributeSpecifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttributeSpecifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccAttributeSpecifierAccess().getSKW_LEFTPARENTerminalRuleCall_2()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getGccAttributeSpecifierAccess().getSKW_LEFTPARENTerminalRuleCall_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__GccAttributeSpecifier__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccAttributeSpecifier__Group__3__Impl
	rule__GccAttributeSpecifier__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttributeSpecifier__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccAttributeSpecifierAccess().getSKW_LEFTPARENTerminalRuleCall_3()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getGccAttributeSpecifierAccess().getSKW_LEFTPARENTerminalRuleCall_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__GccAttributeSpecifier__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccAttributeSpecifier__Group__4__Impl
	rule__GccAttributeSpecifier__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttributeSpecifier__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccAttributeSpecifierAccess().getListAssignment_4()); }
(rule__GccAttributeSpecifier__ListAssignment_4)?
{ after(grammarAccess.getGccAttributeSpecifierAccess().getListAssignment_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__GccAttributeSpecifier__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccAttributeSpecifier__Group__5__Impl
	rule__GccAttributeSpecifier__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttributeSpecifier__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccAttributeSpecifierAccess().getSKW_RIGHTPARENTerminalRuleCall_5()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getGccAttributeSpecifierAccess().getSKW_RIGHTPARENTerminalRuleCall_5()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__GccAttributeSpecifier__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccAttributeSpecifier__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttributeSpecifier__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccAttributeSpecifierAccess().getSKW_RIGHTPARENTerminalRuleCall_6()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getGccAttributeSpecifierAccess().getSKW_RIGHTPARENTerminalRuleCall_6()); }
)



;
finally {
	restoreStackSize(stackSize);
}
















rule__GccAttributeList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccAttributeList__Group__0__Impl
	rule__GccAttributeList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttributeList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccAttributeListAccess().getGccAttributeAssignment_0()); }
(rule__GccAttributeList__GccAttributeAssignment_0)
{ after(grammarAccess.getGccAttributeListAccess().getGccAttributeAssignment_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__GccAttributeList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccAttributeList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttributeList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccAttributeListAccess().getGroup_1()); }
(rule__GccAttributeList__Group_1__0)*
{ after(grammarAccess.getGccAttributeListAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__GccAttributeList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccAttributeList__Group_1__0__Impl
	rule__GccAttributeList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttributeList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccAttributeListAccess().getSKW_COMMATerminalRuleCall_1_0()); }
	RULE_SKW_COMMA
{ after(grammarAccess.getGccAttributeListAccess().getSKW_COMMATerminalRuleCall_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__GccAttributeList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccAttributeList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttributeList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccAttributeListAccess().getGccAttributeAssignment_1_1()); }
(rule__GccAttributeList__GccAttributeAssignment_1_1)
{ after(grammarAccess.getGccAttributeListAccess().getGccAttributeAssignment_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__GccAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccAttribute__Group__0__Impl
	rule__GccAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccAttributeAccess().getGccAttributeAction_0()); }
(

)
{ after(grammarAccess.getGccAttributeAccess().getGccAttributeAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__GccAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccAttribute__Group__1__Impl
	rule__GccAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccAttributeAccess().getAlternatives_1()); }
(rule__GccAttribute__Alternatives_1)
{ after(grammarAccess.getGccAttributeAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__GccAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccAttribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccAttributeAccess().getGroup_2()); }
(rule__GccAttribute__Group_2__0)?
{ after(grammarAccess.getGccAttributeAccess().getGroup_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__GccAttribute__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccAttribute__Group_2__0__Impl
	rule__GccAttribute__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttribute__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccAttributeAccess().getSKW_LEFTPARENTerminalRuleCall_2_0()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getGccAttributeAccess().getSKW_LEFTPARENTerminalRuleCall_2_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__GccAttribute__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccAttribute__Group_2__1__Impl
	rule__GccAttribute__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttribute__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccAttributeAccess().getListAssignment_2_1()); }
(rule__GccAttribute__ListAssignment_2_1)?
{ after(grammarAccess.getGccAttributeAccess().getListAssignment_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__GccAttribute__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GccAttribute__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttribute__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getGccAttributeAccess().getSKW_RIGHTPARENTerminalRuleCall_2_2()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getGccAttributeAccess().getSKW_RIGHTPARENTerminalRuleCall_2_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__Pointer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointer__Group__0__Impl
	rule__Pointer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPointerAccess().getPointerAction_0()); }
(

)
{ after(grammarAccess.getPointerAccess().getPointerAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Pointer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPointerAccess().getGroup_1()); }
(rule__Pointer__Group_1__0)*
{ after(grammarAccess.getPointerAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__Pointer__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointer__Group_1__0__Impl
	rule__Pointer__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPointerAccess().getAlternatives_1_0()); }
(rule__Pointer__Alternatives_1_0)
{ after(grammarAccess.getPointerAccess().getAlternatives_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Pointer__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointer__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPointerAccess().getTypeQualifierListAssignment_1_1()); }
(rule__Pointer__TypeQualifierListAssignment_1_1)?
{ after(grammarAccess.getPointerAccess().getTypeQualifierListAssignment_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__TypeQualifierList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeQualifierList__Group__0__Impl
	rule__TypeQualifierList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeQualifierList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeQualifierListAccess().getTypeQualifierListAction_0()); }
(

)
{ after(grammarAccess.getTypeQualifierListAccess().getTypeQualifierListAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__TypeQualifierList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeQualifierList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeQualifierList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
(
{ before(grammarAccess.getTypeQualifierListAccess().getTypeQualifierAssignment_1()); }
(rule__TypeQualifierList__TypeQualifierAssignment_1)
{ after(grammarAccess.getTypeQualifierListAccess().getTypeQualifierAssignment_1()); }
)
(
{ before(grammarAccess.getTypeQualifierListAccess().getTypeQualifierAssignment_1()); }
(rule__TypeQualifierList__TypeQualifierAssignment_1)*
{ after(grammarAccess.getTypeQualifierListAccess().getTypeQualifierAssignment_1()); }
)
)



;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterTypeList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterTypeList__Group__0__Impl
	rule__ParameterTypeList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTypeList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getParameterTypeListAccess().getParameterTypeListAction_0()); }
(

)
{ after(grammarAccess.getParameterTypeListAccess().getParameterTypeListAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterTypeList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterTypeList__Group__1__Impl
	rule__ParameterTypeList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTypeList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getParameterTypeListAccess().getListAssignment_1()); }
(rule__ParameterTypeList__ListAssignment_1)
{ after(grammarAccess.getParameterTypeListAccess().getListAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterTypeList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterTypeList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTypeList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getParameterTypeListAccess().getGroup_2()); }
(rule__ParameterTypeList__Group_2__0)?
{ after(grammarAccess.getParameterTypeListAccess().getGroup_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__ParameterTypeList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterTypeList__Group_2__0__Impl
	rule__ParameterTypeList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTypeList__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getParameterTypeListAccess().getSKW_COMMATerminalRuleCall_2_0()); }
	RULE_SKW_COMMA
{ after(grammarAccess.getParameterTypeListAccess().getSKW_COMMATerminalRuleCall_2_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterTypeList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterTypeList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTypeList__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getParameterTypeListAccess().getEllipsisAssignment_2_1()); }
(rule__ParameterTypeList__EllipsisAssignment_2_1)
{ after(grammarAccess.getParameterTypeListAccess().getEllipsisAssignment_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getParameterListAccess().getParameterListAction_0()); }
(

)
{ after(grammarAccess.getParameterListAccess().getParameterListAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group__1__Impl
	rule__ParameterList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getParameterListAccess().getParameterDeclarationAssignment_1()); }
(rule__ParameterList__ParameterDeclarationAssignment_1)
{ after(grammarAccess.getParameterListAccess().getParameterDeclarationAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getParameterListAccess().getGroup_2()); }
(rule__ParameterList__Group_2__0)*
{ after(grammarAccess.getParameterListAccess().getGroup_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__ParameterList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group_2__0__Impl
	rule__ParameterList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getParameterListAccess().getSKW_COMMATerminalRuleCall_2_0()); }
	RULE_SKW_COMMA
{ after(grammarAccess.getParameterListAccess().getSKW_COMMATerminalRuleCall_2_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getParameterListAccess().getParameterDeclarationAssignment_2_1()); }
(rule__ParameterList__ParameterDeclarationAssignment_2_1)
{ after(grammarAccess.getParameterListAccess().getParameterDeclarationAssignment_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group__0__Impl
	rule__ParameterDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getParameterDeclarationAccess().getParameterDeclarationAction_0()); }
(

)
{ after(grammarAccess.getParameterDeclarationAccess().getParameterDeclarationAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group__1__Impl
	rule__ParameterDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getParameterDeclarationAccess().getDeclSpecifiersAssignment_1()); }
(rule__ParameterDeclaration__DeclSpecifiersAssignment_1)
{ after(grammarAccess.getParameterDeclarationAccess().getDeclSpecifiersAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getParameterDeclarationAccess().getAlternatives_2()); }
(rule__ParameterDeclaration__Alternatives_2)
{ after(grammarAccess.getParameterDeclarationAccess().getAlternatives_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__IdentifierList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierList__Group__0__Impl
	rule__IdentifierList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIdentifierListAccess().getIdentifierListAction_0()); }
(

)
{ after(grammarAccess.getIdentifierListAccess().getIdentifierListAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierList__Group__1__Impl
	rule__IdentifierList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIdentifierListAccess().getIdAssignment_1()); }
(rule__IdentifierList__IdAssignment_1)
{ after(grammarAccess.getIdentifierListAccess().getIdAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIdentifierListAccess().getGroup_2()); }
(rule__IdentifierList__Group_2__0)*
{ after(grammarAccess.getIdentifierListAccess().getGroup_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__IdentifierList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierList__Group_2__0__Impl
	rule__IdentifierList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIdentifierListAccess().getSKW_COMMATerminalRuleCall_2_0()); }
	RULE_SKW_COMMA
{ after(grammarAccess.getIdentifierListAccess().getSKW_COMMATerminalRuleCall_2_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIdentifierListAccess().getIdAssignment_2_1()); }
(rule__IdentifierList__IdAssignment_2_1)
{ after(grammarAccess.getIdentifierListAccess().getIdAssignment_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__MyIdentifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MyIdentifier__Group__0__Impl
	rule__MyIdentifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MyIdentifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getMyIdentifierAccess().getMyIdentifierAction_0()); }
(

)
{ after(grammarAccess.getMyIdentifierAccess().getMyIdentifierAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__MyIdentifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MyIdentifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MyIdentifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getMyIdentifierAccess().getIdAssignment_1()); }
(rule__MyIdentifier__IdAssignment_1)
{ after(grammarAccess.getMyIdentifierAccess().getIdAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__TypeName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeName__Group__0__Impl
	rule__TypeName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeNameAccess().getTypeNameAction_0()); }
(

)
{ after(grammarAccess.getTypeNameAccess().getTypeNameAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__TypeName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeName__Group__1__Impl
	rule__TypeName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeNameAccess().getListAssignment_1()); }
(rule__TypeName__ListAssignment_1)
{ after(grammarAccess.getTypeNameAccess().getListAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__TypeName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getTypeNameAccess().getAbstractDeclaratorAssignment_2()); }
(rule__TypeName__AbstractDeclaratorAssignment_2)?
{ after(grammarAccess.getTypeNameAccess().getAbstractDeclaratorAssignment_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__AbstractDeclarator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclarator__Group__0__Impl
	rule__AbstractDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclarator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorAccess().getAbstractDeclaratorAction_0()); }
(

)
{ after(grammarAccess.getAbstractDeclaratorAccess().getAbstractDeclaratorAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclarator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclarator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclarator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorAccess().getAlternatives_1()); }
(rule__AbstractDeclarator__Alternatives_1)
{ after(grammarAccess.getAbstractDeclaratorAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__AbstractDeclarator__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclarator__Group_1_1__0__Impl
	rule__AbstractDeclarator__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclarator__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorAccess().getPointerAssignment_1_1_0()); }
(rule__AbstractDeclarator__PointerAssignment_1_1_0)?
{ after(grammarAccess.getAbstractDeclaratorAccess().getPointerAssignment_1_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclarator__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclarator__Group_1_1__1__Impl
	rule__AbstractDeclarator__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclarator__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorAccess().getDirectAbstractDeclaratorAssignment_1_1_1()); }
(rule__AbstractDeclarator__DirectAbstractDeclaratorAssignment_1_1_1)
{ after(grammarAccess.getAbstractDeclaratorAccess().getDirectAbstractDeclaratorAssignment_1_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclarator__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclarator__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclarator__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorAccess().getGccDeclExtAbstractAssignment_1_1_2()); }
(rule__AbstractDeclarator__GccDeclExtAbstractAssignment_1_1_2)*
{ after(grammarAccess.getAbstractDeclaratorAccess().getGccDeclExtAbstractAssignment_1_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__DirectAbstractDeclarator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirectAbstractDeclarator__Group__0__Impl
	rule__DirectAbstractDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDirectAbstractDeclaratorAccess().getDirectAbstractDeclaratorAction_0()); }
(

)
{ after(grammarAccess.getDirectAbstractDeclaratorAccess().getDirectAbstractDeclaratorAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__DirectAbstractDeclarator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirectAbstractDeclarator__Group__1__Impl
	rule__DirectAbstractDeclarator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDirectAbstractDeclaratorAccess().getAlternatives_1()); }
(rule__DirectAbstractDeclarator__Alternatives_1)
{ after(grammarAccess.getDirectAbstractDeclaratorAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__DirectAbstractDeclarator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirectAbstractDeclarator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDirectAbstractDeclaratorAccess().getAbstractDeclaratorSuffixAssignment_2()); }
(rule__DirectAbstractDeclarator__AbstractDeclaratorSuffixAssignment_2)*
{ after(grammarAccess.getDirectAbstractDeclaratorAccess().getAbstractDeclaratorSuffixAssignment_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__DirectAbstractDeclarator__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirectAbstractDeclarator__Group_1_0__0__Impl
	rule__DirectAbstractDeclarator__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDirectAbstractDeclaratorAccess().getSKW_LEFTPARENTerminalRuleCall_1_0_0()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getDirectAbstractDeclaratorAccess().getSKW_LEFTPARENTerminalRuleCall_1_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__DirectAbstractDeclarator__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirectAbstractDeclarator__Group_1_0__1__Impl
	rule__DirectAbstractDeclarator__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDirectAbstractDeclaratorAccess().getDeclaratorAssignment_1_0_1()); }
(rule__DirectAbstractDeclarator__DeclaratorAssignment_1_0_1)
{ after(grammarAccess.getDirectAbstractDeclaratorAccess().getDeclaratorAssignment_1_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__DirectAbstractDeclarator__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirectAbstractDeclarator__Group_1_0__2__Impl
	rule__DirectAbstractDeclarator__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDirectAbstractDeclaratorAccess().getSKW_RIGHTPARENTerminalRuleCall_1_0_2()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getDirectAbstractDeclaratorAccess().getSKW_RIGHTPARENTerminalRuleCall_1_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__DirectAbstractDeclarator__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirectAbstractDeclarator__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDirectAbstractDeclaratorAccess().getGccDeclExtAssignment_1_0_3()); }
(rule__DirectAbstractDeclarator__GccDeclExtAssignment_1_0_3)*
{ after(grammarAccess.getDirectAbstractDeclaratorAccess().getGccDeclExtAssignment_1_0_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__AbstractDeclaratorSuffix__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group__0__Impl
	rule__AbstractDeclaratorSuffix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getAbstractDeclaratorSuffixAction_0()); }
(

)
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getAbstractDeclaratorSuffixAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclaratorSuffix__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getAlternatives_1()); }
(rule__AbstractDeclaratorSuffix__Alternatives_1)
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__AbstractDeclaratorSuffix__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_0__0__Impl
	rule__AbstractDeclaratorSuffix__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_0_0()); }
	RULE_SKW_LEFTBRACKET
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclaratorSuffix__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_0__1__Impl
	rule__AbstractDeclaratorSuffix__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getTypeQualifierListAssignment_1_0_1()); }
(rule__AbstractDeclaratorSuffix__TypeQualifierListAssignment_1_0_1)?
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getTypeQualifierListAssignment_1_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclaratorSuffix__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_0__2__Impl
	rule__AbstractDeclaratorSuffix__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getAssignmentExprAssignment_1_0_2()); }
(rule__AbstractDeclaratorSuffix__AssignmentExprAssignment_1_0_2)?
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getAssignmentExprAssignment_1_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclaratorSuffix__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_0_3()); }
	RULE_SKW_RIGHTBRACKET
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_0_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__AbstractDeclaratorSuffix__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_1__0__Impl
	rule__AbstractDeclaratorSuffix__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_1_0()); }
	RULE_SKW_LEFTBRACKET
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclaratorSuffix__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_1__1__Impl
	rule__AbstractDeclaratorSuffix__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getKW_STATICTerminalRuleCall_1_1_1()); }
	RULE_KW_STATIC
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getKW_STATICTerminalRuleCall_1_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclaratorSuffix__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_1__2__Impl
	rule__AbstractDeclaratorSuffix__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getTypeQualifierListAssignment_1_1_2()); }
(rule__AbstractDeclaratorSuffix__TypeQualifierListAssignment_1_1_2)?
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getTypeQualifierListAssignment_1_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclaratorSuffix__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_1__3__Impl
	rule__AbstractDeclaratorSuffix__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getAssignmentExprAssignment_1_1_3()); }
(rule__AbstractDeclaratorSuffix__AssignmentExprAssignment_1_1_3)
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getAssignmentExprAssignment_1_1_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclaratorSuffix__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_1_4()); }
	RULE_SKW_RIGHTBRACKET
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_1_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}












rule__AbstractDeclaratorSuffix__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_2__0__Impl
	rule__AbstractDeclaratorSuffix__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_2_0()); }
	RULE_SKW_LEFTBRACKET
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_2_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclaratorSuffix__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_2__1__Impl
	rule__AbstractDeclaratorSuffix__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getTypeQualifierListOrigAssignment_1_2_1()); }
(rule__AbstractDeclaratorSuffix__TypeQualifierListOrigAssignment_1_2_1)
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getTypeQualifierListOrigAssignment_1_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclaratorSuffix__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_2__2__Impl
	rule__AbstractDeclaratorSuffix__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getKW_STATICTerminalRuleCall_1_2_2()); }
	RULE_KW_STATIC
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getKW_STATICTerminalRuleCall_1_2_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclaratorSuffix__Group_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_2__3__Impl
	rule__AbstractDeclaratorSuffix__Group_1_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getAssignmentExprAssignment_1_2_3()); }
(rule__AbstractDeclaratorSuffix__AssignmentExprAssignment_1_2_3)
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getAssignmentExprAssignment_1_2_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclaratorSuffix__Group_1_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_2_4()); }
	RULE_SKW_RIGHTBRACKET
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_2_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}












rule__AbstractDeclaratorSuffix__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_3__0__Impl
	rule__AbstractDeclaratorSuffix__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_3_0()); }
	RULE_SKW_LEFTBRACKET
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_3_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclaratorSuffix__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_3__1__Impl
	rule__AbstractDeclaratorSuffix__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_STARTerminalRuleCall_1_3_1()); }
	RULE_SKW_STAR
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_STARTerminalRuleCall_1_3_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclaratorSuffix__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_3_2()); }
	RULE_SKW_RIGHTBRACKET
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_3_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__AbstractDeclaratorSuffix__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_4__0__Impl
	rule__AbstractDeclaratorSuffix__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_LEFTPARENTerminalRuleCall_1_4_0()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_LEFTPARENTerminalRuleCall_1_4_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclaratorSuffix__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_4__1__Impl
	rule__AbstractDeclaratorSuffix__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getParameterTypeListAssignment_1_4_1()); }
(rule__AbstractDeclaratorSuffix__ParameterTypeListAssignment_1_4_1)?
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getParameterTypeListAssignment_1_4_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclaratorSuffix__Group_1_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_4__2__Impl
	rule__AbstractDeclaratorSuffix__Group_1_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_RIGHTPARENTerminalRuleCall_1_4_2()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_RIGHTPARENTerminalRuleCall_1_4_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclaratorSuffix__Group_1_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractDeclaratorSuffix__Group_1_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__Group_1_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getGccDeclExtAssignment_1_4_3()); }
(rule__AbstractDeclaratorSuffix__GccDeclExtAssignment_1_4_3)*
{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getGccDeclExtAssignment_1_4_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__Initializer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initializer__Group__0__Impl
	rule__Initializer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitializerAccess().getInitializerAction_0()); }
(

)
{ after(grammarAccess.getInitializerAccess().getInitializerAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Initializer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initializer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitializerAccess().getAlternatives_1()); }
(rule__Initializer__Alternatives_1)
{ after(grammarAccess.getInitializerAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__Initializer__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initializer__Group_1_1__0__Impl
	rule__Initializer__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitializerAccess().getSKW_LEFTBRACETerminalRuleCall_1_1_0()); }
	RULE_SKW_LEFTBRACE
{ after(grammarAccess.getInitializerAccess().getSKW_LEFTBRACETerminalRuleCall_1_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Initializer__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initializer__Group_1_1__1__Impl
	rule__Initializer__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitializerAccess().getListAssignment_1_1_1()); }
(rule__Initializer__ListAssignment_1_1_1)?
{ after(grammarAccess.getInitializerAccess().getListAssignment_1_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Initializer__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initializer__Group_1_1__2__Impl
	rule__Initializer__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitializerAccess().getLastCommaAssignment_1_1_2()); }
(rule__Initializer__LastCommaAssignment_1_1_2)?
{ after(grammarAccess.getInitializerAccess().getLastCommaAssignment_1_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Initializer__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initializer__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitializerAccess().getSKW_RIGHTBRACETerminalRuleCall_1_1_3()); }
	RULE_SKW_RIGHTBRACE
{ after(grammarAccess.getInitializerAccess().getSKW_RIGHTBRACETerminalRuleCall_1_1_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__InitializerList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitializerList__Group__0__Impl
	rule__InitializerList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitializerListAccess().getInitializerListAction_0()); }
(

)
{ after(grammarAccess.getInitializerListAccess().getInitializerListAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__InitializerList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitializerList__Group__1__Impl
	rule__InitializerList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitializerListAccess().getInitAssignment_1()); }
(rule__InitializerList__InitAssignment_1)
{ after(grammarAccess.getInitializerListAccess().getInitAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__InitializerList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitializerList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitializerListAccess().getGroup_2()); }
(rule__InitializerList__Group_2__0)*
{ after(grammarAccess.getInitializerListAccess().getGroup_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__InitializerList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitializerList__Group_2__0__Impl
	rule__InitializerList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitializerListAccess().getSKW_COMMATerminalRuleCall_2_0()); }
	RULE_SKW_COMMA
{ after(grammarAccess.getInitializerListAccess().getSKW_COMMATerminalRuleCall_2_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__InitializerList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitializerList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitializerListAccess().getInitAssignment_2_1()); }
(rule__InitializerList__InitAssignment_2_1)
{ after(grammarAccess.getInitializerListAccess().getInitAssignment_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__Init__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Init__Group__0__Impl
	rule__Init__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitAccess().getInitAction_0()); }
(

)
{ after(grammarAccess.getInitAccess().getInitAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Init__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Init__Group__1__Impl
	rule__Init__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitAccess().getDesignationAssignment_1()); }
(rule__Init__DesignationAssignment_1)?
{ after(grammarAccess.getInitAccess().getDesignationAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Init__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Init__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInitAccess().getInitializerAssignment_2()); }
(rule__Init__InitializerAssignment_2)
{ after(grammarAccess.getInitAccess().getInitializerAssignment_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__BlockList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockList__Group__0__Impl
	rule__BlockList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBlockListAccess().getBlockListAction_0()); }
(

)
{ after(grammarAccess.getBlockListAccess().getBlockListAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BlockList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
(
{ before(grammarAccess.getBlockListAccess().getAlternatives_1()); }
(rule__BlockList__Alternatives_1)
{ after(grammarAccess.getBlockListAccess().getAlternatives_1()); }
)
(
{ before(grammarAccess.getBlockListAccess().getAlternatives_1()); }
(rule__BlockList__Alternatives_1)*
{ after(grammarAccess.getBlockListAccess().getAlternatives_1()); }
)
)



;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStatementAccess().getStatementAction_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getStatementAccess().getAlternatives_1()); }
(rule__Statement__Alternatives_1)
{ after(grammarAccess.getStatementAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__LabeledStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledStatement__Group__0__Impl
	rule__LabeledStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLabeledStatementAccess().getLabeledStatementAction_0()); }
(

)
{ after(grammarAccess.getLabeledStatementAccess().getLabeledStatementAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLabeledStatementAccess().getAlternatives_1()); }
(rule__LabeledStatement__Alternatives_1)
{ after(grammarAccess.getLabeledStatementAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__LabeledStatement__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledStatement__Group_1_0__0__Impl
	rule__LabeledStatement__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLabeledStatementAccess().getIdAssignment_1_0_0()); }
(rule__LabeledStatement__IdAssignment_1_0_0)
{ after(grammarAccess.getLabeledStatementAccess().getIdAssignment_1_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledStatement__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledStatement__Group_1_0__1__Impl
	rule__LabeledStatement__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLabeledStatementAccess().getSKW_COLONTerminalRuleCall_1_0_1()); }
	RULE_SKW_COLON
{ after(grammarAccess.getLabeledStatementAccess().getSKW_COLONTerminalRuleCall_1_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledStatement__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledStatement__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLabeledStatementAccess().getLStmtAssignment_1_0_2()); }
(rule__LabeledStatement__LStmtAssignment_1_0_2)
{ after(grammarAccess.getLabeledStatementAccess().getLStmtAssignment_1_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__LabeledStatement__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledStatement__Group_1_1__0__Impl
	rule__LabeledStatement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLabeledStatementAccess().getCaseAssignment_1_1_0()); }
(rule__LabeledStatement__CaseAssignment_1_1_0)
{ after(grammarAccess.getLabeledStatementAccess().getCaseAssignment_1_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledStatement__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledStatement__Group_1_1__1__Impl
	rule__LabeledStatement__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLabeledStatementAccess().getAlternatives_1_1_1()); }
(rule__LabeledStatement__Alternatives_1_1_1)
{ after(grammarAccess.getLabeledStatementAccess().getAlternatives_1_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledStatement__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledStatement__Group_1_1__2__Impl
	rule__LabeledStatement__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLabeledStatementAccess().getSKW_COLONTerminalRuleCall_1_1_2()); }
	RULE_SKW_COLON
{ after(grammarAccess.getLabeledStatementAccess().getSKW_COLONTerminalRuleCall_1_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledStatement__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledStatement__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLabeledStatementAccess().getLStmtAssignment_1_1_3()); }
(rule__LabeledStatement__LStmtAssignment_1_1_3)
{ after(grammarAccess.getLabeledStatementAccess().getLStmtAssignment_1_1_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__LabeledStatement__Group_1_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledStatement__Group_1_1_1_0__0__Impl
	rule__LabeledStatement__Group_1_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_1_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLabeledStatementAccess().getLowerAssignment_1_1_1_0_0()); }
(rule__LabeledStatement__LowerAssignment_1_1_1_0_0)
{ after(grammarAccess.getLabeledStatementAccess().getLowerAssignment_1_1_1_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledStatement__Group_1_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledStatement__Group_1_1_1_0__1__Impl
	rule__LabeledStatement__Group_1_1_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_1_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLabeledStatementAccess().getEllipsisParserRuleCall_1_1_1_0_1()); }
	ruleEllipsis
{ after(grammarAccess.getLabeledStatementAccess().getEllipsisParserRuleCall_1_1_1_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledStatement__Group_1_1_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledStatement__Group_1_1_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_1_1_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLabeledStatementAccess().getHigherAssignment_1_1_1_0_2()); }
(rule__LabeledStatement__HigherAssignment_1_1_1_0_2)
{ after(grammarAccess.getLabeledStatementAccess().getHigherAssignment_1_1_1_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__LabeledStatement__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledStatement__Group_1_2__0__Impl
	rule__LabeledStatement__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLabeledStatementAccess().getMydefaultAssignment_1_2_0()); }
(rule__LabeledStatement__MydefaultAssignment_1_2_0)
{ after(grammarAccess.getLabeledStatementAccess().getMydefaultAssignment_1_2_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledStatement__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledStatement__Group_1_2__1__Impl
	rule__LabeledStatement__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLabeledStatementAccess().getSKW_COLONTerminalRuleCall_1_2_1()); }
	RULE_SKW_COLON
{ after(grammarAccess.getLabeledStatementAccess().getSKW_COLONTerminalRuleCall_1_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledStatement__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledStatement__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLabeledStatementAccess().getLStmtAssignment_1_2_2()); }
(rule__LabeledStatement__LStmtAssignment_1_2_2)
{ after(grammarAccess.getLabeledStatementAccess().getLStmtAssignment_1_2_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__CompoundStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundStatement__Group__0__Impl
	rule__CompoundStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getCompoundStatementAccess().getCompoundStatementAction_0()); }
(

)
{ after(grammarAccess.getCompoundStatementAccess().getCompoundStatementAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundStatement__Group__1__Impl
	rule__CompoundStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getCompoundStatementAccess().getSKW_LEFTBRACETerminalRuleCall_1()); }
	RULE_SKW_LEFTBRACE
{ after(grammarAccess.getCompoundStatementAccess().getSKW_LEFTBRACETerminalRuleCall_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundStatement__Group__2__Impl
	rule__CompoundStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getCompoundStatementAccess().getBodyAssignment_2()); }
(rule__CompoundStatement__BodyAssignment_2)
{ after(grammarAccess.getCompoundStatementAccess().getBodyAssignment_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getCompoundStatementAccess().getSKW_RIGHTBRACETerminalRuleCall_3()); }
	RULE_SKW_RIGHTBRACE
{ after(grammarAccess.getCompoundStatementAccess().getSKW_RIGHTBRACETerminalRuleCall_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__BodyStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BodyStatement__Group__0__Impl
	rule__BodyStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBodyStatementAccess().getBodyStatementAction_0()); }
(

)
{ after(grammarAccess.getBodyStatementAccess().getBodyStatementAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BodyStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BodyStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBodyStatementAccess().getBlockListAssignment_1()); }
(rule__BodyStatement__BlockListAssignment_1)?
{ after(grammarAccess.getBodyStatementAccess().getBlockListAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionStatement__Group__0__Impl
	rule__ExpressionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExpressionStatementAccess().getExpressionStatementAction_0()); }
(

)
{ after(grammarAccess.getExpressionStatementAccess().getExpressionStatementAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionStatement__Group__1__Impl
	rule__ExpressionStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExpressionStatementAccess().getExpressionAssignment_1()); }
(rule__ExpressionStatement__ExpressionAssignment_1)?
{ after(grammarAccess.getExpressionStatementAccess().getExpressionAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExpressionStatementAccess().getSKW_SEMITerminalRuleCall_2()); }
	RULE_SKW_SEMI
{ after(grammarAccess.getExpressionStatementAccess().getSKW_SEMITerminalRuleCall_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__SelectionStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group__0__Impl
	rule__SelectionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getSelectionStatementAccess().getSelectionStatementAction_0()); }
(

)
{ after(grammarAccess.getSelectionStatementAccess().getSelectionStatementAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getSelectionStatementAccess().getAlternatives_1()); }
(rule__SelectionStatement__Alternatives_1)
{ after(grammarAccess.getSelectionStatementAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__SelectionStatement__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1_0__0__Impl
	rule__SelectionStatement__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getSelectionStatementAccess().getIfAssignment_1_0_0()); }
(rule__SelectionStatement__IfAssignment_1_0_0)
{ after(grammarAccess.getSelectionStatementAccess().getIfAssignment_1_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1_0__1__Impl
	rule__SelectionStatement__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getSelectionStatementAccess().getSKW_LEFTPARENTerminalRuleCall_1_0_1()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getSelectionStatementAccess().getSKW_LEFTPARENTerminalRuleCall_1_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1_0__2__Impl
	rule__SelectionStatement__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getSelectionStatementAccess().getExprAssignment_1_0_2()); }
(rule__SelectionStatement__ExprAssignment_1_0_2)
{ after(grammarAccess.getSelectionStatementAccess().getExprAssignment_1_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1_0__3__Impl
	rule__SelectionStatement__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getSelectionStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_1_0_3()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getSelectionStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_1_0_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1_0__4__Impl
	rule__SelectionStatement__Group_1_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getSelectionStatementAccess().getIfStatementAssignment_1_0_4()); }
(rule__SelectionStatement__IfStatementAssignment_1_0_4)
{ after(grammarAccess.getSelectionStatementAccess().getIfStatementAssignment_1_0_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_1_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getSelectionStatementAccess().getGroup_1_0_5()); }
(rule__SelectionStatement__Group_1_0_5__0)?
{ after(grammarAccess.getSelectionStatementAccess().getGroup_1_0_5()); }
)



;
finally {
	restoreStackSize(stackSize);
}














rule__SelectionStatement__Group_1_0_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1_0_5__0__Impl
	rule__SelectionStatement__Group_1_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1_0_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getSelectionStatementAccess().getElseAssignment_1_0_5_0()); }
(rule__SelectionStatement__ElseAssignment_1_0_5_0)
{ after(grammarAccess.getSelectionStatementAccess().getElseAssignment_1_0_5_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_1_0_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1_0_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1_0_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getSelectionStatementAccess().getElseStatementAssignment_1_0_5_1()); }
(rule__SelectionStatement__ElseStatementAssignment_1_0_5_1)
{ after(grammarAccess.getSelectionStatementAccess().getElseStatementAssignment_1_0_5_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__SelectionStatement__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1_1__0__Impl
	rule__SelectionStatement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getSelectionStatementAccess().getSwitchAssignment_1_1_0()); }
(rule__SelectionStatement__SwitchAssignment_1_1_0)
{ after(grammarAccess.getSelectionStatementAccess().getSwitchAssignment_1_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1_1__1__Impl
	rule__SelectionStatement__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getSelectionStatementAccess().getSKW_LEFTPARENTerminalRuleCall_1_1_1()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getSelectionStatementAccess().getSKW_LEFTPARENTerminalRuleCall_1_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1_1__2__Impl
	rule__SelectionStatement__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getSelectionStatementAccess().getExprAssignment_1_1_2()); }
(rule__SelectionStatement__ExprAssignment_1_1_2)
{ after(grammarAccess.getSelectionStatementAccess().getExprAssignment_1_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1_1__3__Impl
	rule__SelectionStatement__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getSelectionStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_1_1_3()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getSelectionStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_1_1_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getSelectionStatementAccess().getSwitchStatementAssignment_1_1_4()); }
(rule__SelectionStatement__SwitchStatementAssignment_1_1_4)
{ after(grammarAccess.getSelectionStatementAccess().getSwitchStatementAssignment_1_1_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}












rule__IterationStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group__0__Impl
	rule__IterationStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getIterationStatementAction_0()); }
(

)
{ after(grammarAccess.getIterationStatementAccess().getIterationStatementAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getAlternatives_1()); }
(rule__IterationStatement__Alternatives_1)
{ after(grammarAccess.getIterationStatementAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__IterationStatement__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_0__0__Impl
	rule__IterationStatement__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getWhileAssignment_1_0_0()); }
(rule__IterationStatement__WhileAssignment_1_0_0)
{ after(grammarAccess.getIterationStatementAccess().getWhileAssignment_1_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_0__1__Impl
	rule__IterationStatement__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getSKW_LEFTPARENTerminalRuleCall_1_0_1()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getIterationStatementAccess().getSKW_LEFTPARENTerminalRuleCall_1_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_0__2__Impl
	rule__IterationStatement__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getExprAssignment_1_0_2()); }
(rule__IterationStatement__ExprAssignment_1_0_2)
{ after(grammarAccess.getIterationStatementAccess().getExprAssignment_1_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_0__3__Impl
	rule__IterationStatement__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_1_0_3()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getIterationStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_1_0_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getStatementAssignment_1_0_4()); }
(rule__IterationStatement__StatementAssignment_1_0_4)
{ after(grammarAccess.getIterationStatementAccess().getStatementAssignment_1_0_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}












rule__IterationStatement__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_1__0__Impl
	rule__IterationStatement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getDoAssignment_1_1_0()); }
(rule__IterationStatement__DoAssignment_1_1_0)
{ after(grammarAccess.getIterationStatementAccess().getDoAssignment_1_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_1__1__Impl
	rule__IterationStatement__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getStatementAssignment_1_1_1()); }
(rule__IterationStatement__StatementAssignment_1_1_1)
{ after(grammarAccess.getIterationStatementAccess().getStatementAssignment_1_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_1__2__Impl
	rule__IterationStatement__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getKW_WHILETerminalRuleCall_1_1_2()); }
	RULE_KW_WHILE
{ after(grammarAccess.getIterationStatementAccess().getKW_WHILETerminalRuleCall_1_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_1__3__Impl
	rule__IterationStatement__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getSKW_LEFTPARENTerminalRuleCall_1_1_3()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getIterationStatementAccess().getSKW_LEFTPARENTerminalRuleCall_1_1_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_1__4__Impl
	rule__IterationStatement__Group_1_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getExprAssignment_1_1_4()); }
(rule__IterationStatement__ExprAssignment_1_1_4)
{ after(grammarAccess.getIterationStatementAccess().getExprAssignment_1_1_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_1__5__Impl
	rule__IterationStatement__Group_1_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_1_1_5()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getIterationStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_1_1_5()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getSemiAssignment_1_1_6()); }
(rule__IterationStatement__SemiAssignment_1_1_6)
{ after(grammarAccess.getIterationStatementAccess().getSemiAssignment_1_1_6()); }
)



;
finally {
	restoreStackSize(stackSize);
}
















rule__IterationStatement__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_2__0__Impl
	rule__IterationStatement__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getForAssignment_1_2_0()); }
(rule__IterationStatement__ForAssignment_1_2_0)
{ after(grammarAccess.getIterationStatementAccess().getForAssignment_1_2_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_2__1__Impl
	rule__IterationStatement__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getSKW_LEFTPARENTerminalRuleCall_1_2_1()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getIterationStatementAccess().getSKW_LEFTPARENTerminalRuleCall_1_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_2__2__Impl
	rule__IterationStatement__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getInitExprAssignment_1_2_2()); }
(rule__IterationStatement__InitExprAssignment_1_2_2)?
{ after(grammarAccess.getIterationStatementAccess().getInitExprAssignment_1_2_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_2__3__Impl
	rule__IterationStatement__Group_1_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getSKW_SEMITerminalRuleCall_1_2_3()); }
	RULE_SKW_SEMI
{ after(grammarAccess.getIterationStatementAccess().getSKW_SEMITerminalRuleCall_1_2_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_2__4__Impl
	rule__IterationStatement__Group_1_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getExprAssignment_1_2_4()); }
(rule__IterationStatement__ExprAssignment_1_2_4)?
{ after(grammarAccess.getIterationStatementAccess().getExprAssignment_1_2_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_2__5__Impl
	rule__IterationStatement__Group_1_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getSKW_SEMITerminalRuleCall_1_2_5()); }
	RULE_SKW_SEMI
{ after(grammarAccess.getIterationStatementAccess().getSKW_SEMITerminalRuleCall_1_2_5()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_2__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_2__6__Impl
	rule__IterationStatement__Group_1_2__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_2__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getIncExprAssignment_1_2_6()); }
(rule__IterationStatement__IncExprAssignment_1_2_6)?
{ after(grammarAccess.getIterationStatementAccess().getIncExprAssignment_1_2_6()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_2__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_2__7__Impl
	rule__IterationStatement__Group_1_2__8
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_2__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_1_2_7()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getIterationStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_1_2_7()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_2__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_2__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_2__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getStatementAssignment_1_2_8()); }
(rule__IterationStatement__StatementAssignment_1_2_8)
{ after(grammarAccess.getIterationStatementAccess().getStatementAssignment_1_2_8()); }
)



;
finally {
	restoreStackSize(stackSize);
}




















rule__IterationStatement__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_3__0__Impl
	rule__IterationStatement__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getForAssignment_1_3_0()); }
(rule__IterationStatement__ForAssignment_1_3_0)
{ after(grammarAccess.getIterationStatementAccess().getForAssignment_1_3_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_3__1__Impl
	rule__IterationStatement__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getSKW_LEFTPARENTerminalRuleCall_1_3_1()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getIterationStatementAccess().getSKW_LEFTPARENTerminalRuleCall_1_3_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_3__2__Impl
	rule__IterationStatement__Group_1_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getInitDeclAssignment_1_3_2()); }
(rule__IterationStatement__InitDeclAssignment_1_3_2)
{ after(grammarAccess.getIterationStatementAccess().getInitDeclAssignment_1_3_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_3__3__Impl
	rule__IterationStatement__Group_1_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getExprAssignment_1_3_3()); }
(rule__IterationStatement__ExprAssignment_1_3_3)?
{ after(grammarAccess.getIterationStatementAccess().getExprAssignment_1_3_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_3__4__Impl
	rule__IterationStatement__Group_1_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getSKW_SEMITerminalRuleCall_1_3_4()); }
	RULE_SKW_SEMI
{ after(grammarAccess.getIterationStatementAccess().getSKW_SEMITerminalRuleCall_1_3_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_3__5__Impl
	rule__IterationStatement__Group_1_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getIncExprAssignment_1_3_5()); }
(rule__IterationStatement__IncExprAssignment_1_3_5)?
{ after(grammarAccess.getIterationStatementAccess().getIncExprAssignment_1_3_5()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_3__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_3__6__Impl
	rule__IterationStatement__Group_1_3__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_3__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_1_3_6()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getIterationStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_1_3_6()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__IterationStatement__Group_1_3__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationStatement__Group_1_3__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Group_1_3__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIterationStatementAccess().getStatementAssignment_1_3_7()); }
(rule__IterationStatement__StatementAssignment_1_3_7)
{ after(grammarAccess.getIterationStatementAccess().getStatementAssignment_1_3_7()); }
)



;
finally {
	restoreStackSize(stackSize);
}


















rule__JumpStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group__0__Impl
	rule__JumpStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getJumpStatementAccess().getJumpStatementAction_0()); }
(

)
{ after(grammarAccess.getJumpStatementAccess().getJumpStatementAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__JumpStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getJumpStatementAccess().getAlternatives_1()); }
(rule__JumpStatement__Alternatives_1)
{ after(grammarAccess.getJumpStatementAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__JumpStatement__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_1_0__0__Impl
	rule__JumpStatement__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getJumpStatementAccess().getContinueAssignment_1_0_0()); }
(rule__JumpStatement__ContinueAssignment_1_0_0)
{ after(grammarAccess.getJumpStatementAccess().getContinueAssignment_1_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__JumpStatement__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getJumpStatementAccess().getSKW_SEMITerminalRuleCall_1_0_1()); }
	RULE_SKW_SEMI
{ after(grammarAccess.getJumpStatementAccess().getSKW_SEMITerminalRuleCall_1_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__JumpStatement__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_1_1__0__Impl
	rule__JumpStatement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getJumpStatementAccess().getBreakAssignment_1_1_0()); }
(rule__JumpStatement__BreakAssignment_1_1_0)
{ after(grammarAccess.getJumpStatementAccess().getBreakAssignment_1_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__JumpStatement__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getJumpStatementAccess().getSKW_SEMITerminalRuleCall_1_1_1()); }
	RULE_SKW_SEMI
{ after(grammarAccess.getJumpStatementAccess().getSKW_SEMITerminalRuleCall_1_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__JumpStatement__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_1_2__0__Impl
	rule__JumpStatement__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getJumpStatementAccess().getReturnAssignment_1_2_0()); }
(rule__JumpStatement__ReturnAssignment_1_2_0)
{ after(grammarAccess.getJumpStatementAccess().getReturnAssignment_1_2_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__JumpStatement__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_1_2__1__Impl
	rule__JumpStatement__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getJumpStatementAccess().getExprAssignment_1_2_1()); }
(rule__JumpStatement__ExprAssignment_1_2_1)?
{ after(grammarAccess.getJumpStatementAccess().getExprAssignment_1_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__JumpStatement__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getJumpStatementAccess().getSKW_SEMITerminalRuleCall_1_2_2()); }
	RULE_SKW_SEMI
{ after(grammarAccess.getJumpStatementAccess().getSKW_SEMITerminalRuleCall_1_2_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__JumpStatement__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_1_3__0__Impl
	rule__JumpStatement__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getJumpStatementAccess().getGotoAssignment_1_3_0()); }
(rule__JumpStatement__GotoAssignment_1_3_0)
{ after(grammarAccess.getJumpStatementAccess().getGotoAssignment_1_3_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__JumpStatement__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_1_3__1__Impl
	rule__JumpStatement__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getJumpStatementAccess().getExprAssignment_1_3_1()); }
(rule__JumpStatement__ExprAssignment_1_3_1)
{ after(grammarAccess.getJumpStatementAccess().getExprAssignment_1_3_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__JumpStatement__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpStatement__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getJumpStatementAccess().getSKW_SEMITerminalRuleCall_1_3_2()); }
	RULE_SKW_SEMI
{ after(grammarAccess.getJumpStatementAccess().getSKW_SEMITerminalRuleCall_1_3_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__AsmStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmStatement__Group__0__Impl
	rule__AsmStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmStatementAccess().getAsmStatementAction_0()); }
(

)
{ after(grammarAccess.getAsmStatementAccess().getAsmStatementAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AsmStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmStatement__Group__1__Impl
	rule__AsmStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmStatementAccess().getAlternatives_1()); }
(rule__AsmStatement__Alternatives_1)
{ after(grammarAccess.getAsmStatementAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AsmStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmStatement__Group__2__Impl
	rule__AsmStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmStatementAccess().getAlternatives_2()); }
(rule__AsmStatement__Alternatives_2)?
{ after(grammarAccess.getAsmStatementAccess().getAlternatives_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AsmStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmStatement__Group__3__Impl
	rule__AsmStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmStatementAccess().getSKW_LEFTPARENTerminalRuleCall_3()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getAsmStatementAccess().getSKW_LEFTPARENTerminalRuleCall_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AsmStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmStatement__Group__4__Impl
	rule__AsmStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmStatementAccess().getGroup_4()); }
(rule__AsmStatement__Group_4__0)
{ after(grammarAccess.getAsmStatementAccess().getGroup_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AsmStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmStatement__Group__5__Impl
	rule__AsmStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_5()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getAsmStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_5()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AsmStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmStatementAccess().getSKW_SEMITerminalRuleCall_6()); }
	RULE_SKW_SEMI
{ after(grammarAccess.getAsmStatementAccess().getSKW_SEMITerminalRuleCall_6()); }
)



;
finally {
	restoreStackSize(stackSize);
}
















rule__AsmStatement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmStatement__Group_4__0__Impl
	rule__AsmStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmStatement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmStatementAccess().getAsmLine1Assignment_4_0()); }
(rule__AsmStatement__AsmLine1Assignment_4_0)?
{ after(grammarAccess.getAsmStatementAccess().getAsmLine1Assignment_4_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AsmStatement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmStatement__Group_4__1__Impl
	rule__AsmStatement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmStatement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmStatementAccess().getAsmLinesAssignment_4_1()); }
(rule__AsmStatement__AsmLinesAssignment_4_1)*
{ after(grammarAccess.getAsmStatementAccess().getAsmLinesAssignment_4_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AsmStatement__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmStatement__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmStatement__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmStatementAccess().getLastCommaAssignment_4_2()); }
(rule__AsmStatement__LastCommaAssignment_4_2)?
{ after(grammarAccess.getAsmStatementAccess().getLastCommaAssignment_4_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__AsmLine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmLine__Group__0__Impl
	rule__AsmLine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmLine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmLineAccess().getAsmLineAction_0()); }
(

)
{ after(grammarAccess.getAsmLineAccess().getAsmLineAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AsmLine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmLine__Group__1__Impl
	rule__AsmLine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmLine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmLineAccess().getSymAssignment_1()); }
(rule__AsmLine__SymAssignment_1)?
{ after(grammarAccess.getAsmLineAccess().getSymAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AsmLine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmLine__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmLine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmLineAccess().getExprAssignment_2()); }
(rule__AsmLine__ExprAssignment_2)
{ after(grammarAccess.getAsmLineAccess().getExprAssignment_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__AsmSymbolicName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmSymbolicName__Group__0__Impl
	rule__AsmSymbolicName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmSymbolicName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmSymbolicNameAccess().getAsmSymbolicNameAction_0()); }
(

)
{ after(grammarAccess.getAsmSymbolicNameAccess().getAsmSymbolicNameAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AsmSymbolicName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmSymbolicName__Group__1__Impl
	rule__AsmSymbolicName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmSymbolicName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmSymbolicNameAccess().getSKW_LEFTBRACKETTerminalRuleCall_1()); }
	RULE_SKW_LEFTBRACKET
{ after(grammarAccess.getAsmSymbolicNameAccess().getSKW_LEFTBRACKETTerminalRuleCall_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AsmSymbolicName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmSymbolicName__Group__2__Impl
	rule__AsmSymbolicName__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmSymbolicName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmSymbolicNameAccess().getIdAssignment_2()); }
(rule__AsmSymbolicName__IdAssignment_2)
{ after(grammarAccess.getAsmSymbolicNameAccess().getIdAssignment_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AsmSymbolicName__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmSymbolicName__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmSymbolicName__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmSymbolicNameAccess().getSKW_RIGHTBRACKETTerminalRuleCall_3()); }
	RULE_SKW_RIGHTBRACKET
{ after(grammarAccess.getAsmSymbolicNameAccess().getSKW_RIGHTBRACKETTerminalRuleCall_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__AsmLineWithColon__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmLineWithColon__Group__0__Impl
	rule__AsmLineWithColon__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmLineWithColon__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmLineWithColonAccess().getAsmLineWithColonAction_0()); }
(

)
{ after(grammarAccess.getAsmLineWithColonAccess().getAsmLineWithColonAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AsmLineWithColon__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmLineWithColon__Group__1__Impl
	rule__AsmLineWithColon__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmLineWithColon__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmLineWithColonAccess().getSKW_COLONTerminalRuleCall_1()); }
	RULE_SKW_COLON
{ after(grammarAccess.getAsmLineWithColonAccess().getSKW_COLONTerminalRuleCall_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AsmLineWithColon__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmLineWithColon__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmLineWithColon__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmLineWithColonAccess().getAsmLineAssignment_2()); }
(rule__AsmLineWithColon__AsmLineAssignment_2)?
{ after(grammarAccess.getAsmLineWithColonAccess().getAsmLineAssignment_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__AsmLineWithoutColon__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmLineWithoutColon__Group__0__Impl
	rule__AsmLineWithoutColon__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmLineWithoutColon__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmLineWithoutColonAccess().getAsmLineWithoutColonAction_0()); }
(

)
{ after(grammarAccess.getAsmLineWithoutColonAccess().getAsmLineWithoutColonAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AsmLineWithoutColon__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmLineWithoutColon__Group__1__Impl
	rule__AsmLineWithoutColon__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmLineWithoutColon__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmLineWithoutColonAccess().getAsmLinesAssignment_1()); }
(rule__AsmLineWithoutColon__AsmLinesAssignment_1)
{ after(grammarAccess.getAsmLineWithoutColonAccess().getAsmLinesAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AsmLineWithoutColon__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmLineWithoutColon__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmLineWithoutColon__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmLineWithoutColonAccess().getGroup_2()); }
(rule__AsmLineWithoutColon__Group_2__0)*
{ after(grammarAccess.getAsmLineWithoutColonAccess().getGroup_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__AsmLineWithoutColon__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmLineWithoutColon__Group_2__0__Impl
	rule__AsmLineWithoutColon__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmLineWithoutColon__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmLineWithoutColonAccess().getSKW_COMMATerminalRuleCall_2_0()); }
	RULE_SKW_COMMA
{ after(grammarAccess.getAsmLineWithoutColonAccess().getSKW_COMMATerminalRuleCall_2_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AsmLineWithoutColon__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsmLineWithoutColon__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AsmLineWithoutColon__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAsmLineWithoutColonAccess().getAsmLinesAssignment_2_1()); }
(rule__AsmLineWithoutColon__AsmLinesAssignment_2_1)
{ after(grammarAccess.getAsmLineWithoutColonAccess().getAsmLinesAssignment_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__Designation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Designation__Group__0__Impl
	rule__Designation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Designation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDesignationAccess().getDesignationAction_0()); }
(

)
{ after(grammarAccess.getDesignationAccess().getDesignationAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Designation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Designation__Group__1__Impl
	rule__Designation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Designation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDesignationAccess().getListAssignment_1()); }
(rule__Designation__ListAssignment_1)
{ after(grammarAccess.getDesignationAccess().getListAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Designation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Designation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Designation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDesignationAccess().getSKW_ASSIGNTerminalRuleCall_2()); }
	RULE_SKW_ASSIGN
{ after(grammarAccess.getDesignationAccess().getSKW_ASSIGNTerminalRuleCall_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__DesignatorList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DesignatorList__Group__0__Impl
	rule__DesignatorList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DesignatorList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDesignatorListAccess().getDesignatorListAction_0()); }
(

)
{ after(grammarAccess.getDesignatorListAccess().getDesignatorListAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__DesignatorList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DesignatorList__Group__1__Impl
	rule__DesignatorList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DesignatorList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDesignatorListAccess().getDesignatorAssignment_1()); }
(rule__DesignatorList__DesignatorAssignment_1)
{ after(grammarAccess.getDesignatorListAccess().getDesignatorAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__DesignatorList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DesignatorList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DesignatorList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDesignatorListAccess().getDesignatorAssignment_2()); }
(rule__DesignatorList__DesignatorAssignment_2)*
{ after(grammarAccess.getDesignatorListAccess().getDesignatorAssignment_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__Designator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Designator__Group__0__Impl
	rule__Designator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDesignatorAccess().getDesignatorAction_0()); }
(

)
{ after(grammarAccess.getDesignatorAccess().getDesignatorAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Designator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Designator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDesignatorAccess().getAlternatives_1()); }
(rule__Designator__Alternatives_1)
{ after(grammarAccess.getDesignatorAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__Designator__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Designator__Group_1_0__0__Impl
	rule__Designator__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDesignatorAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_0_0()); }
	RULE_SKW_LEFTBRACKET
{ after(grammarAccess.getDesignatorAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Designator__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Designator__Group_1_0__1__Impl
	rule__Designator__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDesignatorAccess().getExprAssignment_1_0_1()); }
(rule__Designator__ExprAssignment_1_0_1)
{ after(grammarAccess.getDesignatorAccess().getExprAssignment_1_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Designator__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Designator__Group_1_0__2__Impl
	rule__Designator__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDesignatorAccess().getGroup_1_0_2()); }
(rule__Designator__Group_1_0_2__0)?
{ after(grammarAccess.getDesignatorAccess().getGroup_1_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Designator__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Designator__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDesignatorAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_0_3()); }
	RULE_SKW_RIGHTBRACKET
{ after(grammarAccess.getDesignatorAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_0_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__Designator__Group_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Designator__Group_1_0_2__0__Impl
	rule__Designator__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDesignatorAccess().getEllipsisParserRuleCall_1_0_2_0()); }
	ruleEllipsis
{ after(grammarAccess.getDesignatorAccess().getEllipsisParserRuleCall_1_0_2_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Designator__Group_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Designator__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDesignatorAccess().getToAssignment_1_0_2_1()); }
(rule__Designator__ToAssignment_1_0_2_1)
{ after(grammarAccess.getDesignatorAccess().getToAssignment_1_0_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__Designator__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Designator__Group_1_1__0__Impl
	rule__Designator__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDesignatorAccess().getSKW_DOTTerminalRuleCall_1_1_0()); }
	RULE_SKW_DOT
{ after(grammarAccess.getDesignatorAccess().getSKW_DOTTerminalRuleCall_1_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Designator__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Designator__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getDesignatorAccess().getIdAssignment_1_1_1()); }
(rule__Designator__IdAssignment_1_1_1)
{ after(grammarAccess.getDesignatorAccess().getIdAssignment_1_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall_0()); }
	ruleAssignmentExpression
{ after(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
(rule__Expression__Group_1__0)*
{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExpressionAccess().getExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExpressionAccess().getExpressionLeftAction_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__1__Impl
	rule__Expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExpressionAccess().getSKW_COMMATerminalRuleCall_1_1()); }
	RULE_SKW_COMMA
{ after(grammarAccess.getExpressionAccess().getSKW_COMMATerminalRuleCall_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExpressionAccess().getRightAssignment_1_2()); }
(rule__Expression__RightAssignment_1_2)
{ after(grammarAccess.getExpressionAccess().getRightAssignment_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__AssignmentExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentExpression__Group_0__0__Impl
	rule__AssignmentExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionAction_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentExpression__Group_0__1__Impl
	rule__AssignmentExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAssignmentExpressionAccess().getExprAssignment_0_1()); }
(rule__AssignmentExpression__ExprAssignment_0_1)
{ after(grammarAccess.getAssignmentExpressionAccess().getExprAssignment_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentExpression__Group_0__2__Impl
	rule__AssignmentExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAssignmentExpressionAccess().getOpAssignment_0_2()); }
(rule__AssignmentExpression__OpAssignment_0_2)
{ after(grammarAccess.getAssignmentExpressionAccess().getOpAssignment_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentExpression__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAssignmentExpressionAccess().getAssignmentExprAssignment_0_3()); }
(rule__AssignmentExpression__AssignmentExprAssignment_0_3)
{ after(grammarAccess.getAssignmentExpressionAccess().getAssignmentExprAssignment_0_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__ConditionalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group__0__Impl
	rule__ConditionalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getConditionalExpressionAccess().getLogicalOrExpressionParserRuleCall_0()); }
	ruleLogicalOrExpression
{ after(grammarAccess.getConditionalExpressionAccess().getLogicalOrExpressionParserRuleCall_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getConditionalExpressionAccess().getGroup_1()); }
(rule__ConditionalExpression__Group_1__0)?
{ after(grammarAccess.getConditionalExpressionAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__0__Impl
	rule__ConditionalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getConditionalExpressionAccess().getConditionalExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getConditionalExpressionAccess().getConditionalExpressionLeftAction_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__1__Impl
	rule__ConditionalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getConditionalExpressionAccess().getSKW_QUESTIONTerminalRuleCall_1_1()); }
	RULE_SKW_QUESTION
{ after(grammarAccess.getConditionalExpressionAccess().getSKW_QUESTIONTerminalRuleCall_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__2__Impl
	rule__ConditionalExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getConditionalExpressionAccess().getQExprAssignment_1_2()); }
(rule__ConditionalExpression__QExprAssignment_1_2)?
{ after(grammarAccess.getConditionalExpressionAccess().getQExprAssignment_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__3__Impl
	rule__ConditionalExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getConditionalExpressionAccess().getSKW_COLONTerminalRuleCall_1_3()); }
	RULE_SKW_COLON
{ after(grammarAccess.getConditionalExpressionAccess().getSKW_COLONTerminalRuleCall_1_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getConditionalExpressionAccess().getCExprAssignment_1_4()); }
(rule__ConditionalExpression__CExprAssignment_1_4)
{ after(grammarAccess.getConditionalExpressionAccess().getCExprAssignment_1_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}












rule__LogicalOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group__0__Impl
	rule__LogicalOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); }
	ruleLogicalAndExpression
{ after(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); }
(rule__LogicalOrExpression__Group_1__0)*
{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group_1__0__Impl
	rule__LogicalOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLogicalOrExpressionAccess().getLogicalOrExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getLogicalOrExpressionAccess().getLogicalOrExpressionLeftAction_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group_1__1__Impl
	rule__LogicalOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLogicalOrExpressionAccess().getSKW_ORORTerminalRuleCall_1_1()); }
	RULE_SKW_OROR
{ after(grammarAccess.getLogicalOrExpressionAccess().getSKW_ORORTerminalRuleCall_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLogicalOrExpressionAccess().getRightAssignment_1_2()); }
(rule__LogicalOrExpression__RightAssignment_1_2)
{ after(grammarAccess.getLogicalOrExpressionAccess().getRightAssignment_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__LogicalAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group__0__Impl
	rule__LogicalAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLogicalAndExpressionAccess().getInclusiveOrExpressionParserRuleCall_0()); }
	ruleInclusiveOrExpression
{ after(grammarAccess.getLogicalAndExpressionAccess().getInclusiveOrExpressionParserRuleCall_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); }
(rule__LogicalAndExpression__Group_1__0)*
{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group_1__0__Impl
	rule__LogicalAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLogicalAndExpressionAccess().getLogicalAndExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getLogicalAndExpressionAccess().getLogicalAndExpressionLeftAction_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group_1__1__Impl
	rule__LogicalAndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLogicalAndExpressionAccess().getSKW_ANDANDTerminalRuleCall_1_1()); }
	RULE_SKW_ANDAND
{ after(grammarAccess.getLogicalAndExpressionAccess().getSKW_ANDANDTerminalRuleCall_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getLogicalAndExpressionAccess().getRightAssignment_1_2()); }
(rule__LogicalAndExpression__RightAssignment_1_2)
{ after(grammarAccess.getLogicalAndExpressionAccess().getRightAssignment_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__InclusiveOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InclusiveOrExpression__Group__0__Impl
	rule__InclusiveOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getExclusiveOrExpressionParserRuleCall_0()); }
	ruleExclusiveOrExpression
{ after(grammarAccess.getInclusiveOrExpressionAccess().getExclusiveOrExpressionParserRuleCall_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__InclusiveOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InclusiveOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getGroup_1()); }
(rule__InclusiveOrExpression__Group_1__0)*
{ after(grammarAccess.getInclusiveOrExpressionAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__InclusiveOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InclusiveOrExpression__Group_1__0__Impl
	rule__InclusiveOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getInclusiveOrExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getInclusiveOrExpressionAccess().getInclusiveOrExpressionLeftAction_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__InclusiveOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InclusiveOrExpression__Group_1__1__Impl
	rule__InclusiveOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getSKW_ORTerminalRuleCall_1_1()); }
	RULE_SKW_OR
{ after(grammarAccess.getInclusiveOrExpressionAccess().getSKW_ORTerminalRuleCall_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__InclusiveOrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InclusiveOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getRightAssignment_1_2()); }
(rule__InclusiveOrExpression__RightAssignment_1_2)
{ after(grammarAccess.getInclusiveOrExpressionAccess().getRightAssignment_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__ExclusiveOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExclusiveOrExpression__Group__0__Impl
	rule__ExclusiveOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
{ after(grammarAccess.getExclusiveOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExclusiveOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getGroup_1()); }
(rule__ExclusiveOrExpression__Group_1__0)*
{ after(grammarAccess.getExclusiveOrExpressionAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__ExclusiveOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExclusiveOrExpression__Group_1__0__Impl
	rule__ExclusiveOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getExclusiveOrExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExclusiveOrExpressionAccess().getExclusiveOrExpressionLeftAction_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExclusiveOrExpression__Group_1__1__Impl
	rule__ExclusiveOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getSKW_CARETTerminalRuleCall_1_1()); }
	RULE_SKW_CARET
{ after(grammarAccess.getExclusiveOrExpressionAccess().getSKW_CARETTerminalRuleCall_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveOrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExclusiveOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getRightAssignment_1_2()); }
(rule__ExclusiveOrExpression__RightAssignment_1_2)
{ after(grammarAccess.getExclusiveOrExpressionAccess().getRightAssignment_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__AndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
	ruleEqualityExpression
{ after(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
(rule__AndExpression__Group_1__0)*
{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAndExpressionAccess().getSKW_ANDTerminalRuleCall_1_1()); }
	RULE_SKW_AND
{ after(grammarAccess.getAndExpressionAccess().getSKW_ANDTerminalRuleCall_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
(rule__AndExpression__RightAssignment_1_2)
{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__EqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
	ruleRelationalExpression
{ after(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
(rule__EqualityExpression__Group_1__0)*
{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftAction_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__1__Impl
	rule__EqualityExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEqualityExpressionAccess().getAlternatives_1_1()); }
(rule__EqualityExpression__Alternatives_1_1)
{ after(grammarAccess.getEqualityExpressionAccess().getAlternatives_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_2()); }
(rule__EqualityExpression__RightAssignment_1_2)
{ after(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__RelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0()); }
	ruleShiftExpression
{ after(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
(rule__RelationalExpression__Group_1__0)*
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLeftAction_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__1__Impl
	rule__RelationalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getRelationalExpressionAccess().getAlternatives_1_1()); }
(rule__RelationalExpression__Alternatives_1_1)
{ after(grammarAccess.getRelationalExpressionAccess().getAlternatives_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2()); }
(rule__RelationalExpression__RightAssignment_1_2)
{ after(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__ShiftExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpression__Group__0__Impl
	rule__ShiftExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
	ruleAdditiveExpression
{ after(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShiftExpressionAccess().getGroup_1()); }
(rule__ShiftExpression__Group_1__0)*
{ after(grammarAccess.getShiftExpressionAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__ShiftExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpression__Group_1__0__Impl
	rule__ShiftExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShiftExpressionAccess().getShiftExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getShiftExpressionAccess().getShiftExpressionLeftAction_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpression__Group_1__1__Impl
	rule__ShiftExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShiftExpressionAccess().getAlternatives_1_1()); }
(rule__ShiftExpression__Alternatives_1_1)
{ after(grammarAccess.getShiftExpressionAccess().getAlternatives_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShiftExpressionAccess().getRightAssignment_1_2()); }
(rule__ShiftExpression__RightAssignment_1_2)
{ after(grammarAccess.getShiftExpressionAccess().getRightAssignment_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__AdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpression
{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
(rule__AdditiveExpression__Group_1__0)*
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftAction_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__1__Impl
	rule__AdditiveExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAdditiveExpressionAccess().getAlternatives_1_1()); }
(rule__AdditiveExpression__Alternatives_1_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getAlternatives_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_2()); }
(rule__AdditiveExpression__RightAssignment_1_2)
{ after(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__MultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getCastExpressionParserRuleCall_0()); }
	ruleCastExpression
{ after(grammarAccess.getMultiplicativeExpressionAccess().getCastExpressionParserRuleCall_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
(rule__MultiplicativeExpression__Group_1__0)*
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftAction_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__1__Impl
	rule__MultiplicativeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getAlternatives_1_1()); }
(rule__MultiplicativeExpression__Alternatives_1_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getAlternatives_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_2()); }
(rule__MultiplicativeExpression__RightAssignment_1_2)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__CastExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CastExpression__Group_0__0__Impl
	rule__CastExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getCastExpressionAccess().getCastExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getCastExpressionAccess().getCastExpressionAction_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__CastExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CastExpression__Group_0__1__Impl
	rule__CastExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getCastExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_0_1()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getCastExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__CastExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CastExpression__Group_0__2__Impl
	rule__CastExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getCastExpressionAccess().getTypeAssignment_0_2()); }
(rule__CastExpression__TypeAssignment_0_2)
{ after(grammarAccess.getCastExpressionAccess().getTypeAssignment_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__CastExpression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CastExpression__Group_0__3__Impl
	rule__CastExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getCastExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_0_3()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getCastExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_0_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__CastExpression__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CastExpression__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getCastExpressionAccess().getExprAssignment_0_4()); }
(rule__CastExpression__ExprAssignment_0_4)
{ after(grammarAccess.getCastExpressionAccess().getExprAssignment_0_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}












rule__UnaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_1__0__Impl
	rule__UnaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_1__1__Impl
	rule__UnaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getPlusplusAssignment_1_1()); }
(rule__UnaryExpression__PlusplusAssignment_1_1)
{ after(grammarAccess.getUnaryExpressionAccess().getPlusplusAssignment_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getExprAssignment_1_2()); }
(rule__UnaryExpression__ExprAssignment_1_2)
{ after(grammarAccess.getUnaryExpressionAccess().getExprAssignment_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_2__0__Impl
	rule__UnaryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_2_0()); }
(

)
{ after(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_2_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_2__1__Impl
	rule__UnaryExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getMinusminusAssignment_2_1()); }
(rule__UnaryExpression__MinusminusAssignment_2_1)
{ after(grammarAccess.getUnaryExpressionAccess().getMinusminusAssignment_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getExprAssignment_2_2()); }
(rule__UnaryExpression__ExprAssignment_2_2)
{ after(grammarAccess.getUnaryExpressionAccess().getExprAssignment_2_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_3__0__Impl
	rule__UnaryExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_3_0()); }
(

)
{ after(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_3_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_3__1__Impl
	rule__UnaryExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getOpAssignment_3_1()); }
(rule__UnaryExpression__OpAssignment_3_1)
{ after(grammarAccess.getUnaryExpressionAccess().getOpAssignment_3_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getExprAssignment_3_2()); }
(rule__UnaryExpression__ExprAssignment_3_2)
{ after(grammarAccess.getUnaryExpressionAccess().getExprAssignment_3_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_4__0__Impl
	rule__UnaryExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_4_0()); }
(

)
{ after(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_4_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_4__1__Impl
	rule__UnaryExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getSizeOfAssignment_4_1()); }
(rule__UnaryExpression__SizeOfAssignment_4_1)
{ after(grammarAccess.getUnaryExpressionAccess().getSizeOfAssignment_4_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_4__2__Impl
	rule__UnaryExpression__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_4_2()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getUnaryExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_4_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_4__3__Impl
	rule__UnaryExpression__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getTypeNameAssignment_4_3()); }
(rule__UnaryExpression__TypeNameAssignment_4_3)
{ after(grammarAccess.getUnaryExpressionAccess().getTypeNameAssignment_4_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_4_4()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getUnaryExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_4_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}












rule__UnaryExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_5__0__Impl
	rule__UnaryExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_5_0()); }
(

)
{ after(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_5_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_5__1__Impl
	rule__UnaryExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getSizeOfAssignment_5_1()); }
(rule__UnaryExpression__SizeOfAssignment_5_1)
{ after(grammarAccess.getUnaryExpressionAccess().getSizeOfAssignment_5_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getExprAssignment_5_2()); }
(rule__UnaryExpression__ExprAssignment_5_2)
{ after(grammarAccess.getUnaryExpressionAccess().getExprAssignment_5_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_6__0__Impl
	rule__UnaryExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_6_0()); }
(

)
{ after(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_6_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_6__1__Impl
	rule__UnaryExpression__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getAlignOfAssignment_6_1()); }
(rule__UnaryExpression__AlignOfAssignment_6_1)
{ after(grammarAccess.getUnaryExpressionAccess().getAlignOfAssignment_6_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_6__2__Impl
	rule__UnaryExpression__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_6_2()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getUnaryExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_6_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_6__3__Impl
	rule__UnaryExpression__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getTypeNameAssignment_6_3()); }
(rule__UnaryExpression__TypeNameAssignment_6_3)
{ after(grammarAccess.getUnaryExpressionAccess().getTypeNameAssignment_6_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_6_4()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getUnaryExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_6_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}












rule__UnaryExpression__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_7__0__Impl
	rule__UnaryExpression__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_7_0()); }
(

)
{ after(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_7_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_7__1__Impl
	rule__UnaryExpression__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getAlignOfAssignment_7_1()); }
(rule__UnaryExpression__AlignOfAssignment_7_1)
{ after(grammarAccess.getUnaryExpressionAccess().getAlignOfAssignment_7_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_7__2__Impl
	rule__UnaryExpression__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_7_2()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getUnaryExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_7_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_7__3__Impl
	rule__UnaryExpression__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getExprAssignment_7_3()); }
(rule__UnaryExpression__ExprAssignment_7_3)
{ after(grammarAccess.getUnaryExpressionAccess().getExprAssignment_7_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_7__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_7__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_7__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_7_4()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getUnaryExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_7_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}












rule__UnaryExpression__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_8__0__Impl
	rule__UnaryExpression__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_8_0()); }
(

)
{ after(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_8_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_8__1__Impl
	rule__UnaryExpression__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getAndandAssignment_8_1()); }
(rule__UnaryExpression__AndandAssignment_8_1)
{ after(grammarAccess.getUnaryExpressionAccess().getAndandAssignment_8_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getUnaryExpressionAccess().getIdAssignment_8_2()); }
(rule__UnaryExpression__IdAssignment_8_2)
{ after(grammarAccess.getUnaryExpressionAccess().getIdAssignment_8_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__PostfixExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpression__Group__0__Impl
	rule__PostfixExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionAccess().getAlternatives_0()); }
(rule__PostfixExpression__Alternatives_0)
{ after(grammarAccess.getPostfixExpressionAccess().getAlternatives_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1()); }
(rule__PostfixExpression__Group_1__0)*
{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__PostfixExpression__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpression__Group_0_0__0__Impl
	rule__PostfixExpression__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionAccess().getPostfixExpressionAction_0_0_0()); }
(

)
{ after(grammarAccess.getPostfixExpressionAccess().getPostfixExpressionAction_0_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpression__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionAccess().getGroup_0_0_1()); }
(rule__PostfixExpression__Group_0_0_1__0)
{ after(grammarAccess.getPostfixExpressionAccess().getGroup_0_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__PostfixExpression__Group_0_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpression__Group_0_0_1__0__Impl
	rule__PostfixExpression__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_0_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionAccess().getExtAssignment_0_0_1_0()); }
(rule__PostfixExpression__ExtAssignment_0_0_1_0)?
{ after(grammarAccess.getPostfixExpressionAccess().getExtAssignment_0_0_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_0_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpression__Group_0_0_1__1__Impl
	rule__PostfixExpression__Group_0_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_0_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_0_0_1_1()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getPostfixExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_0_0_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_0_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpression__Group_0_0_1__2__Impl
	rule__PostfixExpression__Group_0_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_0_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionAccess().getTypeNameAssignment_0_0_1_2()); }
(rule__PostfixExpression__TypeNameAssignment_0_0_1_2)
{ after(grammarAccess.getPostfixExpressionAccess().getTypeNameAssignment_0_0_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_0_0_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpression__Group_0_0_1__3__Impl
	rule__PostfixExpression__Group_0_0_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_0_0_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_0_0_1_3()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getPostfixExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_0_0_1_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_0_0_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpression__Group_0_0_1__4__Impl
	rule__PostfixExpression__Group_0_0_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_0_0_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionAccess().getSKW_LEFTBRACETerminalRuleCall_0_0_1_4()); }
	RULE_SKW_LEFTBRACE
{ after(grammarAccess.getPostfixExpressionAccess().getSKW_LEFTBRACETerminalRuleCall_0_0_1_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_0_0_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpression__Group_0_0_1__5__Impl
	rule__PostfixExpression__Group_0_0_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_0_0_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionAccess().getInitializerListAssignment_0_0_1_5()); }
(rule__PostfixExpression__InitializerListAssignment_0_0_1_5)
{ after(grammarAccess.getPostfixExpressionAccess().getInitializerListAssignment_0_0_1_5()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_0_0_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpression__Group_0_0_1__6__Impl
	rule__PostfixExpression__Group_0_0_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_0_0_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionAccess().getCommaAssignment_0_0_1_6()); }
(rule__PostfixExpression__CommaAssignment_0_0_1_6)?
{ after(grammarAccess.getPostfixExpressionAccess().getCommaAssignment_0_0_1_6()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_0_0_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpression__Group_0_0_1__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_0_0_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionAccess().getSKW_RIGHTBRACETerminalRuleCall_0_0_1_7()); }
	RULE_SKW_RIGHTBRACE
{ after(grammarAccess.getPostfixExpressionAccess().getSKW_RIGHTBRACETerminalRuleCall_0_0_1_7()); }
)



;
finally {
	restoreStackSize(stackSize);
}


















rule__PostfixExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpression__Group_1__0__Impl
	rule__PostfixExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionAccess().getPostfixExpressionExprAction_1_0()); }
(

)
{ after(grammarAccess.getPostfixExpressionAccess().getPostfixExpressionExprAction_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionAccess().getAlternatives_1_1()); }
(rule__PostfixExpression__Alternatives_1_1)
{ after(grammarAccess.getPostfixExpressionAccess().getAlternatives_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__PostfixExpressionSuffixArray__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpressionSuffixArray__Group__0__Impl
	rule__PostfixExpressionSuffixArray__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixArray__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionSuffixArrayAccess().getPostfixExpressionSuffixArrayAction_0()); }
(

)
{ after(grammarAccess.getPostfixExpressionSuffixArrayAccess().getPostfixExpressionSuffixArrayAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpressionSuffixArray__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpressionSuffixArray__Group__1__Impl
	rule__PostfixExpressionSuffixArray__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixArray__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionSuffixArrayAccess().getSKW_LEFTBRACKETTerminalRuleCall_1()); }
	RULE_SKW_LEFTBRACKET
{ after(grammarAccess.getPostfixExpressionSuffixArrayAccess().getSKW_LEFTBRACKETTerminalRuleCall_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpressionSuffixArray__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpressionSuffixArray__Group__2__Impl
	rule__PostfixExpressionSuffixArray__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixArray__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionSuffixArrayAccess().getArrayExprAssignment_2()); }
(rule__PostfixExpressionSuffixArray__ArrayExprAssignment_2)
{ after(grammarAccess.getPostfixExpressionSuffixArrayAccess().getArrayExprAssignment_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpressionSuffixArray__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpressionSuffixArray__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixArray__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionSuffixArrayAccess().getSKW_RIGHTBRACKETTerminalRuleCall_3()); }
	RULE_SKW_RIGHTBRACKET
{ after(grammarAccess.getPostfixExpressionSuffixArrayAccess().getSKW_RIGHTBRACKETTerminalRuleCall_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__PostfixExpressionSuffixArgument__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpressionSuffixArgument__Group__0__Impl
	rule__PostfixExpressionSuffixArgument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixArgument__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionSuffixArgumentAccess().getPostfixExpressionSuffixArgumentAction_0()); }
(

)
{ after(grammarAccess.getPostfixExpressionSuffixArgumentAccess().getPostfixExpressionSuffixArgumentAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpressionSuffixArgument__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpressionSuffixArgument__Group__1__Impl
	rule__PostfixExpressionSuffixArgument__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixArgument__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionSuffixArgumentAccess().getSKW_LEFTPARENTerminalRuleCall_1()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getPostfixExpressionSuffixArgumentAccess().getSKW_LEFTPARENTerminalRuleCall_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpressionSuffixArgument__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpressionSuffixArgument__Group__2__Impl
	rule__PostfixExpressionSuffixArgument__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixArgument__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionSuffixArgumentAccess().getArgumentExpressionListAssignment_2()); }
(rule__PostfixExpressionSuffixArgument__ArgumentExpressionListAssignment_2)?
{ after(grammarAccess.getPostfixExpressionSuffixArgumentAccess().getArgumentExpressionListAssignment_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpressionSuffixArgument__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpressionSuffixArgument__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixArgument__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionSuffixArgumentAccess().getSKW_RIGHTPARENTerminalRuleCall_3()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getPostfixExpressionSuffixArgumentAccess().getSKW_RIGHTPARENTerminalRuleCall_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__PostfixExpressionSuffixDot__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpressionSuffixDot__Group__0__Impl
	rule__PostfixExpressionSuffixDot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixDot__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionSuffixDotAccess().getPostfixExpressionSuffixDotAction_0()); }
(

)
{ after(grammarAccess.getPostfixExpressionSuffixDotAccess().getPostfixExpressionSuffixDotAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpressionSuffixDot__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpressionSuffixDot__Group__1__Impl
	rule__PostfixExpressionSuffixDot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixDot__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionSuffixDotAccess().getSKW_DOTTerminalRuleCall_1()); }
	RULE_SKW_DOT
{ after(grammarAccess.getPostfixExpressionSuffixDotAccess().getSKW_DOTTerminalRuleCall_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpressionSuffixDot__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpressionSuffixDot__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixDot__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionSuffixDotAccess().getIdAssignment_2()); }
(rule__PostfixExpressionSuffixDot__IdAssignment_2)
{ after(grammarAccess.getPostfixExpressionSuffixDotAccess().getIdAssignment_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__PostfixExpressionSuffixArrow__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpressionSuffixArrow__Group__0__Impl
	rule__PostfixExpressionSuffixArrow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixArrow__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionSuffixArrowAccess().getPostfixExpressionSuffixArrowAction_0()); }
(

)
{ after(grammarAccess.getPostfixExpressionSuffixArrowAccess().getPostfixExpressionSuffixArrowAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpressionSuffixArrow__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpressionSuffixArrow__Group__1__Impl
	rule__PostfixExpressionSuffixArrow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixArrow__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionSuffixArrowAccess().getARROWTerminalRuleCall_1()); }
	RULE_ARROW
{ after(grammarAccess.getPostfixExpressionSuffixArrowAccess().getARROWTerminalRuleCall_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpressionSuffixArrow__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpressionSuffixArrow__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixArrow__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionSuffixArrowAccess().getIdAssignment_2()); }
(rule__PostfixExpressionSuffixArrow__IdAssignment_2)
{ after(grammarAccess.getPostfixExpressionSuffixArrowAccess().getIdAssignment_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__PostfixExpressionSuffixPlusPlus__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpressionSuffixPlusPlus__Group__0__Impl
	rule__PostfixExpressionSuffixPlusPlus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixPlusPlus__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionSuffixPlusPlusAccess().getPostfixExpressionSuffixPlusPlusAction_0()); }
(

)
{ after(grammarAccess.getPostfixExpressionSuffixPlusPlusAccess().getPostfixExpressionSuffixPlusPlusAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpressionSuffixPlusPlus__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpressionSuffixPlusPlus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixPlusPlus__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionSuffixPlusPlusAccess().getSKW_PLUSPLUSTerminalRuleCall_1()); }
	RULE_SKW_PLUSPLUS
{ after(grammarAccess.getPostfixExpressionSuffixPlusPlusAccess().getSKW_PLUSPLUSTerminalRuleCall_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__PostfixExpressionSuffixMinusMinus__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpressionSuffixMinusMinus__Group__0__Impl
	rule__PostfixExpressionSuffixMinusMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixMinusMinus__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionSuffixMinusMinusAccess().getPostfixExpressionSuffixMinusMinusAction_0()); }
(

)
{ after(grammarAccess.getPostfixExpressionSuffixMinusMinusAccess().getPostfixExpressionSuffixMinusMinusAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpressionSuffixMinusMinus__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpressionSuffixMinusMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixMinusMinus__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPostfixExpressionSuffixMinusMinusAccess().getSKW_MINUSMINUSTerminalRuleCall_1()); }
	RULE_SKW_MINUSMINUS
{ after(grammarAccess.getPostfixExpressionSuffixMinusMinusAccess().getSKW_MINUSMINUSTerminalRuleCall_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__ArgumentExpressionList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentExpressionList__Group__0__Impl
	rule__ArgumentExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentExpressionList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getArgumentExpressionListAccess().getExprAssignment_0()); }
(rule__ArgumentExpressionList__ExprAssignment_0)
{ after(grammarAccess.getArgumentExpressionListAccess().getExprAssignment_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentExpressionList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentExpressionList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getArgumentExpressionListAccess().getGroup_1()); }
(rule__ArgumentExpressionList__Group_1__0)*
{ after(grammarAccess.getArgumentExpressionListAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__ArgumentExpressionList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentExpressionList__Group_1__0__Impl
	rule__ArgumentExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentExpressionList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getArgumentExpressionListAccess().getSKW_COMMATerminalRuleCall_1_0()); }
	RULE_SKW_COMMA
{ after(grammarAccess.getArgumentExpressionListAccess().getSKW_COMMATerminalRuleCall_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentExpressionList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentExpressionList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getArgumentExpressionListAccess().getExprAssignment_1_1()); }
(rule__ArgumentExpressionList__ExprAssignment_1_1)
{ after(grammarAccess.getArgumentExpressionListAccess().getExprAssignment_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group__0__Impl
	rule__PrimaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives_1()); }
(rule__PrimaryExpression__Alternatives_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_3__0__Impl
	rule__PrimaryExpression__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getParenthesesAssignment_1_3_0()); }
(rule__PrimaryExpression__ParenthesesAssignment_1_3_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getParenthesesAssignment_1_3_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_3__1__Impl
	rule__PrimaryExpression__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getExprAssignment_1_3_1()); }
(rule__PrimaryExpression__ExprAssignment_1_3_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getExprAssignment_1_3_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_1_3_2()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getPrimaryExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_1_3_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_4__0__Impl
	rule__PrimaryExpression__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getExtAssignment_1_4_0()); }
(rule__PrimaryExpression__ExtAssignment_1_4_0)?
{ after(grammarAccess.getPrimaryExpressionAccess().getExtAssignment_1_4_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_4__1__Impl
	rule__PrimaryExpression__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_1_4_1()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getPrimaryExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_1_4_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_4__2__Impl
	rule__PrimaryExpression__Group_1_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getCompoundStmtAssignment_1_4_2()); }
(rule__PrimaryExpression__CompoundStmtAssignment_1_4_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getCompoundStmtAssignment_1_4_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_1_4_3()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getPrimaryExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_1_4_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__PrimaryExpression__Group_1_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_5__0__Impl
	rule__PrimaryExpression__Group_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getBuiltin_offsetofAssignment_1_5_0()); }
(rule__PrimaryExpression__Builtin_offsetofAssignment_1_5_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getBuiltin_offsetofAssignment_1_5_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_5__1__Impl
	rule__PrimaryExpression__Group_1_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_1_5_1()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getPrimaryExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_1_5_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_5__2__Impl
	rule__PrimaryExpression__Group_1_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getTypeNameAssignment_1_5_2()); }
(rule__PrimaryExpression__TypeNameAssignment_1_5_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getTypeNameAssignment_1_5_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_5__3__Impl
	rule__PrimaryExpression__Group_1_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getSKW_COMMATerminalRuleCall_1_5_3()); }
	RULE_SKW_COMMA
{ after(grammarAccess.getPrimaryExpressionAccess().getSKW_COMMATerminalRuleCall_1_5_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_5__4__Impl
	rule__PrimaryExpression__Group_1_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getExprAssignment_1_5_4()); }
(rule__PrimaryExpression__ExprAssignment_1_5_4)
{ after(grammarAccess.getPrimaryExpressionAccess().getExprAssignment_1_5_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_5__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_5__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_5__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_1_5_5()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getPrimaryExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_1_5_5()); }
)



;
finally {
	restoreStackSize(stackSize);
}














rule__PrimaryExpression__Group_1_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_6__0__Impl
	rule__PrimaryExpression__Group_1_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getBuiltin_typescompatiblepAssignment_1_6_0()); }
(rule__PrimaryExpression__Builtin_typescompatiblepAssignment_1_6_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getBuiltin_typescompatiblepAssignment_1_6_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_6__1__Impl
	rule__PrimaryExpression__Group_1_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_1_6_1()); }
	RULE_SKW_LEFTPAREN
{ after(grammarAccess.getPrimaryExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_1_6_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_6__2__Impl
	rule__PrimaryExpression__Group_1_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getTypeNameAssignment_1_6_2()); }
(rule__PrimaryExpression__TypeNameAssignment_1_6_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getTypeNameAssignment_1_6_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_6__3__Impl
	rule__PrimaryExpression__Group_1_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getSKW_COMMATerminalRuleCall_1_6_3()); }
	RULE_SKW_COMMA
{ after(grammarAccess.getPrimaryExpressionAccess().getSKW_COMMATerminalRuleCall_1_6_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_6__4__Impl
	rule__PrimaryExpression__Group_1_6__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getTypeName2Assignment_1_6_4()); }
(rule__PrimaryExpression__TypeName2Assignment_1_6_4)
{ after(grammarAccess.getPrimaryExpressionAccess().getTypeName2Assignment_1_6_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_6__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_6__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_6__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getPrimaryExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_1_6_5()); }
	RULE_SKW_RIGHTPAREN
{ after(grammarAccess.getPrimaryExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_1_6_5()); }
)



;
finally {
	restoreStackSize(stackSize);
}














rule__Constant2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant2__Group__0__Impl
	rule__Constant2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getConstant2Access().getConstant2Action_0()); }
(

)
{ after(grammarAccess.getConstant2Access().getConstant2Action_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Constant2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getConstant2Access().getAlternatives_1()); }
(rule__Constant2__Alternatives_1)
{ after(grammarAccess.getConstant2Access().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__Ellipsis__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ellipsis__Group__0__Impl
	rule__Ellipsis__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipsis__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEllipsisAccess().getSKW_DOTTerminalRuleCall_0()); }
	RULE_SKW_DOT
{ after(grammarAccess.getEllipsisAccess().getSKW_DOTTerminalRuleCall_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Ellipsis__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ellipsis__Group__1__Impl
	rule__Ellipsis__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipsis__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEllipsisAccess().getSKW_DOTTerminalRuleCall_1()); }
	RULE_SKW_DOT
{ after(grammarAccess.getEllipsisAccess().getSKW_DOTTerminalRuleCall_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Ellipsis__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ellipsis__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipsis__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEllipsisAccess().getSKW_DOTTerminalRuleCall_2()); }
	RULE_SKW_DOT
{ after(grammarAccess.getEllipsisAccess().getSKW_DOTTerminalRuleCall_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}









rule__Parser__ExternalAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParserAccess().getExternalExternalDeclarationParserRuleCall_1_0()); }
	ruleExternalDeclaration{ after(grammarAccess.getParserAccess().getExternalExternalDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDeclaration__FunctiondefHeadAssignment_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalDeclarationAccess().getFunctiondefHeadFunctionDefHeadParserRuleCall_1_0_0_0_0()); }
	ruleFunctionDefHead{ after(grammarAccess.getExternalDeclarationAccess().getFunctiondefHeadFunctionDefHeadParserRuleCall_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDeclaration__FunctionDefinitionAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalDeclarationAccess().getFunctionDefinitionFunctionDefinitionParserRuleCall_1_0_1_0()); }
	ruleFunctionDefinition{ after(grammarAccess.getExternalDeclarationAccess().getFunctionDefinitionFunctionDefinitionParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDeclaration__DeclarationAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalDeclarationAccess().getDeclarationDeclarationParserRuleCall_1_1_0()); }
	ruleDeclaration{ after(grammarAccess.getExternalDeclarationAccess().getDeclarationDeclarationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDeclaration__SemiAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalDeclarationAccess().getSemiSKW_SEMITerminalRuleCall_1_2_0()); }
	RULE_SKW_SEMI{ after(grammarAccess.getExternalDeclarationAccess().getSemiSKW_SEMITerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefHead__FunDeclSpecifiersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefHeadAccess().getFunDeclSpecifiersFunctionDeclarationSpecifiersParserRuleCall_1_0()); }
	ruleFunctionDeclarationSpecifiers{ after(grammarAccess.getFunctionDefHeadAccess().getFunDeclSpecifiersFunctionDeclarationSpecifiersParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefHead__FunDeclaratorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefHeadAccess().getFunDeclaratorDeclaratorParserRuleCall_2_0()); }
	ruleDeclarator{ after(grammarAccess.getFunctionDefHeadAccess().getFunDeclaratorDeclaratorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefHead__FunDeclarationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefHeadAccess().getFunDeclarationDeclarationParserRuleCall_3_0()); }
	ruleDeclaration{ after(grammarAccess.getFunctionDefHeadAccess().getFunDeclarationDeclarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__BodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getBodyBodyStatementParserRuleCall_1_0()); }
	ruleBodyStatement{ after(grammarAccess.getFunctionDefinitionAccess().getBodyBodyStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__SpecifiersAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSpecifiersDeclarationSpecifiersParserRuleCall_1_0_0()); }
	ruleDeclarationSpecifiers{ after(grammarAccess.getDeclarationAccess().getSpecifiersDeclarationSpecifiersParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__InitDeclaratorListAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getInitDeclaratorListInitDeclaratorListParserRuleCall_1_1_0()); }
	ruleInitDeclaratorList{ after(grammarAccess.getDeclarationAccess().getInitDeclaratorListInitDeclaratorListParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclarationSpecifiers__DeclarationSpecifierAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationSpecifiersAccess().getDeclarationSpecifierStorageClassSpecifierParserRuleCall_1_0_0()); }
	ruleStorageClassSpecifier{ after(grammarAccess.getFunctionDeclarationSpecifiersAccess().getDeclarationSpecifierStorageClassSpecifierParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclarationSpecifiers__DeclarationSpecifierAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationSpecifiersAccess().getDeclarationSpecifierTypeSpecifierParserRuleCall_1_1_0()); }
	ruleTypeSpecifier{ after(grammarAccess.getFunctionDeclarationSpecifiersAccess().getDeclarationSpecifierTypeSpecifierParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclarationSpecifiers__DeclarationSpecifierAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationSpecifiersAccess().getDeclarationSpecifierTypeQualifierParserRuleCall_1_2_0()); }
	ruleTypeQualifier{ after(grammarAccess.getFunctionDeclarationSpecifiersAccess().getDeclarationSpecifierTypeQualifierParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclarationSpecifiers__DeclarationSpecifierAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationSpecifiersAccess().getDeclarationSpecifierFunctionSpecifierParserRuleCall_1_3_0()); }
	ruleFunctionSpecifier{ after(grammarAccess.getFunctionDeclarationSpecifiersAccess().getDeclarationSpecifierFunctionSpecifierParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationSpecifiers__DeclarationSpecifierAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierStorageClassSpecifierParserRuleCall_1_0_0()); }
	ruleStorageClassSpecifier{ after(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierStorageClassSpecifierParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationSpecifiers__DeclarationSpecifierAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierTypeSpecifierParserRuleCall_1_1_0()); }
	ruleTypeSpecifier{ after(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierTypeSpecifierParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationSpecifiers__DeclarationSpecifierAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierTypeQualifierParserRuleCall_1_2_0()); }
	ruleTypeQualifier{ after(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierTypeQualifierParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationSpecifiers__DeclarationSpecifierAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierFunctionSpecifierParserRuleCall_1_3_0()); }
	ruleFunctionSpecifier{ after(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierFunctionSpecifierParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclaratorList__InitDeclaratorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitDeclaratorListAccess().getInitDeclaratorInitDeclaratorParserRuleCall_1_0()); }
	ruleInitDeclarator{ after(grammarAccess.getInitDeclaratorListAccess().getInitDeclaratorInitDeclaratorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclaratorList__InitDeclaratorAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitDeclaratorListAccess().getInitDeclaratorInitDeclaratorParserRuleCall_2_1_0()); }
	ruleInitDeclarator{ after(grammarAccess.getInitDeclaratorListAccess().getInitDeclaratorInitDeclaratorParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclarator__DeclaratorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitDeclaratorAccess().getDeclaratorDeclaratorParserRuleCall_1_0()); }
	ruleDeclarator{ after(grammarAccess.getInitDeclaratorAccess().getDeclaratorDeclaratorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclarator__InitializerAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitDeclaratorAccess().getInitializerInitializerParserRuleCall_2_1_0()); }
	ruleInitializer{ after(grammarAccess.getInitDeclaratorAccess().getInitializerInitializerParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StorageClassSpecifier__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStorageClassSpecifierAccess().getNameKW_TYPEDEFTerminalRuleCall_1_0_0()); }
	RULE_KW_TYPEDEF{ after(grammarAccess.getStorageClassSpecifierAccess().getNameKW_TYPEDEFTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StorageClassSpecifier__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStorageClassSpecifierAccess().getNameKW_EXTERNTerminalRuleCall_1_1_0()); }
	RULE_KW_EXTERN{ after(grammarAccess.getStorageClassSpecifierAccess().getNameKW_EXTERNTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StorageClassSpecifier__NameAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStorageClassSpecifierAccess().getNameKW_STATICTerminalRuleCall_1_2_0()); }
	RULE_KW_STATIC{ after(grammarAccess.getStorageClassSpecifierAccess().getNameKW_STATICTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StorageClassSpecifier__NameAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStorageClassSpecifierAccess().getNameKW_THREADLOCALTerminalRuleCall_1_3_0()); }
	RULE_KW_THREADLOCAL{ after(grammarAccess.getStorageClassSpecifierAccess().getNameKW_THREADLOCALTerminalRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StorageClassSpecifier__NameAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStorageClassSpecifierAccess().getNameKW_AUTOTerminalRuleCall_1_4_0()); }
	RULE_KW_AUTO{ after(grammarAccess.getStorageClassSpecifierAccess().getNameKW_AUTOTerminalRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StorageClassSpecifier__NameAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStorageClassSpecifierAccess().getNameKW_REGISTERTerminalRuleCall_1_5_0()); }
	RULE_KW_REGISTER{ after(grammarAccess.getStorageClassSpecifierAccess().getNameKW_REGISTERTerminalRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StorageClassSpecifier__NameAssignment_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStorageClassSpecifierAccess().getNameKW_LABEL3TerminalRuleCall_1_6_0()); }
	RULE_KW_LABEL3{ after(grammarAccess.getStorageClassSpecifierAccess().getNameKW_LABEL3TerminalRuleCall_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameKW_BOOLTerminalRuleCall_0_1_0()); }
	RULE_KW_BOOL{ after(grammarAccess.getTypeSpecifierAccess().getNameKW_BOOLTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameKW_BUILTIN_VA_LISTTerminalRuleCall_1_0()); }
	RULE_KW_BUILTIN_VA_LIST{ after(grammarAccess.getTypeSpecifierAccess().getNameKW_BUILTIN_VA_LISTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameKW_CHARTerminalRuleCall_2_0()); }
	RULE_KW_CHAR{ after(grammarAccess.getTypeSpecifierAccess().getNameKW_CHARTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameKW_COMPLEXTerminalRuleCall_3_0()); }
	RULE_KW_COMPLEX{ after(grammarAccess.getTypeSpecifierAccess().getNameKW_COMPLEXTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameKW_DOUBLETerminalRuleCall_4_0()); }
	RULE_KW_DOUBLE{ after(grammarAccess.getTypeSpecifierAccess().getNameKW_DOUBLETerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameKW_FLOATTerminalRuleCall_5_0()); }
	RULE_KW_FLOAT{ after(grammarAccess.getTypeSpecifierAccess().getNameKW_FLOATTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameKW_INTTerminalRuleCall_6_0()); }
	RULE_KW_INT{ after(grammarAccess.getTypeSpecifierAccess().getNameKW_INTTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameKW_INT128_3TerminalRuleCall_7_0()); }
	RULE_KW_INT128_3{ after(grammarAccess.getTypeSpecifierAccess().getNameKW_INT128_3TerminalRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameKW_LONGTerminalRuleCall_8_0()); }
	RULE_KW_LONG{ after(grammarAccess.getTypeSpecifierAccess().getNameKW_LONGTerminalRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameKW_SHORTTerminalRuleCall_9_0()); }
	RULE_KW_SHORT{ after(grammarAccess.getTypeSpecifierAccess().getNameKW_SHORTTerminalRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameKW_M128TerminalRuleCall_10_0()); }
	RULE_KW_M128{ after(grammarAccess.getTypeSpecifierAccess().getNameKW_M128TerminalRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameKW_M128DTerminalRuleCall_11_0()); }
	RULE_KW_M128D{ after(grammarAccess.getTypeSpecifierAccess().getNameKW_M128DTerminalRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameKW_M128ITerminalRuleCall_12_0()); }
	RULE_KW_M128I{ after(grammarAccess.getTypeSpecifierAccess().getNameKW_M128ITerminalRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment_13
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameKW_SIGNED1TerminalRuleCall_13_0()); }
	RULE_KW_SIGNED1{ after(grammarAccess.getTypeSpecifierAccess().getNameKW_SIGNED1TerminalRuleCall_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment_14
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameKW_SIGNED2TerminalRuleCall_14_0()); }
	RULE_KW_SIGNED2{ after(grammarAccess.getTypeSpecifierAccess().getNameKW_SIGNED2TerminalRuleCall_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment_15
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameKW_SIGNED3TerminalRuleCall_15_0()); }
	RULE_KW_SIGNED3{ after(grammarAccess.getTypeSpecifierAccess().getNameKW_SIGNED3TerminalRuleCall_15_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment_16
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameKW_UNSIGNEDTerminalRuleCall_16_0()); }
	RULE_KW_UNSIGNED{ after(grammarAccess.getTypeSpecifierAccess().getNameKW_UNSIGNEDTerminalRuleCall_16_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment_17
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameKW_VOIDTerminalRuleCall_17_0()); }
	RULE_KW_VOID{ after(grammarAccess.getTypeSpecifierAccess().getNameKW_VOIDTerminalRuleCall_17_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment_18_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getNameKW_EXTENSIONTerminalRuleCall_18_0_0()); }
	RULE_KW_EXTENSION{ after(grammarAccess.getTypeSpecifierAccess().getNameKW_EXTENSIONTerminalRuleCall_18_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__ExtTypeAssignment_18_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getExtTypeKW_M128TerminalRuleCall_18_1_1_0_0()); }
	RULE_KW_M128{ after(grammarAccess.getTypeSpecifierAccess().getExtTypeKW_M128TerminalRuleCall_18_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__ExtTypeAssignment_18_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getExtTypeKW_M128DTerminalRuleCall_18_1_1_1_0()); }
	RULE_KW_M128D{ after(grammarAccess.getTypeSpecifierAccess().getExtTypeKW_M128DTerminalRuleCall_18_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__ExtTypeAssignment_18_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getExtTypeKW_M128ITerminalRuleCall_18_1_1_2_0()); }
	RULE_KW_M128I{ after(grammarAccess.getTypeSpecifierAccess().getExtTypeKW_M128ITerminalRuleCall_18_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__SpecifierAssignment_19
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getSpecifierStructOrUnionSpecifierParserRuleCall_19_0()); }
	ruleStructOrUnionSpecifier{ after(grammarAccess.getTypeSpecifierAccess().getSpecifierStructOrUnionSpecifierParserRuleCall_19_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__SpecifierAssignment_20
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getSpecifierEnumSpecifierParserRuleCall_20_0()); }
	ruleEnumSpecifier{ after(grammarAccess.getTypeSpecifierAccess().getSpecifierEnumSpecifierParserRuleCall_20_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__TypeAssignment_21
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getTypeTypedefNameParserRuleCall_21_0()); }
	ruleTypedefName{ after(grammarAccess.getTypeSpecifierAccess().getTypeTypedefNameParserRuleCall_21_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__TypeOfAssignment_22_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getTypeOfAlternatives_22_0_0()); }
(rule__TypeSpecifier__TypeOfAlternatives_22_0_0)
{ after(grammarAccess.getTypeSpecifierAccess().getTypeOfAlternatives_22_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__TypeNameAssignment_22_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getTypeNameTypeNameParserRuleCall_22_1_1_0_0()); }
	ruleTypeName{ after(grammarAccess.getTypeSpecifierAccess().getTypeNameTypeNameParserRuleCall_22_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__ConstExprAssignment_22_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getConstExprConstantExpressionParserRuleCall_22_1_1_1_0()); }
	ruleConstantExpression{ after(grammarAccess.getTypeSpecifierAccess().getConstExprConstantExpressionParserRuleCall_22_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__BuiltinChooseExprAssignment_23_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getBuiltinChooseExprKW_BUILTIN_CHOOSE_EXPRTerminalRuleCall_23_0_0()); }
	RULE_KW_BUILTIN_CHOOSE_EXPR{ after(grammarAccess.getTypeSpecifierAccess().getBuiltinChooseExprKW_BUILTIN_CHOOSE_EXPRTerminalRuleCall_23_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__ConstExprAssignment_23_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getConstExprConstantExpressionParserRuleCall_23_1_1_0()); }
	ruleConstantExpression{ after(grammarAccess.getTypeSpecifierAccess().getConstExprConstantExpressionParserRuleCall_23_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Expr1Assignment_23_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getExpr1ConstantExpressionParserRuleCall_23_1_3_0()); }
	ruleConstantExpression{ after(grammarAccess.getTypeSpecifierAccess().getExpr1ConstantExpressionParserRuleCall_23_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Expr2Assignment_23_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getExpr2ConstantExpressionParserRuleCall_23_1_5_0()); }
	ruleConstantExpression{ after(grammarAccess.getTypeSpecifierAccess().getExpr2ConstantExpressionParserRuleCall_23_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefName__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefNameAccess().getIdIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTypedefNameAccess().getIdIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructOrUnionSpecifierAccess().getTypeStructOrUnionParserRuleCall_1_0()); }
	ruleStructOrUnion{ after(grammarAccess.getStructOrUnionSpecifierAccess().getTypeStructOrUnionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__IdAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructOrUnionSpecifierAccess().getIdIDTerminalRuleCall_2_0_0_0()); }
	RULE_ID{ after(grammarAccess.getStructOrUnionSpecifierAccess().getIdIDTerminalRuleCall_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__BracesAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructOrUnionSpecifierAccess().getBracesSKW_LEFTBRACETerminalRuleCall_2_0_1_0()); }
	RULE_SKW_LEFTBRACE{ after(grammarAccess.getStructOrUnionSpecifierAccess().getBracesSKW_LEFTBRACETerminalRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__StructDeclListAssignment_2_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructOrUnionSpecifierAccess().getStructDeclListStructDeclarationListParserRuleCall_2_0_2_0()); }
	ruleStructDeclarationList{ after(grammarAccess.getStructOrUnionSpecifierAccess().getStructDeclListStructDeclarationListParserRuleCall_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__IdAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructOrUnionSpecifierAccess().getIdIDTerminalRuleCall_2_1_0()); }
	RULE_ID{ after(grammarAccess.getStructOrUnionSpecifierAccess().getIdIDTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnion__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructOrUnionAccess().getNameKW_STRUCTTerminalRuleCall_0_1_0()); }
	RULE_KW_STRUCT{ after(grammarAccess.getStructOrUnionAccess().getNameKW_STRUCTTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnion__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructOrUnionAccess().getNameKW_UNIONTerminalRuleCall_1_0()); }
	RULE_KW_UNION{ after(grammarAccess.getStructOrUnionAccess().getNameKW_UNIONTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarationList__StructDeclarationAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructDeclarationListAccess().getStructDeclarationStructDeclarationParserRuleCall_0()); }
	ruleStructDeclaration{ after(grammarAccess.getStructDeclarationListAccess().getStructDeclarationStructDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__ListAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructDeclarationAccess().getListSpecifierQualifierListParserRuleCall_1_0_0()); }
	ruleSpecifierQualifierList{ after(grammarAccess.getStructDeclarationAccess().getListSpecifierQualifierListParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__StructDeclarationListAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructDeclarationAccess().getStructDeclarationListStructDeclaratorListParserRuleCall_1_1_0()); }
	ruleStructDeclaratorList{ after(grammarAccess.getStructDeclarationAccess().getStructDeclarationListStructDeclaratorListParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecifierQualifierList__TypeSpecifierAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecifierQualifierListAccess().getTypeSpecifierTypeSpecifierParserRuleCall_1_0_0()); }
	ruleTypeSpecifier{ after(grammarAccess.getSpecifierQualifierListAccess().getTypeSpecifierTypeSpecifierParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecifierQualifierList__TypeQualifierAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecifierQualifierListAccess().getTypeQualifierTypeQualifierParserRuleCall_1_1_0()); }
	ruleTypeQualifier{ after(grammarAccess.getSpecifierQualifierListAccess().getTypeQualifierTypeQualifierParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaratorList__StructDeclaratorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructDeclaratorListAccess().getStructDeclaratorStructDeclaratorParserRuleCall_0_0()); }
	ruleStructDeclarator{ after(grammarAccess.getStructDeclaratorListAccess().getStructDeclaratorStructDeclaratorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaratorList__StructDeclaratorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructDeclaratorListAccess().getStructDeclaratorStructDeclaratorParserRuleCall_1_1_0()); }
	ruleStructDeclarator{ after(grammarAccess.getStructDeclaratorListAccess().getStructDeclaratorStructDeclaratorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__DeclaratorAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructDeclaratorAccess().getDeclaratorDeclaratorParserRuleCall_0_0_0()); }
	ruleDeclarator{ after(grammarAccess.getStructDeclaratorAccess().getDeclaratorDeclaratorParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__ConstExprAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructDeclaratorAccess().getConstExprConstantExpressionParserRuleCall_0_1_1_0()); }
	ruleConstantExpression{ after(grammarAccess.getStructDeclaratorAccess().getConstExprConstantExpressionParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__ConstExprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructDeclaratorAccess().getConstExprConstantExpressionParserRuleCall_1_1_0()); }
	ruleConstantExpression{ after(grammarAccess.getStructDeclaratorAccess().getConstExprConstantExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__EnumListAssignment_1_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumSpecifierAccess().getEnumListEnumeratorListParserRuleCall_1_1_0_1_0()); }
	ruleEnumeratorList{ after(grammarAccess.getEnumSpecifierAccess().getEnumListEnumeratorListParserRuleCall_1_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__IdAssignment_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumSpecifierAccess().getIdIDTerminalRuleCall_1_1_1_0_0()); }
	RULE_ID{ after(grammarAccess.getEnumSpecifierAccess().getIdIDTerminalRuleCall_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__EnumListAssignment_1_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumSpecifierAccess().getEnumListEnumeratorListParserRuleCall_1_1_1_1_1_0()); }
	ruleEnumeratorList{ after(grammarAccess.getEnumSpecifierAccess().getEnumListEnumeratorListParserRuleCall_1_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratorList__EnumeratorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratorListAccess().getEnumeratorEnumeratorParserRuleCall_0_0()); }
	ruleEnumerator{ after(grammarAccess.getEnumeratorListAccess().getEnumeratorEnumeratorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratorList__EnumeratorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratorListAccess().getEnumeratorEnumeratorParserRuleCall_1_1_0()); }
	ruleEnumerator{ after(grammarAccess.getEnumeratorListAccess().getEnumeratorEnumeratorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratorList__LastCommaAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratorListAccess().getLastCommaSKW_COMMATerminalRuleCall_2_0()); }
	RULE_SKW_COMMA{ after(grammarAccess.getEnumeratorListAccess().getLastCommaSKW_COMMATerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratorAccess().getIdIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEnumeratorAccess().getIdIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__ExprAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratorAccess().getExprConstantExpressionParserRuleCall_2_1_0()); }
	ruleConstantExpression{ after(grammarAccess.getEnumeratorAccess().getExprConstantExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeQualifier__TypeAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeQualifierAccess().getTypeKW_CONSTTerminalRuleCall_1_0_0()); }
	RULE_KW_CONST{ after(grammarAccess.getTypeQualifierAccess().getTypeKW_CONSTTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeQualifier__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeQualifierAccess().getTypeKW_RESTRICTTerminalRuleCall_1_1_0()); }
	RULE_KW_RESTRICT{ after(grammarAccess.getTypeQualifierAccess().getTypeKW_RESTRICTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeQualifier__TypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeQualifierAccess().getTypeKW_RESTRICT2TerminalRuleCall_1_2_0()); }
	RULE_KW_RESTRICT2{ after(grammarAccess.getTypeQualifierAccess().getTypeKW_RESTRICT2TerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeQualifier__TypeAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeQualifierAccess().getTypeKW_RESTRICT3TerminalRuleCall_1_3_0()); }
	RULE_KW_RESTRICT3{ after(grammarAccess.getTypeQualifierAccess().getTypeKW_RESTRICT3TerminalRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeQualifier__TypeAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeQualifierAccess().getTypeKW_VOLATILETerminalRuleCall_1_4_0()); }
	RULE_KW_VOLATILE{ after(grammarAccess.getTypeQualifierAccess().getTypeKW_VOLATILETerminalRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeQualifier__TypeAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeQualifierAccess().getTypeKW_ATOMICTerminalRuleCall_1_5_0()); }
	RULE_KW_ATOMIC{ after(grammarAccess.getTypeQualifierAccess().getTypeKW_ATOMICTerminalRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSpecifier__NameAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSpecifierAccess().getNameKW_INLINE1TerminalRuleCall_1_0_0_0()); }
	RULE_KW_INLINE1{ after(grammarAccess.getFunctionSpecifierAccess().getNameKW_INLINE1TerminalRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSpecifier__NameAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSpecifierAccess().getNameKW_INLINE2TerminalRuleCall_1_0_1_0()); }
	RULE_KW_INLINE2{ after(grammarAccess.getFunctionSpecifierAccess().getNameKW_INLINE2TerminalRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSpecifier__NameAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSpecifierAccess().getNameKW_INLINE3TerminalRuleCall_1_0_2_0()); }
	RULE_KW_INLINE3{ after(grammarAccess.getFunctionSpecifierAccess().getNameKW_INLINE3TerminalRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSpecifier__NameAssignment_1_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSpecifierAccess().getNameKW_NORETURNTerminalRuleCall_1_0_3_0()); }
	RULE_KW_NORETURN{ after(grammarAccess.getFunctionSpecifierAccess().getNameKW_NORETURNTerminalRuleCall_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSpecifier__GccAttributeSpecifierAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionSpecifierAccess().getGccAttributeSpecifierGccAttributeSpecifierParserRuleCall_1_1_0()); }
	ruleGccAttributeSpecifier{ after(grammarAccess.getFunctionSpecifierAccess().getGccAttributeSpecifierGccAttributeSpecifierParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__PointerAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaratorAccess().getPointerPointerParserRuleCall_1_0()); }
	rulePointer{ after(grammarAccess.getDeclaratorAccess().getPointerPointerParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__GccDeclExt1Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaratorAccess().getGccDeclExt1GccDeclaratorExtensionParserRuleCall_2_0()); }
	ruleGccDeclaratorExtension{ after(grammarAccess.getDeclaratorAccess().getGccDeclExt1GccDeclaratorExtensionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__DeclaratorAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaratorAccess().getDeclaratorDirectDeclaratorParserRuleCall_3_0()); }
	ruleDirectDeclarator{ after(grammarAccess.getDeclaratorAccess().getDeclaratorDirectDeclaratorParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__GccDeclExt2Assignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaratorAccess().getGccDeclExt2GccDeclaratorExtensionParserRuleCall_4_0()); }
	ruleGccDeclaratorExtension{ after(grammarAccess.getDeclaratorAccess().getGccDeclExt2GccDeclaratorExtensionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__IdAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectDeclaratorAccess().getIdIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getDirectDeclaratorAccess().getIdIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__DeclaratorAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectDeclaratorAccess().getDeclaratorDeclaratorParserRuleCall_1_1_1_0()); }
	ruleDeclarator{ after(grammarAccess.getDirectDeclaratorAccess().getDeclaratorDeclaratorParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__DeclaratorSuffixAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectDeclaratorAccess().getDeclaratorSuffixDeclaratorSuffixParserRuleCall_2_0()); }
	ruleDeclaratorSuffix{ after(grammarAccess.getDirectDeclaratorAccess().getDeclaratorSuffixDeclaratorSuffixParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaratorSuffix__ExprAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaratorSuffixAccess().getExprAssignmentExpressionParserRuleCall_1_0_1_0()); }
	ruleAssignmentExpression{ after(grammarAccess.getDeclaratorSuffixAccess().getExprAssignmentExpressionParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaratorSuffix__LastSuffixAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaratorSuffixAccess().getLastSuffixDirectDeclaratorLastSuffixParserRuleCall_1_2_0()); }
	ruleDirectDeclaratorLastSuffix{ after(grammarAccess.getDeclaratorSuffixAccess().getLastSuffixDirectDeclaratorLastSuffixParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclaratorLastSuffix__ParameterTypeListAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectDeclaratorLastSuffixAccess().getParameterTypeListParameterTypeListParserRuleCall_2_0_0()); }
	ruleParameterTypeList{ after(grammarAccess.getDirectDeclaratorLastSuffixAccess().getParameterTypeListParameterTypeListParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclaratorLastSuffix__IdentifierListAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectDeclaratorLastSuffixAccess().getIdentifierListIdentifierListParserRuleCall_2_1_0()); }
	ruleIdentifierList{ after(grammarAccess.getDirectDeclaratorLastSuffixAccess().getIdentifierListIdentifierListParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GccDeclaratorExtension__AsmAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGccDeclaratorExtensionAccess().getAsmAlternatives_1_0_0_0()); }
(rule__GccDeclaratorExtension__AsmAlternatives_1_0_0_0)
{ after(grammarAccess.getGccDeclaratorExtensionAccess().getAsmAlternatives_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GccDeclaratorExtension__StringAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGccDeclaratorExtensionAccess().getStringSTRING_LITERALTerminalRuleCall_1_0_2_0()); }
	RULE_STRING_LITERAL{ after(grammarAccess.getGccDeclaratorExtensionAccess().getStringSTRING_LITERALTerminalRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GccDeclaratorExtension__GccAttributeSpecifierAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGccDeclaratorExtensionAccess().getGccAttributeSpecifierGccAttributeSpecifierParserRuleCall_1_1_0()); }
	ruleGccAttributeSpecifier{ after(grammarAccess.getGccDeclaratorExtensionAccess().getGccAttributeSpecifierGccAttributeSpecifierParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttributeSpecifier__AttributeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGccAttributeSpecifierAccess().getAttributeAlternatives_1_0()); }
(rule__GccAttributeSpecifier__AttributeAlternatives_1_0)
{ after(grammarAccess.getGccAttributeSpecifierAccess().getAttributeAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttributeSpecifier__ListAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGccAttributeSpecifierAccess().getListGccAttributeListParserRuleCall_4_0()); }
	ruleGccAttributeList{ after(grammarAccess.getGccAttributeSpecifierAccess().getListGccAttributeListParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttributeList__GccAttributeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGccAttributeListAccess().getGccAttributeGccAttributeParserRuleCall_0_0()); }
	ruleGccAttribute{ after(grammarAccess.getGccAttributeListAccess().getGccAttributeGccAttributeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttributeList__GccAttributeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGccAttributeListAccess().getGccAttributeGccAttributeParserRuleCall_1_1_0()); }
	ruleGccAttribute{ after(grammarAccess.getGccAttributeListAccess().getGccAttributeGccAttributeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttribute__IdAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGccAttributeAccess().getIdIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getGccAttributeAccess().getIdIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttribute__ConstAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGccAttributeAccess().getConstConstant1ParserRuleCall_1_1_0()); }
	ruleConstant1{ after(grammarAccess.getGccAttributeAccess().getConstConstant1ParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttribute__KeywordAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGccAttributeAccess().getKeywordParserKeywordsParserRuleCall_1_2_0()); }
	ruleParserKeywords{ after(grammarAccess.getGccAttributeAccess().getKeywordParserKeywordsParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GccAttribute__ListAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGccAttributeAccess().getListArgumentExpressionListParserRuleCall_2_1_0()); }
	ruleArgumentExpressionList{ after(grammarAccess.getGccAttributeAccess().getListArgumentExpressionListParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__StarAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointerAccess().getStarSKW_STARTerminalRuleCall_1_0_0_0()); }
	RULE_SKW_STAR{ after(grammarAccess.getPointerAccess().getStarSKW_STARTerminalRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__CaretAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointerAccess().getCaretSKW_CARETTerminalRuleCall_1_0_1_0()); }
	RULE_SKW_CARET{ after(grammarAccess.getPointerAccess().getCaretSKW_CARETTerminalRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__TypeQualifierListAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointerAccess().getTypeQualifierListTypeQualifierListParserRuleCall_1_1_0()); }
	ruleTypeQualifierList{ after(grammarAccess.getPointerAccess().getTypeQualifierListTypeQualifierListParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeQualifierList__TypeQualifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeQualifierListAccess().getTypeQualifierTypeQualifierParserRuleCall_1_0()); }
	ruleTypeQualifier{ after(grammarAccess.getTypeQualifierListAccess().getTypeQualifierTypeQualifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTypeList__ListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTypeListAccess().getListParameterListParserRuleCall_1_0()); }
	ruleParameterList{ after(grammarAccess.getParameterTypeListAccess().getListParameterListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTypeList__EllipsisAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTypeListAccess().getEllipsisEllipsisParserRuleCall_2_1_0()); }
	ruleEllipsis{ after(grammarAccess.getParameterTypeListAccess().getEllipsisEllipsisParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParameterDeclarationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getParameterDeclarationParameterDeclarationParserRuleCall_1_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getParameterListAccess().getParameterDeclarationParameterDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParameterDeclarationAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getParameterDeclarationParameterDeclarationParserRuleCall_2_1_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getParameterListAccess().getParameterDeclarationParameterDeclarationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__DeclSpecifiersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getDeclSpecifiersDeclarationSpecifiersParserRuleCall_1_0()); }
	ruleDeclarationSpecifiers{ after(grammarAccess.getParameterDeclarationAccess().getDeclSpecifiersDeclarationSpecifiersParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__DeclaratorAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getDeclaratorDeclaratorParserRuleCall_2_0_0()); }
	ruleDeclarator{ after(grammarAccess.getParameterDeclarationAccess().getDeclaratorDeclaratorParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__AbstractDeclatorAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getAbstractDeclatorAbstractDeclaratorParserRuleCall_2_1_0()); }
	ruleAbstractDeclarator{ after(grammarAccess.getParameterDeclarationAccess().getAbstractDeclatorAbstractDeclaratorParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierListAccess().getIdMyIdentifierParserRuleCall_1_0()); }
	ruleMyIdentifier{ after(grammarAccess.getIdentifierListAccess().getIdMyIdentifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__IdAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierListAccess().getIdMyIdentifierParserRuleCall_2_1_0()); }
	ruleMyIdentifier{ after(grammarAccess.getIdentifierListAccess().getIdMyIdentifierParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MyIdentifier__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMyIdentifierAccess().getIdIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getMyIdentifierAccess().getIdIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__ListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameAccess().getListSpecifierQualifierListParserRuleCall_1_0()); }
	ruleSpecifierQualifierList{ after(grammarAccess.getTypeNameAccess().getListSpecifierQualifierListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__AbstractDeclaratorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameAccess().getAbstractDeclaratorAbstractDeclaratorParserRuleCall_2_0()); }
	ruleAbstractDeclarator{ after(grammarAccess.getTypeNameAccess().getAbstractDeclaratorAbstractDeclaratorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclarator__PointerAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractDeclaratorAccess().getPointerPointerParserRuleCall_1_0_0()); }
	rulePointer{ after(grammarAccess.getAbstractDeclaratorAccess().getPointerPointerParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclarator__PointerAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractDeclaratorAccess().getPointerPointerParserRuleCall_1_1_0_0()); }
	rulePointer{ after(grammarAccess.getAbstractDeclaratorAccess().getPointerPointerParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclarator__DirectAbstractDeclaratorAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractDeclaratorAccess().getDirectAbstractDeclaratorDirectAbstractDeclaratorParserRuleCall_1_1_1_0()); }
	ruleDirectAbstractDeclarator{ after(grammarAccess.getAbstractDeclaratorAccess().getDirectAbstractDeclaratorDirectAbstractDeclaratorParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclarator__GccDeclExtAbstractAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractDeclaratorAccess().getGccDeclExtAbstractGccDeclaratorExtensionParserRuleCall_1_1_2_0()); }
	ruleGccDeclaratorExtension{ after(grammarAccess.getAbstractDeclaratorAccess().getGccDeclExtAbstractGccDeclaratorExtensionParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator__DeclaratorAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectAbstractDeclaratorAccess().getDeclaratorAbstractDeclaratorParserRuleCall_1_0_1_0()); }
	ruleAbstractDeclarator{ after(grammarAccess.getDirectAbstractDeclaratorAccess().getDeclaratorAbstractDeclaratorParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator__GccDeclExtAssignment_1_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectAbstractDeclaratorAccess().getGccDeclExtGccDeclaratorExtensionParserRuleCall_1_0_3_0()); }
	ruleGccDeclaratorExtension{ after(grammarAccess.getDirectAbstractDeclaratorAccess().getGccDeclExtGccDeclaratorExtensionParserRuleCall_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator__AbstractDeclaratorSuffixAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectAbstractDeclaratorAccess().getAbstractDeclaratorSuffixAbstractDeclaratorSuffixParserRuleCall_1_1_0()); }
	ruleAbstractDeclaratorSuffix{ after(grammarAccess.getDirectAbstractDeclaratorAccess().getAbstractDeclaratorSuffixAbstractDeclaratorSuffixParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator__AbstractDeclaratorSuffixAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectAbstractDeclaratorAccess().getAbstractDeclaratorSuffixAbstractDeclaratorSuffixParserRuleCall_2_0()); }
	ruleAbstractDeclaratorSuffix{ after(grammarAccess.getDirectAbstractDeclaratorAccess().getAbstractDeclaratorSuffixAbstractDeclaratorSuffixParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__TypeQualifierListAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getTypeQualifierListTypeQualifierListParserRuleCall_1_0_1_0()); }
	ruleTypeQualifierList{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getTypeQualifierListTypeQualifierListParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__AssignmentExprAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getAssignmentExprAssignmentExpressionParserRuleCall_1_0_2_0()); }
	ruleAssignmentExpression{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getAssignmentExprAssignmentExpressionParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__TypeQualifierListAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getTypeQualifierListTypeQualifierListParserRuleCall_1_1_2_0()); }
	ruleTypeQualifierList{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getTypeQualifierListTypeQualifierListParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__AssignmentExprAssignment_1_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getAssignmentExprAssignmentExpressionParserRuleCall_1_1_3_0()); }
	ruleAssignmentExpression{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getAssignmentExprAssignmentExpressionParserRuleCall_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__TypeQualifierListOrigAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getTypeQualifierListOrigTypeQualifierListParserRuleCall_1_2_1_0()); }
	ruleTypeQualifierList{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getTypeQualifierListOrigTypeQualifierListParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__AssignmentExprAssignment_1_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getAssignmentExprAssignmentExpressionParserRuleCall_1_2_3_0()); }
	ruleAssignmentExpression{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getAssignmentExprAssignmentExpressionParserRuleCall_1_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__ParameterTypeListAssignment_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getParameterTypeListParameterTypeListParserRuleCall_1_4_1_0()); }
	ruleParameterTypeList{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getParameterTypeListParameterTypeListParserRuleCall_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclaratorSuffix__GccDeclExtAssignment_1_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractDeclaratorSuffixAccess().getGccDeclExtGccDeclaratorExtensionParserRuleCall_1_4_3_0()); }
	ruleGccDeclaratorExtension{ after(grammarAccess.getAbstractDeclaratorSuffixAccess().getGccDeclExtGccDeclaratorExtensionParserRuleCall_1_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__ExprAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitializerAccess().getExprAssignmentExpressionParserRuleCall_1_0_0()); }
	ruleAssignmentExpression{ after(grammarAccess.getInitializerAccess().getExprAssignmentExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__ListAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitializerAccess().getListInitializerListParserRuleCall_1_1_1_0()); }
	ruleInitializerList{ after(grammarAccess.getInitializerAccess().getListInitializerListParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__LastCommaAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitializerAccess().getLastCommaSKW_COMMATerminalRuleCall_1_1_2_0()); }
	RULE_SKW_COMMA{ after(grammarAccess.getInitializerAccess().getLastCommaSKW_COMMATerminalRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList__InitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitializerListAccess().getInitInitParserRuleCall_1_0()); }
	ruleInit{ after(grammarAccess.getInitializerListAccess().getInitInitParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList__InitAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitializerListAccess().getInitInitParserRuleCall_2_1_0()); }
	ruleInit{ after(grammarAccess.getInitializerListAccess().getInitInitParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Init__DesignationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitAccess().getDesignationDesignationParserRuleCall_1_0()); }
	ruleDesignation{ after(grammarAccess.getInitAccess().getDesignationDesignationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Init__InitializerAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitAccess().getInitializerInitializerParserRuleCall_2_0()); }
	ruleInitializer{ after(grammarAccess.getInitAccess().getInitializerInitializerParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockList__DeclarationAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockListAccess().getDeclarationDeclarationParserRuleCall_1_0_0()); }
	ruleDeclaration{ after(grammarAccess.getBlockListAccess().getDeclarationDeclarationParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockList__StatementAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockListAccess().getStatementStatementParserRuleCall_1_1_0()); }
	ruleStatement{ after(grammarAccess.getBlockListAccess().getStatementStatementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StmtAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStmtLabeledStatementParserRuleCall_1_0_0()); }
	ruleLabeledStatement{ after(grammarAccess.getStatementAccess().getStmtLabeledStatementParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StmtAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStmtCompoundStatementParserRuleCall_1_1_0()); }
	ruleCompoundStatement{ after(grammarAccess.getStatementAccess().getStmtCompoundStatementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StmtAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStmtExpressionStatementParserRuleCall_1_2_0()); }
	ruleExpressionStatement{ after(grammarAccess.getStatementAccess().getStmtExpressionStatementParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StmtAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStmtSelectionStatementParserRuleCall_1_3_0()); }
	ruleSelectionStatement{ after(grammarAccess.getStatementAccess().getStmtSelectionStatementParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StmtAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStmtIterationStatementParserRuleCall_1_4_0()); }
	ruleIterationStatement{ after(grammarAccess.getStatementAccess().getStmtIterationStatementParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StmtAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStmtJumpStatementParserRuleCall_1_5_0()); }
	ruleJumpStatement{ after(grammarAccess.getStatementAccess().getStmtJumpStatementParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StmtAssignment_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStmtAsmStatementParserRuleCall_1_6_0()); }
	ruleAsmStatement{ after(grammarAccess.getStatementAccess().getStmtAsmStatementParserRuleCall_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__IdAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledStatementAccess().getIdIDTerminalRuleCall_1_0_0_0()); }
	RULE_ID{ after(grammarAccess.getLabeledStatementAccess().getIdIDTerminalRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__LStmtAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledStatementAccess().getLStmtStatementParserRuleCall_1_0_2_0()); }
	ruleStatement{ after(grammarAccess.getLabeledStatementAccess().getLStmtStatementParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__CaseAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledStatementAccess().getCaseKW_CASETerminalRuleCall_1_1_0_0()); }
	RULE_KW_CASE{ after(grammarAccess.getLabeledStatementAccess().getCaseKW_CASETerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__LowerAssignment_1_1_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledStatementAccess().getLowerConstant1ParserRuleCall_1_1_1_0_0_0()); }
	ruleConstant1{ after(grammarAccess.getLabeledStatementAccess().getLowerConstant1ParserRuleCall_1_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__HigherAssignment_1_1_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledStatementAccess().getHigherConstant1ParserRuleCall_1_1_1_0_2_0()); }
	ruleConstant1{ after(grammarAccess.getLabeledStatementAccess().getHigherConstant1ParserRuleCall_1_1_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__ExprAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledStatementAccess().getExprConstantExpressionParserRuleCall_1_1_1_1_0()); }
	ruleConstantExpression{ after(grammarAccess.getLabeledStatementAccess().getExprConstantExpressionParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__LStmtAssignment_1_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledStatementAccess().getLStmtStatementParserRuleCall_1_1_3_0()); }
	ruleStatement{ after(grammarAccess.getLabeledStatementAccess().getLStmtStatementParserRuleCall_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__MydefaultAssignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledStatementAccess().getMydefaultKW_DEFAULTTerminalRuleCall_1_2_0_0()); }
	RULE_KW_DEFAULT{ after(grammarAccess.getLabeledStatementAccess().getMydefaultKW_DEFAULTTerminalRuleCall_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__LStmtAssignment_1_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledStatementAccess().getLStmtStatementParserRuleCall_1_2_2_0()); }
	ruleStatement{ after(grammarAccess.getLabeledStatementAccess().getLStmtStatementParserRuleCall_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStatementAccess().getBodyBodyStatementParserRuleCall_2_0()); }
	ruleBodyStatement{ after(grammarAccess.getCompoundStatementAccess().getBodyBodyStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BodyStatement__BlockListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyStatementAccess().getBlockListBlockListParserRuleCall_1_0()); }
	ruleBlockList{ after(grammarAccess.getBodyStatementAccess().getBlockListBlockListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__IfAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getIfKW_IFTerminalRuleCall_1_0_0_0()); }
	RULE_KW_IF{ after(grammarAccess.getSelectionStatementAccess().getIfKW_IFTerminalRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__ExprAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getExprExpressionParserRuleCall_1_0_2_0()); }
	ruleExpression{ after(grammarAccess.getSelectionStatementAccess().getExprExpressionParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__IfStatementAssignment_1_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getIfStatementStatementParserRuleCall_1_0_4_0()); }
	ruleStatement{ after(grammarAccess.getSelectionStatementAccess().getIfStatementStatementParserRuleCall_1_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__ElseAssignment_1_0_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getElseKW_ELSETerminalRuleCall_1_0_5_0_0()); }
	RULE_KW_ELSE{ after(grammarAccess.getSelectionStatementAccess().getElseKW_ELSETerminalRuleCall_1_0_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__ElseStatementAssignment_1_0_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getElseStatementStatementParserRuleCall_1_0_5_1_0()); }
	ruleStatement{ after(grammarAccess.getSelectionStatementAccess().getElseStatementStatementParserRuleCall_1_0_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__SwitchAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getSwitchKW_SWITCHTerminalRuleCall_1_1_0_0()); }
	RULE_KW_SWITCH{ after(grammarAccess.getSelectionStatementAccess().getSwitchKW_SWITCHTerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__ExprAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getExprExpressionParserRuleCall_1_1_2_0()); }
	ruleExpression{ after(grammarAccess.getSelectionStatementAccess().getExprExpressionParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__SwitchStatementAssignment_1_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getSwitchStatementStatementParserRuleCall_1_1_4_0()); }
	ruleStatement{ after(grammarAccess.getSelectionStatementAccess().getSwitchStatementStatementParserRuleCall_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__WhileAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationStatementAccess().getWhileKW_WHILETerminalRuleCall_1_0_0_0()); }
	RULE_KW_WHILE{ after(grammarAccess.getIterationStatementAccess().getWhileKW_WHILETerminalRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__ExprAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationStatementAccess().getExprExpressionParserRuleCall_1_0_2_0()); }
	ruleExpression{ after(grammarAccess.getIterationStatementAccess().getExprExpressionParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__StatementAssignment_1_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationStatementAccess().getStatementStatementParserRuleCall_1_0_4_0()); }
	ruleStatement{ after(grammarAccess.getIterationStatementAccess().getStatementStatementParserRuleCall_1_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__DoAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationStatementAccess().getDoKW_DOTerminalRuleCall_1_1_0_0()); }
	RULE_KW_DO{ after(grammarAccess.getIterationStatementAccess().getDoKW_DOTerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__StatementAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationStatementAccess().getStatementStatementParserRuleCall_1_1_1_0()); }
	ruleStatement{ after(grammarAccess.getIterationStatementAccess().getStatementStatementParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__ExprAssignment_1_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationStatementAccess().getExprExpressionParserRuleCall_1_1_4_0()); }
	ruleExpression{ after(grammarAccess.getIterationStatementAccess().getExprExpressionParserRuleCall_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__SemiAssignment_1_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationStatementAccess().getSemiSKW_SEMITerminalRuleCall_1_1_6_0()); }
	RULE_SKW_SEMI{ after(grammarAccess.getIterationStatementAccess().getSemiSKW_SEMITerminalRuleCall_1_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__ForAssignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationStatementAccess().getForKW_FORTerminalRuleCall_1_2_0_0()); }
	RULE_KW_FOR{ after(grammarAccess.getIterationStatementAccess().getForKW_FORTerminalRuleCall_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__InitExprAssignment_1_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationStatementAccess().getInitExprExpressionParserRuleCall_1_2_2_0()); }
	ruleExpression{ after(grammarAccess.getIterationStatementAccess().getInitExprExpressionParserRuleCall_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__ExprAssignment_1_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationStatementAccess().getExprExpressionParserRuleCall_1_2_4_0()); }
	ruleExpression{ after(grammarAccess.getIterationStatementAccess().getExprExpressionParserRuleCall_1_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__IncExprAssignment_1_2_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationStatementAccess().getIncExprExpressionParserRuleCall_1_2_6_0()); }
	ruleExpression{ after(grammarAccess.getIterationStatementAccess().getIncExprExpressionParserRuleCall_1_2_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__StatementAssignment_1_2_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationStatementAccess().getStatementStatementParserRuleCall_1_2_8_0()); }
	ruleStatement{ after(grammarAccess.getIterationStatementAccess().getStatementStatementParserRuleCall_1_2_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__ForAssignment_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationStatementAccess().getForKW_FORTerminalRuleCall_1_3_0_0()); }
	RULE_KW_FOR{ after(grammarAccess.getIterationStatementAccess().getForKW_FORTerminalRuleCall_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__InitDeclAssignment_1_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationStatementAccess().getInitDeclDeclarationParserRuleCall_1_3_2_0()); }
	ruleDeclaration{ after(grammarAccess.getIterationStatementAccess().getInitDeclDeclarationParserRuleCall_1_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__ExprAssignment_1_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationStatementAccess().getExprExpressionParserRuleCall_1_3_3_0()); }
	ruleExpression{ after(grammarAccess.getIterationStatementAccess().getExprExpressionParserRuleCall_1_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__IncExprAssignment_1_3_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationStatementAccess().getIncExprExpressionParserRuleCall_1_3_5_0()); }
	ruleExpression{ after(grammarAccess.getIterationStatementAccess().getIncExprExpressionParserRuleCall_1_3_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__StatementAssignment_1_3_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationStatementAccess().getStatementStatementParserRuleCall_1_3_7_0()); }
	ruleStatement{ after(grammarAccess.getIterationStatementAccess().getStatementStatementParserRuleCall_1_3_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__ContinueAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getContinueKW_CONTINUETerminalRuleCall_1_0_0_0()); }
	RULE_KW_CONTINUE{ after(grammarAccess.getJumpStatementAccess().getContinueKW_CONTINUETerminalRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__BreakAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getBreakKW_BREAKTerminalRuleCall_1_1_0_0()); }
	RULE_KW_BREAK{ after(grammarAccess.getJumpStatementAccess().getBreakKW_BREAKTerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__ReturnAssignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getReturnKW_RETURNTerminalRuleCall_1_2_0_0()); }
	RULE_KW_RETURN{ after(grammarAccess.getJumpStatementAccess().getReturnKW_RETURNTerminalRuleCall_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__ExprAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getExprExpressionParserRuleCall_1_2_1_0()); }
	ruleExpression{ after(grammarAccess.getJumpStatementAccess().getExprExpressionParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__GotoAssignment_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getGotoKW_GOTOTerminalRuleCall_1_3_0_0()); }
	RULE_KW_GOTO{ after(grammarAccess.getJumpStatementAccess().getGotoKW_GOTOTerminalRuleCall_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__ExprAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpStatementAccess().getExprUnaryExpressionParserRuleCall_1_3_1_0()); }
	ruleUnaryExpression{ after(grammarAccess.getJumpStatementAccess().getExprUnaryExpressionParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AsmStatement__AsmAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAsmStatementAccess().getAsmKW_ASM1TerminalRuleCall_1_0_0()); }
	RULE_KW_ASM1{ after(grammarAccess.getAsmStatementAccess().getAsmKW_ASM1TerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AsmStatement__AsmAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAsmStatementAccess().getAsmKW_ASM2TerminalRuleCall_1_1_0()); }
	RULE_KW_ASM2{ after(grammarAccess.getAsmStatementAccess().getAsmKW_ASM2TerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AsmStatement__AsmAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAsmStatementAccess().getAsmKW_ASM3TerminalRuleCall_1_2_0()); }
	RULE_KW_ASM3{ after(grammarAccess.getAsmStatementAccess().getAsmKW_ASM3TerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AsmStatement__VolatileAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAsmStatementAccess().getVolatileKW_VOLATILETerminalRuleCall_2_0_0()); }
	RULE_KW_VOLATILE{ after(grammarAccess.getAsmStatementAccess().getVolatileKW_VOLATILETerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AsmStatement__VolatileAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAsmStatementAccess().getVolatileKW_VOLATILE2TerminalRuleCall_2_1_0()); }
	RULE_KW_VOLATILE2{ after(grammarAccess.getAsmStatementAccess().getVolatileKW_VOLATILE2TerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AsmStatement__AsmLine1Assignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAsmStatementAccess().getAsmLine1AsmLineParserRuleCall_4_0_0()); }
	ruleAsmLine{ after(grammarAccess.getAsmStatementAccess().getAsmLine1AsmLineParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AsmStatement__AsmLinesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAsmStatementAccess().getAsmLinesAsmLineWithColonParserRuleCall_4_1_0()); }
	ruleAsmLineWithColon{ after(grammarAccess.getAsmStatementAccess().getAsmLinesAsmLineWithColonParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AsmStatement__LastCommaAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAsmStatementAccess().getLastCommaSKW_COMMATerminalRuleCall_4_2_0()); }
	RULE_SKW_COMMA{ after(grammarAccess.getAsmStatementAccess().getLastCommaSKW_COMMATerminalRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AsmLine__SymAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAsmLineAccess().getSymAsmSymbolicNameParserRuleCall_1_0()); }
	ruleAsmSymbolicName{ after(grammarAccess.getAsmLineAccess().getSymAsmSymbolicNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AsmLine__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAsmLineAccess().getExprLogicalOrExpressionParserRuleCall_2_0()); }
	ruleLogicalOrExpression{ after(grammarAccess.getAsmLineAccess().getExprLogicalOrExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AsmSymbolicName__IdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAsmSymbolicNameAccess().getIdIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getAsmSymbolicNameAccess().getIdIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AsmLineWithColon__AsmLineAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAsmLineWithColonAccess().getAsmLineAsmLineWithoutColonParserRuleCall_2_0()); }
	ruleAsmLineWithoutColon{ after(grammarAccess.getAsmLineWithColonAccess().getAsmLineAsmLineWithoutColonParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AsmLineWithoutColon__AsmLinesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAsmLineWithoutColonAccess().getAsmLinesAsmLineParserRuleCall_1_0()); }
	ruleAsmLine{ after(grammarAccess.getAsmLineWithoutColonAccess().getAsmLinesAsmLineParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AsmLineWithoutColon__AsmLinesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAsmLineWithoutColonAccess().getAsmLinesAsmLineParserRuleCall_2_1_0()); }
	ruleAsmLine{ after(grammarAccess.getAsmLineWithoutColonAccess().getAsmLinesAsmLineParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Designation__ListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignationAccess().getListDesignatorListParserRuleCall_1_0()); }
	ruleDesignatorList{ after(grammarAccess.getDesignationAccess().getListDesignatorListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DesignatorList__DesignatorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignatorListAccess().getDesignatorDesignatorParserRuleCall_1_0()); }
	ruleDesignator{ after(grammarAccess.getDesignatorListAccess().getDesignatorDesignatorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DesignatorList__DesignatorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignatorListAccess().getDesignatorDesignatorParserRuleCall_2_0()); }
	ruleDesignator{ after(grammarAccess.getDesignatorListAccess().getDesignatorDesignatorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__ExprAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignatorAccess().getExprConstantExpressionParserRuleCall_1_0_1_0()); }
	ruleConstantExpression{ after(grammarAccess.getDesignatorAccess().getExprConstantExpressionParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__ToAssignment_1_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignatorAccess().getToConstantExpressionParserRuleCall_1_0_2_1_0()); }
	ruleConstantExpression{ after(grammarAccess.getDesignatorAccess().getToConstantExpressionParserRuleCall_1_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__IdAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignatorAccess().getIdIDTerminalRuleCall_1_1_1_0()); }
	RULE_ID{ after(grammarAccess.getDesignatorAccess().getIdIDTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightAssignmentExpressionParserRuleCall_1_2_0()); }
	ruleAssignmentExpression{ after(grammarAccess.getExpressionAccess().getRightAssignmentExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__ExprAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getExprLvalueParserRuleCall_0_1_0()); }
	ruleLvalue{ after(grammarAccess.getAssignmentExpressionAccess().getExprLvalueParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__OpAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getOpAssignmentOperatorParserRuleCall_0_2_0()); }
	ruleAssignmentOperator{ after(grammarAccess.getAssignmentExpressionAccess().getOpAssignmentOperatorParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__AssignmentExprAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getAssignmentExprAssignmentExpressionParserRuleCall_0_3_0()); }
	ruleAssignmentExpression{ after(grammarAccess.getAssignmentExpressionAccess().getAssignmentExprAssignmentExpressionParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__QExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getQExprExpressionParserRuleCall_1_2_0()); }
	ruleExpression{ after(grammarAccess.getConditionalExpressionAccess().getQExprExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__CExprAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getCExprConditionalExpressionParserRuleCall_1_4_0()); }
	ruleConditionalExpression{ after(grammarAccess.getConditionalExpressionAccess().getCExprConditionalExpressionParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getRightLogicalAndExpressionParserRuleCall_1_2_0()); }
	ruleLogicalAndExpression{ after(grammarAccess.getLogicalOrExpressionAccess().getRightLogicalAndExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getRightInclusiveOrExpressionParserRuleCall_1_2_0()); }
	ruleInclusiveOrExpression{ after(grammarAccess.getLogicalAndExpressionAccess().getRightInclusiveOrExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getRightExclusiveOrExpressionParserRuleCall_1_2_0()); }
	ruleExclusiveOrExpression{ after(grammarAccess.getInclusiveOrExpressionAccess().getRightExclusiveOrExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
	ruleAndExpression{ after(grammarAccess.getExclusiveOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0()); }
	ruleEqualityExpression{ after(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OpAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOpSKW_EQUALTerminalRuleCall_1_1_0_0()); }
	RULE_SKW_EQUAL{ after(grammarAccess.getEqualityExpressionAccess().getOpSKW_EQUALTerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OpAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOpSKW_NOTEQUALTerminalRuleCall_1_1_1_0()); }
	RULE_SKW_NOTEQUAL{ after(grammarAccess.getEqualityExpressionAccess().getOpSKW_NOTEQUALTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); }
	ruleRelationalExpression{ after(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OpAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpSKW_LESSTerminalRuleCall_1_1_0_0()); }
	RULE_SKW_LESS{ after(grammarAccess.getRelationalExpressionAccess().getOpSKW_LESSTerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OpAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpSKW_GREATERTerminalRuleCall_1_1_1_0()); }
	RULE_SKW_GREATER{ after(grammarAccess.getRelationalExpressionAccess().getOpSKW_GREATERTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OpAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpSKW_LESSEQUALTerminalRuleCall_1_1_2_0()); }
	RULE_SKW_LESSEQUAL{ after(grammarAccess.getRelationalExpressionAccess().getOpSKW_LESSEQUALTerminalRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OpAssignment_1_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpSKW_GREATEREQUALTerminalRuleCall_1_1_3_0()); }
	RULE_SKW_GREATEREQUAL{ after(grammarAccess.getRelationalExpressionAccess().getOpSKW_GREATEREQUALTerminalRuleCall_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRightShiftExpressionParserRuleCall_1_2_0()); }
	ruleShiftExpression{ after(grammarAccess.getRelationalExpressionAccess().getRightShiftExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__OpAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionAccess().getOpSKW_LEFTSHIFTTerminalRuleCall_1_1_0_0()); }
	RULE_SKW_LEFTSHIFT{ after(grammarAccess.getShiftExpressionAccess().getOpSKW_LEFTSHIFTTerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__OpAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionAccess().getOpSKW_RIGHTSHIFTTerminalRuleCall_1_1_1_0()); }
	RULE_SKW_RIGHTSHIFT{ after(grammarAccess.getShiftExpressionAccess().getOpSKW_RIGHTSHIFTTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getShiftExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OpAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpSKW_PLUSTerminalRuleCall_1_1_0_0()); }
	RULE_SKW_PLUS{ after(grammarAccess.getAdditiveExpressionAccess().getOpSKW_PLUSTerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OpAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpSKW_MINUSTerminalRuleCall_1_1_1_0()); }
	RULE_SKW_MINUS{ after(grammarAccess.getAdditiveExpressionAccess().getOpSKW_MINUSTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_2_0()); }
	ruleMultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OpAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpSKW_STARTerminalRuleCall_1_1_0_0()); }
	RULE_SKW_STAR{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpSKW_STARTerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OpAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpSKW_DIVTerminalRuleCall_1_1_1_0()); }
	RULE_SKW_DIV{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpSKW_DIVTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OpAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpSKW_MODTerminalRuleCall_1_1_2_0()); }
	RULE_SKW_MOD{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpSKW_MODTerminalRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightCastExpressionParserRuleCall_1_2_0()); }
	ruleCastExpression{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightCastExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__TypeAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastExpressionAccess().getTypeTypeNameParserRuleCall_0_2_0()); }
	ruleTypeName{ after(grammarAccess.getCastExpressionAccess().getTypeTypeNameParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__ExprAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastExpressionAccess().getExprCastExpressionParserRuleCall_0_4_0()); }
	ruleCastExpression{ after(grammarAccess.getCastExpressionAccess().getExprCastExpressionParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__PlusplusAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getPlusplusSKW_PLUSPLUSTerminalRuleCall_1_1_0()); }
	RULE_SKW_PLUSPLUS{ after(grammarAccess.getUnaryExpressionAccess().getPlusplusSKW_PLUSPLUSTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_1_2_0()); }
	ruleUnaryExpression{ after(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__MinusminusAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getMinusminusSKW_MINUSMINUSTerminalRuleCall_2_1_0()); }
	RULE_SKW_MINUSMINUS{ after(grammarAccess.getUnaryExpressionAccess().getMinusminusSKW_MINUSMINUSTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ExprAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_2_2_0()); }
	ruleUnaryExpression{ after(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OpAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOpUnaryOperatorParserRuleCall_3_1_0()); }
	ruleUnaryOperator{ after(grammarAccess.getUnaryExpressionAccess().getOpUnaryOperatorParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ExprAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExprCastExpressionParserRuleCall_3_2_0()); }
	ruleCastExpression{ after(grammarAccess.getUnaryExpressionAccess().getExprCastExpressionParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__SizeOfAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getSizeOfKW_SIZEOFTerminalRuleCall_4_1_0()); }
	RULE_KW_SIZEOF{ after(grammarAccess.getUnaryExpressionAccess().getSizeOfKW_SIZEOFTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__TypeNameAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getTypeNameTypeNameParserRuleCall_4_3_0()); }
	ruleTypeName{ after(grammarAccess.getUnaryExpressionAccess().getTypeNameTypeNameParserRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__SizeOfAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getSizeOfKW_SIZEOFTerminalRuleCall_5_1_0()); }
	RULE_KW_SIZEOF{ after(grammarAccess.getUnaryExpressionAccess().getSizeOfKW_SIZEOFTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ExprAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_5_2_0()); }
	ruleUnaryExpression{ after(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__AlignOfAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getAlignOfAlternatives_6_1_0()); }
(rule__UnaryExpression__AlignOfAlternatives_6_1_0)
{ after(grammarAccess.getUnaryExpressionAccess().getAlignOfAlternatives_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__TypeNameAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getTypeNameTypeNameParserRuleCall_6_3_0()); }
	ruleTypeName{ after(grammarAccess.getUnaryExpressionAccess().getTypeNameTypeNameParserRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__AlignOfAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getAlignOfAlternatives_7_1_0()); }
(rule__UnaryExpression__AlignOfAlternatives_7_1_0)
{ after(grammarAccess.getUnaryExpressionAccess().getAlignOfAlternatives_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ExprAssignment_7_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_7_3_0()); }
	ruleUnaryExpression{ after(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_7_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__AndandAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getAndandSKW_ANDANDTerminalRuleCall_8_1_0()); }
	RULE_SKW_ANDAND{ after(grammarAccess.getUnaryExpressionAccess().getAndandSKW_ANDANDTerminalRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__IdAssignment_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getIdIDTerminalRuleCall_8_2_0()); }
	RULE_ID{ after(grammarAccess.getUnaryExpressionAccess().getIdIDTerminalRuleCall_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__ExtAssignment_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionAccess().getExtKW_EXTENSIONTerminalRuleCall_0_0_1_0_0()); }
	RULE_KW_EXTENSION{ after(grammarAccess.getPostfixExpressionAccess().getExtKW_EXTENSIONTerminalRuleCall_0_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__TypeNameAssignment_0_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionAccess().getTypeNameTypeNameParserRuleCall_0_0_1_2_0()); }
	ruleTypeName{ after(grammarAccess.getPostfixExpressionAccess().getTypeNameTypeNameParserRuleCall_0_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__InitializerListAssignment_0_0_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionAccess().getInitializerListInitializerListParserRuleCall_0_0_1_5_0()); }
	ruleInitializerList{ after(grammarAccess.getPostfixExpressionAccess().getInitializerListInitializerListParserRuleCall_0_0_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__CommaAssignment_0_0_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionAccess().getCommaSKW_COMMATerminalRuleCall_0_0_1_6_0()); }
	RULE_SKW_COMMA{ after(grammarAccess.getPostfixExpressionAccess().getCommaSKW_COMMATerminalRuleCall_0_0_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__SuffixAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionAccess().getSuffixPostfixExpressionSuffixArrayParserRuleCall_1_1_0_0()); }
	rulePostfixExpressionSuffixArray{ after(grammarAccess.getPostfixExpressionAccess().getSuffixPostfixExpressionSuffixArrayParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__SuffixAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionAccess().getSuffixPostfixExpressionSuffixArgumentParserRuleCall_1_1_1_0()); }
	rulePostfixExpressionSuffixArgument{ after(grammarAccess.getPostfixExpressionAccess().getSuffixPostfixExpressionSuffixArgumentParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__SuffixAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionAccess().getSuffixPostfixExpressionSuffixDotParserRuleCall_1_1_2_0()); }
	rulePostfixExpressionSuffixDot{ after(grammarAccess.getPostfixExpressionAccess().getSuffixPostfixExpressionSuffixDotParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__SuffixAssignment_1_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionAccess().getSuffixPostfixExpressionSuffixArrowParserRuleCall_1_1_3_0()); }
	rulePostfixExpressionSuffixArrow{ after(grammarAccess.getPostfixExpressionAccess().getSuffixPostfixExpressionSuffixArrowParserRuleCall_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__SuffixAssignment_1_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionAccess().getSuffixPostfixExpressionSuffixPlusPlusParserRuleCall_1_1_4_0()); }
	rulePostfixExpressionSuffixPlusPlus{ after(grammarAccess.getPostfixExpressionAccess().getSuffixPostfixExpressionSuffixPlusPlusParserRuleCall_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__SuffixAssignment_1_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionAccess().getSuffixPostfixExpressionSuffixMinusMinusParserRuleCall_1_1_5_0()); }
	rulePostfixExpressionSuffixMinusMinus{ after(grammarAccess.getPostfixExpressionAccess().getSuffixPostfixExpressionSuffixMinusMinusParserRuleCall_1_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixArray__ArrayExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionSuffixArrayAccess().getArrayExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getPostfixExpressionSuffixArrayAccess().getArrayExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixArgument__ArgumentExpressionListAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionSuffixArgumentAccess().getArgumentExpressionListArgumentExpressionListParserRuleCall_2_0()); }
	ruleArgumentExpressionList{ after(grammarAccess.getPostfixExpressionSuffixArgumentAccess().getArgumentExpressionListArgumentExpressionListParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixDot__IdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionSuffixDotAccess().getIdIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getPostfixExpressionSuffixDotAccess().getIdIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpressionSuffixArrow__IdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionSuffixArrowAccess().getIdIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getPostfixExpressionSuffixArrowAccess().getIdIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentExpressionList__ExprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentExpressionListAccess().getExprAssignmentExpressionParserRuleCall_0_0()); }
	ruleAssignmentExpression{ after(grammarAccess.getArgumentExpressionListAccess().getExprAssignmentExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentExpressionList__ExprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentExpressionListAccess().getExprAssignmentExpressionParserRuleCall_1_1_0()); }
	ruleAssignmentExpression{ after(grammarAccess.getArgumentExpressionListAccess().getExprAssignmentExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__IdAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getIdIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getPrimaryExpressionAccess().getIdIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ConstAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getConstConstant2ParserRuleCall_1_1_0()); }
	ruleConstant2{ after(grammarAccess.getPrimaryExpressionAccess().getConstConstant2ParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__StringAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getStringSTRING_LITERALTerminalRuleCall_1_2_0()); }
	RULE_STRING_LITERAL{ after(grammarAccess.getPrimaryExpressionAccess().getStringSTRING_LITERALTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ParenthesesAssignment_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getParenthesesSKW_LEFTPARENTerminalRuleCall_1_3_0_0()); }
	RULE_SKW_LEFTPAREN{ after(grammarAccess.getPrimaryExpressionAccess().getParenthesesSKW_LEFTPARENTerminalRuleCall_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ExprAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExprExpressionParserRuleCall_1_3_1_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryExpressionAccess().getExprExpressionParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ExtAssignment_1_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExtKW_EXTENSIONTerminalRuleCall_1_4_0_0()); }
	RULE_KW_EXTENSION{ after(grammarAccess.getPrimaryExpressionAccess().getExtKW_EXTENSIONTerminalRuleCall_1_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__CompoundStmtAssignment_1_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCompoundStmtCompoundStatementParserRuleCall_1_4_2_0()); }
	ruleCompoundStatement{ after(grammarAccess.getPrimaryExpressionAccess().getCompoundStmtCompoundStatementParserRuleCall_1_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Builtin_offsetofAssignment_1_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getBuiltin_offsetofKW_BUILTIN_OFFSETOFTerminalRuleCall_1_5_0_0()); }
	RULE_KW_BUILTIN_OFFSETOF{ after(grammarAccess.getPrimaryExpressionAccess().getBuiltin_offsetofKW_BUILTIN_OFFSETOFTerminalRuleCall_1_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__TypeNameAssignment_1_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getTypeNameTypeNameParserRuleCall_1_5_2_0()); }
	ruleTypeName{ after(grammarAccess.getPrimaryExpressionAccess().getTypeNameTypeNameParserRuleCall_1_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ExprAssignment_1_5_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExprUnaryExpressionParserRuleCall_1_5_4_0()); }
	ruleUnaryExpression{ after(grammarAccess.getPrimaryExpressionAccess().getExprUnaryExpressionParserRuleCall_1_5_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Builtin_typescompatiblepAssignment_1_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getBuiltin_typescompatiblepKW_BUILTIN_TYPESCOMPATIBLEPTerminalRuleCall_1_6_0_0()); }
	RULE_KW_BUILTIN_TYPESCOMPATIBLEP{ after(grammarAccess.getPrimaryExpressionAccess().getBuiltin_typescompatiblepKW_BUILTIN_TYPESCOMPATIBLEPTerminalRuleCall_1_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__TypeNameAssignment_1_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getTypeNameTypeNameParserRuleCall_1_6_2_0()); }
	ruleTypeName{ after(grammarAccess.getPrimaryExpressionAccess().getTypeNameTypeNameParserRuleCall_1_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__TypeName2Assignment_1_6_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getTypeName2TypeNameParserRuleCall_1_6_4_0()); }
	ruleTypeName{ after(grammarAccess.getPrimaryExpressionAccess().getTypeName2TypeNameParserRuleCall_1_6_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant2__HexAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant2Access().getHexHexLiteralParserRuleCall_1_0_0()); }
	ruleHexLiteral{ after(grammarAccess.getConstant2Access().getHexHexLiteralParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant2__OctAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant2Access().getOctOctalLiteralParserRuleCall_1_1_0()); }
	ruleOctalLiteral{ after(grammarAccess.getConstant2Access().getOctOctalLiteralParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant2__DecAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant2Access().getDecDecimalLiteralParserRuleCall_1_2_0()); }
	ruleDecimalLiteral{ after(grammarAccess.getConstant2Access().getDecDecimalLiteralParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant2__ChAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant2Access().getChCharLiteralParserRuleCall_1_3_0()); }
	ruleCharLiteral{ after(grammarAccess.getConstant2Access().getChCharLiteralParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant2__FloatAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant2Access().getFloatFloatLiteralParserRuleCall_1_4_0()); }
	ruleFloatLiteral{ after(grammarAccess.getConstant2Access().getFloatFloatLiteralParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant2__BinAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant2Access().getBinBinLiteralParserRuleCall_1_5_0()); }
	ruleBinLiteral{ after(grammarAccess.getConstant2Access().getBinBinLiteralParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_KW_ATOMIC : RULE_SKW_UNDERSCORE 'Atomic';

RULE_KW_ATTRIBUTE2 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE 'attribute';

RULE_KW_ATTRIBUTE3 : RULE_KW_ATTRIBUTE2 RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE;

RULE_KW_AUTO : 'auto';

RULE_KW_ALIGNAS : RULE_SKW_UNDERSCORE 'Alignas';

RULE_KW_ALIGNOF1 : 'alignof';

RULE_KW_ALIGNOF2 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE RULE_KW_ALIGNOF1;

RULE_KW_ALIGNOF3 : RULE_KW_ALIGNOF2 RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE;

RULE_KW_ASM1 : 'asm';

RULE_KW_ASM2 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE RULE_KW_ASM1;

RULE_KW_ASM3 : RULE_KW_ASM2 RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE;

RULE_KW_BOOL : RULE_SKW_UNDERSCORE 'Bool';

RULE_KW_BREAK : 'break';

RULE_KW_BUILTIN_CHOOSE_EXPR : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE 'builtin_choose_expr';

RULE_KW_BUILTIN_VA_LIST : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE 'builtin_va_list';

RULE_KW_BUILTIN_OFFSETOF : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE 'builtin_offsetof';

RULE_KW_BUILTIN_TYPESCOMPATIBLEP : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE 'builtin_types_compatible_p';

RULE_KW_CASE : 'case';

RULE_KW_CHAR : 'char';

RULE_KW_COMPLEX : RULE_SKW_UNDERSCORE 'Complex';

RULE_KW_CONST : 'const';

RULE_KW_CONTINUE : 'continue';

RULE_KW_DEFAULT : 'default';

RULE_KW_DO : 'do';

RULE_KW_DOUBLE : 'double';

RULE_KW_ELSE : 'else';

RULE_KW_EXTENSION : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE 'extension' RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE;

RULE_KW_ENUM : 'enum';

RULE_KW_EXTERN : 'extern';

RULE_KW_FLOAT : 'float';

RULE_KW_FOR : 'for';

RULE_KW_GENERIC : RULE_SKW_UNDERSCORE 'Generic';

RULE_KW_GOTO : 'goto';

RULE_KW_IF : 'if';

RULE_KW_IMAGINARY : RULE_SKW_UNDERSCORE 'Imaginary';

RULE_KW_INLINE1 : 'inline';

RULE_KW_INLINE2 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE RULE_KW_INLINE1;

RULE_KW_INLINE3 : RULE_KW_INLINE2 RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE;

RULE_KW_INT : 'int';

RULE_KW_INT128_3 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE 'int128';

RULE_KW_LABEL3 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE 'label' RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE;

RULE_KW_LONG : 'long';

RULE_KW_M128 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE 'm128';

RULE_KW_M128D : RULE_KW_M128 'd';

RULE_KW_M128I : RULE_KW_M128 'i';

RULE_KW_NORETURN : RULE_SKW_UNDERSCORE 'Noreturn';

RULE_KW_PRAGMA : 'pragma';

RULE_KW_REGISTER : 'register';

RULE_KW_RESTRICT : 'restrict';

RULE_KW_RESTRICT2 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE RULE_KW_RESTRICT;

RULE_KW_RESTRICT3 : RULE_KW_RESTRICT2 RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE;

RULE_KW_RETURN : 'return';

RULE_KW_SHORT : 'short';

RULE_KW_SIGNED1 : 'signed';

RULE_KW_SIGNED2 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE RULE_KW_SIGNED1;

RULE_KW_SIGNED3 : RULE_KW_SIGNED2 RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE;

RULE_KW_SIZEOF : 'sizeof';

RULE_KW_STATIC : 'static';

RULE_KW_STATICASSERT : RULE_SKW_UNDERSCORE 'Static_assert';

RULE_KW_STRUCT : 'struct';

RULE_KW_SWITCH : 'switch';

RULE_KW_THREADLOCAL : RULE_SKW_UNDERSCORE 'Thread_local';

RULE_KW_TYPEDEF : 'typedef';

RULE_KW_TYPEOF1 : 'typeof';

RULE_KW_TYPEOF2 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE RULE_KW_TYPEOF1;

RULE_KW_TYPEOF3 : RULE_KW_TYPEOF2 RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE;

RULE_KW_UNION : 'union';

RULE_KW_UNSIGNED : 'unsigned';

RULE_KW_VOID : 'void';

RULE_KW_VOLATILE : 'volatile';

RULE_KW_VOLATILE2 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE RULE_KW_VOLATILE RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE;

RULE_KW_WHILE : 'while';

RULE_STARASSIGN : RULE_SKW_STAR RULE_SKW_ASSIGN;

RULE_DIVASSIGN : RULE_SKW_DIV RULE_SKW_ASSIGN;

RULE_MODASSIGN : RULE_SKW_MOD RULE_SKW_ASSIGN;

RULE_PLUSASSIGN : RULE_SKW_PLUS RULE_SKW_ASSIGN;

RULE_MINUSASSIGN : RULE_SKW_MINUS RULE_SKW_ASSIGN;

RULE_LEFTSHIFTASSIGN : RULE_SKW_LEFTSHIFT RULE_SKW_ASSIGN;

RULE_RIGHTSHIFTASSIGN : RULE_SKW_RIGHTSHIFT RULE_SKW_ASSIGN;

RULE_ANDASSIGN : RULE_SKW_AND RULE_SKW_ASSIGN;

RULE_XORASSIGN : RULE_SKW_CARET RULE_SKW_ASSIGN;

RULE_ORASSIGN : RULE_SKW_OR RULE_SKW_ASSIGN;

RULE_ARROW : RULE_SKW_MINUS RULE_SKW_GREATER;

RULE_LINEDIRECTIVE : '#' (~(RULE_NEWLINE)|RULE_SKW_BACKSLASH RULE_NEWLINE)*;

RULE_WHITESPACE : (' '|'\t')+;

RULE_SKW_AND : '&';

RULE_SKW_ANDAND : RULE_SKW_AND RULE_SKW_AND;

RULE_SKW_ASSIGN : '=';

RULE_SKW_BACKSLASH : '\\';

RULE_SKW_CARET : '^';

RULE_SKW_COMMA : ',';

RULE_SKW_COLON : ':';

RULE_SKW_DIV : '/';

fragment RULE_SKW_DOLLAR : '$';

RULE_SKW_DOT : '.';

RULE_SKW_DOUBLEQUOTE : '"';

RULE_SKW_EQUAL : RULE_SKW_ASSIGN RULE_SKW_ASSIGN;

RULE_SKW_GREATER : '>';

RULE_SKW_GREATEREQUAL : RULE_SKW_GREATER RULE_SKW_ASSIGN;

RULE_SKW_LEFTBRACE : '{';

RULE_SKW_LEFTBRACKET : '[';

RULE_SKW_LEFTPAREN : '(';

RULE_SKW_LEFTSHIFT : RULE_SKW_LESS RULE_SKW_LESS;

RULE_SKW_LESS : '<';

RULE_SKW_LESSEQUAL : RULE_SKW_LESS RULE_SKW_ASSIGN;

RULE_SKW_MINUS : '-';

RULE_SKW_MINUSMINUS : RULE_SKW_MINUS RULE_SKW_MINUS;

RULE_SKW_MOD : '%';

RULE_SKW_NOT : '!';

RULE_SKW_NOTEQUAL : RULE_SKW_NOT RULE_SKW_ASSIGN;

RULE_SKW_OR : '|';

RULE_SKW_OROR : RULE_SKW_OR RULE_SKW_OR;

RULE_SKW_PLUS : '+';

RULE_SKW_PLUSPLUS : RULE_SKW_PLUS RULE_SKW_PLUS;

RULE_SKW_QUESTION : '?';

RULE_SKW_RIGHTBRACE : '}';

RULE_SKW_RIGHTBRACKET : ']';

RULE_SKW_RIGHTPAREN : ')';

RULE_SKW_RIGHTSHIFT : RULE_SKW_GREATER RULE_SKW_GREATER;

RULE_SKW_SEMI : ';';

RULE_SKW_SINGLEQUOTE : '\'';

RULE_SKW_STAR : '*';

RULE_SKW_TILDE : '~';

fragment RULE_SKW_UNDERSCORE : '_';

RULE_ID : RULE_IDENTIFIER;

fragment RULE_IDENTIFIER : RULE_LETTER (RULE_LETTER|'0'..'9')*;

fragment RULE_LETTER : (RULE_SKW_DOLLAR|'A'..'Z'|'a'..'z'|RULE_SKW_UNDERSCORE);

RULE_CHAR_LITERAL : 'L'? RULE_SKW_SINGLEQUOTE (RULE_ESCAPE_SEQUENCE|~((RULE_SKW_SINGLEQUOTE|RULE_SKW_BACKSLASH))) RULE_SKW_SINGLEQUOTE;

RULE_STRING_LITERAL : RULE_SKW_DOUBLEQUOTE (RULE_ESCAPE_SEQUENCE|~((RULE_SKW_BACKSLASH|RULE_SKW_DOUBLEQUOTE)))* RULE_SKW_DOUBLEQUOTE;

RULE_HEX_LITERAL : '0' ('x'|'X') RULE_HEX_DIGIT+ RULE_INTEGER_TYPE_SUFFIX?;

RULE_DECIMAL_LITERAL : ('0'|'1'..'9' ('0'..'9')*) RULE_INTEGER_TYPE_SUFFIX?;

RULE_OCTAL_LITERAL : '0' ('0'..'7')+ RULE_INTEGER_TYPE_SUFFIX?;

RULE_BIN_LITERAL : ('0b'|'0B') ('0'..'1')+;

fragment RULE_HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F');

fragment RULE_INTEGER_TYPE_SUFFIX : (RULE_UNSIGNED_SUFFIX RULE_LONG_SUFFIX?|RULE_UNSIGNED_SUFFIX RULE_LONG_LONG_SUFFIX|RULE_LONG_SUFFIX RULE_UNSIGNED_SUFFIX?|RULE_LONG_LONG_SUFFIX RULE_UNSIGNED_SUFFIX?);

fragment RULE_UNSIGNED_SUFFIX : ('u'|'U');

fragment RULE_LONG_SUFFIX : ('l'|'L');

fragment RULE_LONG_LONG_SUFFIX : ('ll'|'LL');

RULE_FLOAT_LITERAL : (('0'..'9')+ RULE_SKW_DOT ('0'..'9')* RULE_EXPONENT? RULE_FLOAT_TYPE_SUFFIX?|RULE_SKW_DOT ('0'..'9')+ RULE_EXPONENT? RULE_FLOAT_TYPE_SUFFIX?|('0'..'9')+ RULE_EXPONENT RULE_FLOAT_TYPE_SUFFIX?|('0'..'9')+ RULE_EXPONENT? RULE_FLOAT_TYPE_SUFFIX);

fragment RULE_EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+;

fragment RULE_FLOAT_TYPE_SUFFIX : ('f'|'F'|'d'|'D');

fragment RULE_ESCAPE_SEQUENCE : (RULE_SKW_BACKSLASH ('b'|'t'|'n'|'f'|'r'|'"'|RULE_SKW_SINGLEQUOTE|RULE_SKW_BACKSLASH)|RULE_OCTAL_ESCAPE|RULE_HEX_ESCAPE);

fragment RULE_OCTAL_ESCAPE : (RULE_SKW_BACKSLASH '0'..'3' '0'..'7' '0'..'7'|RULE_SKW_BACKSLASH '0'..'7' '0'..'7'|RULE_SKW_BACKSLASH '0'..'7');

fragment RULE_HEX_ESCAPE : RULE_SKW_BACKSLASH 'x' RULE_HEX_DIGIT+;

fragment RULE_LINEFEED : '\n';

fragment RULE_CARRIAGERETURN : '\r';

fragment RULE_LINE_END : (RULE_CARRIAGERETURN|RULE_LINEFEED);

RULE_LINEBREAK : RULE_SKW_BACKSLASH RULE_LINE_END;

RULE_NEWLINE : RULE_LINE_END;

fragment RULE_SPACE : ' ';

fragment RULE_TAB : '\t';

RULE_BLOCK_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_LINE_COMMENT : '//' ~(RULE_LINE_END)*;

RULE_SPECIAL : .;


