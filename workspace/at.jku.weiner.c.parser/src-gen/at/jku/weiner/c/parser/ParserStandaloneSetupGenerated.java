/*
 * generated by Xtext 2.9.0-SNAPSHOT
 */
package at.jku.weiner.c.parser;

import at.jku.weiner.c.common.CommonStandaloneSetup;
import com.google.inject.Guice;
import com.google.inject.Injector;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.ISetup;

@SuppressWarnings("all")
public class ParserStandaloneSetupGenerated implements ISetup {

	@Override
	public Injector createInjectorAndDoEMFRegistration() {
		CommonStandaloneSetup.doSetup();

		Injector injector = createInjector();
		register(injector);
		return injector;
	}
	
	public Injector createInjector() {
		return Guice.createInjector(new ParserRuntimeModule());
	}
	
	public void register(Injector injector) {
		
		
		if (!EPackage.Registry.INSTANCE.containsKey("http://www.jku.at/weiner/c/parser/Parser")) {
		EPackage.Registry.INSTANCE.put("http://www.jku.at/weiner/c/parser/Parser", at.jku.weiner.c.parser.parser.ParserPackage.eINSTANCE);
		}
		
		
		org.eclipse.xtext.resource.IResourceFactory resourceFactory = injector.getInstance(org.eclipse.xtext.resource.IResourceFactory.class);
		org.eclipse.xtext.resource.IResourceServiceProvider serviceProvider = injector.getInstance(org.eclipse.xtext.resource.IResourceServiceProvider.class);
		
		Resource.Factory.Registry.INSTANCE.getExtensionToFactoryMap().put("cdt.i", resourceFactory);
		org.eclipse.xtext.resource.IResourceServiceProvider.Registry.INSTANCE.getExtensionToFactoryMap().put("cdt.i", serviceProvider);
		
		
	}
}
