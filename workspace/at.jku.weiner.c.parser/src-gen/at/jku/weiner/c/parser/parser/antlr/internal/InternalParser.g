/*
 * generated by Xtext 2.9.0-SNAPSHOT
 */
grammar InternalParser;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	 memoize=true;
	
	 k=2;
	
	
}

@lexer::header {
package at.jku.weiner.c.parser.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package at.jku.weiner.c.parser.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import at.jku.weiner.c.parser.services.ParserGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private ParserGrammarAccess grammarAccess;
 	
    public InternalParserParser(TokenStream input, ParserGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Parser";	
   	}
   	
   	@Override
   	protected ParserGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleParser
entryRuleParser returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParserRule()); }
	 iv_ruleParser=ruleParser 
	 { $current=$iv_ruleParser.current; } 
	 EOF 
;

// Rule Parser
ruleParser returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.parser.utils.Scope.createFirstScope("Parser");
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getParserAccess().getParserAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getParserAccess().getExternalExternalDeclarationParserRuleCall_1_0()); 
	    }
		lv_external_1_0=ruleExternalDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRule());
	        }
       		add(
       			$current, 
       			"external",
        		lv_external_1_0, 
        		"at.jku.weiner.c.parser.Parser.ExternalDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*

)


;
finally {

	{at.jku.weiner.c.parser.utils.Scope.removeScope();}

}





// Entry rule entryRuleExternalDeclaration
entryRuleExternalDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExternalDeclarationRule()); }
	 iv_ruleExternalDeclaration=ruleExternalDeclaration 
	 { $current=$iv_ruleExternalDeclaration.current; } 
	 EOF 
;

// Rule ExternalDeclaration
ruleExternalDeclaration returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.parser.utils.Scope.saveState();
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getExternalDeclarationAccess().getExternalDeclarationAction_0(),
            $current);
    }
)


(
(
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalDeclarationAccess().getFunctiondefHeadFunctionDefHeadParserRuleCall_1_0_0_0_0()); 
	    }
		lv_functiondefHead_1_0=ruleFunctionDefHead		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalDeclarationRule());
	        }
       		set(
       			$current, 
       			"functiondefHead",
        		lv_functiondefHead_1_0, 
        		"at.jku.weiner.c.parser.Parser.FunctionDefHead");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_LEFTBRACE_2=RULE_SKW_LEFTBRACE
    { 
    newLeafNode(this_SKW_LEFTBRACE_2, grammarAccess.getExternalDeclarationAccess().getSKW_LEFTBRACETerminalRuleCall_1_0_0_1()); 
    }


)


((
(
ruleFunctionDefinition
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getExternalDeclarationAccess().getFunctionDefinitionFunctionDefinitionParserRuleCall_1_0_1_0()); 
	    }
		lv_functionDefinition_3_0=ruleFunctionDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalDeclarationRule());
	        }
       		set(
       			$current, 
       			"functionDefinition",
        		lv_functionDefinition_3_0, 
        		"at.jku.weiner.c.parser.Parser.FunctionDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTBRACE_4=RULE_SKW_RIGHTBRACE
    { 
    newLeafNode(this_SKW_RIGHTBRACE_4, grammarAccess.getExternalDeclarationAccess().getSKW_RIGHTBRACETerminalRuleCall_1_0_2()); 
    }


)


    |{{at.jku.weiner.c.parser.utils.Scope.restoreState();}}

(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalDeclarationAccess().getDeclarationDeclarationParserRuleCall_1_1_0()); 
	    }
		lv_declaration_5_0=ruleDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalDeclarationRule());
	        }
       		set(
       			$current, 
       			"declaration",
        		lv_declaration_5_0, 
        		"at.jku.weiner.c.parser.Parser.Declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |{{at.jku.weiner.c.parser.utils.Scope.restoreState();}}

(
(
		lv_semi_6_0=RULE_SKW_SEMI
		{
			newLeafNode(lv_semi_6_0, grammarAccess.getExternalDeclarationAccess().getSemiSKW_SEMITerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"semi",
        		lv_semi_6_0, 
        		"at.jku.weiner.c.common.Common.SKW_SEMI");
	    }

)
)

)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleFunctionDefHead
entryRuleFunctionDefHead returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionDefHeadRule()); }
	 iv_ruleFunctionDefHead=ruleFunctionDefHead 
	 { $current=$iv_ruleFunctionDefHead.current; } 
	 EOF 
;

// Rule FunctionDefHead
ruleFunctionDefHead returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getFunctionDefHeadAccess().getFunctionDefHeadAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefHeadAccess().getFunDeclSpecifiersFunctionDeclarationSpecifiersParserRuleCall_1_0()); 
	    }
		lv_funDeclSpecifiers_1_0=ruleFunctionDeclarationSpecifiers		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefHeadRule());
	        }
       		set(
       			$current, 
       			"funDeclSpecifiers",
        		lv_funDeclSpecifiers_1_0, 
        		"at.jku.weiner.c.parser.Parser.FunctionDeclarationSpecifiers");
	        afterParserOrEnumRuleCall();
	    }

)
)?


(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefHeadAccess().getFunDeclaratorDeclaratorParserRuleCall_2_0()); 
	    }
		lv_funDeclarator_2_0=ruleDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefHeadRule());
	        }
       		set(
       			$current, 
       			"funDeclarator",
        		lv_funDeclarator_2_0, 
        		"at.jku.weiner.c.parser.Parser.Declarator");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefHeadAccess().getFunDeclarationDeclarationParserRuleCall_3_0()); 
	    }
		lv_funDeclaration_3_0=ruleDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefHeadRule());
	        }
       		add(
       			$current, 
       			"funDeclaration",
        		lv_funDeclaration_3_0, 
        		"at.jku.weiner.c.parser.Parser.Declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionDefinitionRule()); }
	 iv_ruleFunctionDefinition=ruleFunctionDefinition 
	 { $current=$iv_ruleFunctionDefinition.current; } 
	 EOF 
;

// Rule FunctionDefinition
ruleFunctionDefinition returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.parser.utils.Scope.createNewScope("FunctionDefinition");
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getFunctionDefinitionAccess().getFunctionDefinitionAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getBodyBodyStatementParserRuleCall_1_0()); 
	    }
		lv_body_1_0=ruleBodyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_1_0, 
        		"at.jku.weiner.c.parser.Parser.BodyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


;
finally {

	{at.jku.weiner.c.parser.utils.Scope.removeScope();}

}





// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	 iv_ruleDeclaration=ruleDeclaration 
	 { $current=$iv_ruleDeclaration.current; } 
	 EOF 
;

// Rule Declaration
ruleDeclaration returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.parser.utils.Scope.setTypedef(state.backtracking, false);
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclarationAccess().getDeclarationAction_0(),
            $current);
    }
)


(
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getSpecifiersDeclarationSpecifiersParserRuleCall_1_0_0()); 
	    }
		lv_specifiers_1_0=ruleDeclarationSpecifiers		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"specifiers",
        		lv_specifiers_1_0, 
        		"at.jku.weiner.c.parser.Parser.DeclarationSpecifiers");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getInitDeclaratorListInitDeclaratorListParserRuleCall_1_1_0()); 
	    }
		lv_initDeclaratorList_2_0=ruleInitDeclaratorList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		add(
       			$current, 
       			"initDeclaratorList",
        		lv_initDeclaratorList_2_0, 
        		"at.jku.weiner.c.parser.Parser.InitDeclaratorList");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_SKW_SEMI_3=RULE_SKW_SEMI
    { 
    newLeafNode(this_SKW_SEMI_3, grammarAccess.getDeclarationAccess().getSKW_SEMITerminalRuleCall_1_2()); 
    }


)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleFunctionDeclarationSpecifiers
entryRuleFunctionDeclarationSpecifiers returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionDeclarationSpecifiersRule()); }
	 iv_ruleFunctionDeclarationSpecifiers=ruleFunctionDeclarationSpecifiers 
	 { $current=$iv_ruleFunctionDeclarationSpecifiers.current; } 
	 EOF 
;

// Rule FunctionDeclarationSpecifiers
ruleFunctionDeclarationSpecifiers returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getFunctionDeclarationSpecifiersAccess().getFunctionDeclarationSpecifiersAction_0(),
            $current);
    }
)


(
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDeclarationSpecifiersAccess().getDeclarationSpecifierStorageClassSpecifierParserRuleCall_1_0_0()); 
	    }
		lv_declarationSpecifier_1_0=ruleStorageClassSpecifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDeclarationSpecifiersRule());
	        }
       		add(
       			$current, 
       			"declarationSpecifier",
        		lv_declarationSpecifier_1_0, 
        		"at.jku.weiner.c.parser.Parser.StorageClassSpecifier");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDeclarationSpecifiersAccess().getDeclarationSpecifierTypeSpecifierParserRuleCall_1_1_0()); 
	    }
		lv_declarationSpecifier_2_0=ruleTypeSpecifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDeclarationSpecifiersRule());
	        }
       		add(
       			$current, 
       			"declarationSpecifier",
        		lv_declarationSpecifier_2_0, 
        		"at.jku.weiner.c.parser.Parser.TypeSpecifier");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDeclarationSpecifiersAccess().getDeclarationSpecifierTypeQualifierParserRuleCall_1_2_0()); 
	    }
		lv_declarationSpecifier_3_0=ruleTypeQualifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDeclarationSpecifiersRule());
	        }
       		add(
       			$current, 
       			"declarationSpecifier",
        		lv_declarationSpecifier_3_0, 
        		"at.jku.weiner.c.parser.Parser.TypeQualifier");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDeclarationSpecifiersAccess().getDeclarationSpecifierFunctionSpecifierParserRuleCall_1_3_0()); 
	    }
		lv_declarationSpecifier_4_0=ruleFunctionSpecifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDeclarationSpecifiersRule());
	        }
       		add(
       			$current, 
       			"declarationSpecifier",
        		lv_declarationSpecifier_4_0, 
        		"at.jku.weiner.c.parser.Parser.FunctionSpecifier");
	        afterParserOrEnumRuleCall();
	    }

)
)

)+

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleDeclarationSpecifiers
entryRuleDeclarationSpecifiers returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclarationSpecifiersRule()); }
	 iv_ruleDeclarationSpecifiers=ruleDeclarationSpecifiers 
	 { $current=$iv_ruleDeclarationSpecifiers.current; } 
	 EOF 
;

// Rule DeclarationSpecifiers
ruleDeclarationSpecifiers returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifiersAction_0(),
            $current);
    }
)


(
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierStorageClassSpecifierParserRuleCall_1_0_0()); 
	    }
		lv_declarationSpecifier_1_0=ruleStorageClassSpecifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationSpecifiersRule());
	        }
       		add(
       			$current, 
       			"declarationSpecifier",
        		lv_declarationSpecifier_1_0, 
        		"at.jku.weiner.c.parser.Parser.StorageClassSpecifier");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierTypeSpecifierParserRuleCall_1_1_0()); 
	    }
		lv_declarationSpecifier_2_0=ruleTypeSpecifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationSpecifiersRule());
	        }
       		add(
       			$current, 
       			"declarationSpecifier",
        		lv_declarationSpecifier_2_0, 
        		"at.jku.weiner.c.parser.Parser.TypeSpecifier");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierTypeQualifierParserRuleCall_1_2_0()); 
	    }
		lv_declarationSpecifier_3_0=ruleTypeQualifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationSpecifiersRule());
	        }
       		add(
       			$current, 
       			"declarationSpecifier",
        		lv_declarationSpecifier_3_0, 
        		"at.jku.weiner.c.parser.Parser.TypeQualifier");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierFunctionSpecifierParserRuleCall_1_3_0()); 
	    }
		lv_declarationSpecifier_4_0=ruleFunctionSpecifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationSpecifiersRule());
	        }
       		add(
       			$current, 
       			"declarationSpecifier",
        		lv_declarationSpecifier_4_0, 
        		"at.jku.weiner.c.parser.Parser.FunctionSpecifier");
	        afterParserOrEnumRuleCall();
	    }

)
)

)+

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleInitDeclaratorList
entryRuleInitDeclaratorList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInitDeclaratorListRule()); }
	 iv_ruleInitDeclaratorList=ruleInitDeclaratorList 
	 { $current=$iv_ruleInitDeclaratorList.current; } 
	 EOF 
;

// Rule InitDeclaratorList
ruleInitDeclaratorList returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getInitDeclaratorListAccess().getInitDeclaratorListAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getInitDeclaratorListAccess().getInitDeclaratorInitDeclaratorParserRuleCall_1_0()); 
	    }
		lv_initDeclarator_1_0=ruleInitDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitDeclaratorListRule());
	        }
       		add(
       			$current, 
       			"initDeclarator",
        		lv_initDeclarator_1_0, 
        		"at.jku.weiner.c.parser.Parser.InitDeclarator");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_SKW_COMMA_2=RULE_SKW_COMMA
    { 
    newLeafNode(this_SKW_COMMA_2, grammarAccess.getInitDeclaratorListAccess().getSKW_COMMATerminalRuleCall_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getInitDeclaratorListAccess().getInitDeclaratorInitDeclaratorParserRuleCall_2_1_0()); 
	    }
		lv_initDeclarator_3_0=ruleInitDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitDeclaratorListRule());
	        }
       		add(
       			$current, 
       			"initDeclarator",
        		lv_initDeclarator_3_0, 
        		"at.jku.weiner.c.parser.Parser.InitDeclarator");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleInitDeclarator
entryRuleInitDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInitDeclaratorRule()); }
	 iv_ruleInitDeclarator=ruleInitDeclarator 
	 { $current=$iv_ruleInitDeclarator.current; } 
	 EOF 
;

// Rule InitDeclarator
ruleInitDeclarator returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getInitDeclaratorAccess().getInitDeclaratorAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getInitDeclaratorAccess().getDeclaratorDeclaratorParserRuleCall_1_0()); 
	    }
		lv_declarator_1_0=ruleDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitDeclaratorRule());
	        }
       		set(
       			$current, 
       			"declarator",
        		lv_declarator_1_0, 
        		"at.jku.weiner.c.parser.Parser.Declarator");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_SKW_ASSIGN_2=RULE_SKW_ASSIGN
    { 
    newLeafNode(this_SKW_ASSIGN_2, grammarAccess.getInitDeclaratorAccess().getSKW_ASSIGNTerminalRuleCall_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getInitDeclaratorAccess().getInitializerInitializerParserRuleCall_2_1_0()); 
	    }
		lv_initializer_3_0=ruleInitializer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitDeclaratorRule());
	        }
       		set(
       			$current, 
       			"initializer",
        		lv_initializer_3_0, 
        		"at.jku.weiner.c.parser.Parser.Initializer");
	        afterParserOrEnumRuleCall();
	    }

)
)

)?

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleStorageClassSpecifier
entryRuleStorageClassSpecifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStorageClassSpecifierRule()); }
	 iv_ruleStorageClassSpecifier=ruleStorageClassSpecifier 
	 { $current=$iv_ruleStorageClassSpecifier.current; } 
	 EOF 
;

// Rule StorageClassSpecifier
ruleStorageClassSpecifier returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStorageClassSpecifierAccess().getStorageClassSpecifierAction_0(),
            $current);
    }
)


(
(
(
		lv_name_1_0=RULE_KW_TYPEDEF
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStorageClassSpecifierAccess().getNameKW_TYPEDEFTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStorageClassSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"at.jku.weiner.c.parser.Parser.KW_TYPEDEF");
	    }

)
)
{{at.jku.weiner.c.parser.utils.Scope.setTypedef(state.backtracking, true);}}


    |
(
(
		lv_name_2_0=RULE_KW_EXTERN
		{
			newLeafNode(lv_name_2_0, grammarAccess.getStorageClassSpecifierAccess().getNameKW_EXTERNTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStorageClassSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"at.jku.weiner.c.parser.Parser.KW_EXTERN");
	    }

)
)


    |
(
(
		lv_name_3_0=RULE_KW_STATIC
		{
			newLeafNode(lv_name_3_0, grammarAccess.getStorageClassSpecifierAccess().getNameKW_STATICTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStorageClassSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"at.jku.weiner.c.parser.Parser.KW_STATIC");
	    }

)
)


    |
(
(
		lv_name_4_0=RULE_KW_THREADLOCAL
		{
			newLeafNode(lv_name_4_0, grammarAccess.getStorageClassSpecifierAccess().getNameKW_THREADLOCALTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStorageClassSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"at.jku.weiner.c.parser.Parser.KW_THREADLOCAL");
	    }

)
)


    |
(
(
		lv_name_5_0=RULE_KW_AUTO
		{
			newLeafNode(lv_name_5_0, grammarAccess.getStorageClassSpecifierAccess().getNameKW_AUTOTerminalRuleCall_1_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStorageClassSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"at.jku.weiner.c.parser.Parser.KW_AUTO");
	    }

)
)


    |
(
(
		lv_name_6_0=RULE_KW_REGISTER
		{
			newLeafNode(lv_name_6_0, grammarAccess.getStorageClassSpecifierAccess().getNameKW_REGISTERTerminalRuleCall_1_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStorageClassSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"at.jku.weiner.c.parser.Parser.KW_REGISTER");
	    }

)
)


    |
(
(
		lv_name_7_0=RULE_KW_LABEL3
		{
			newLeafNode(lv_name_7_0, grammarAccess.getStorageClassSpecifierAccess().getNameKW_LABEL3TerminalRuleCall_1_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStorageClassSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"at.jku.weiner.c.parser.Parser.KW_LABEL3");
	    }

)
)

)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleTypeSpecifier
entryRuleTypeSpecifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeSpecifierRule()); }
	 iv_ruleTypeSpecifier=ruleTypeSpecifier 
	 { $current=$iv_ruleTypeSpecifier.current; } 
	 EOF 
;

// Rule TypeSpecifier
ruleTypeSpecifier returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeSpecifierAccess().getTypeSpecifierAction_0_0(),
            $current);
    }
)


(
(
		lv_name_1_0=RULE_KW_BOOL
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTypeSpecifierAccess().getNameKW_BOOLTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"at.jku.weiner.c.parser.Parser.KW_BOOL");
	    }

)
)

)


    |
(
(
		lv_name_2_0=RULE_KW_BUILTIN_VA_LIST
		{
			newLeafNode(lv_name_2_0, grammarAccess.getTypeSpecifierAccess().getNameKW_BUILTIN_VA_LISTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"at.jku.weiner.c.parser.Parser.KW_BUILTIN_VA_LIST");
	    }

)
)


    |
(
(
		lv_name_3_0=RULE_KW_CHAR
		{
			newLeafNode(lv_name_3_0, grammarAccess.getTypeSpecifierAccess().getNameKW_CHARTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"at.jku.weiner.c.parser.Parser.KW_CHAR");
	    }

)
)


    |
(
(
		lv_name_4_0=RULE_KW_COMPLEX
		{
			newLeafNode(lv_name_4_0, grammarAccess.getTypeSpecifierAccess().getNameKW_COMPLEXTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"at.jku.weiner.c.parser.Parser.KW_COMPLEX");
	    }

)
)


    |
(
(
		lv_name_5_0=RULE_KW_DOUBLE
		{
			newLeafNode(lv_name_5_0, grammarAccess.getTypeSpecifierAccess().getNameKW_DOUBLETerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"at.jku.weiner.c.parser.Parser.KW_DOUBLE");
	    }

)
)


    |
(
(
		lv_name_6_0=RULE_KW_FLOAT
		{
			newLeafNode(lv_name_6_0, grammarAccess.getTypeSpecifierAccess().getNameKW_FLOATTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"at.jku.weiner.c.parser.Parser.KW_FLOAT");
	    }

)
)


    |
(
(
		lv_name_7_0=RULE_KW_INT
		{
			newLeafNode(lv_name_7_0, grammarAccess.getTypeSpecifierAccess().getNameKW_INTTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"at.jku.weiner.c.parser.Parser.KW_INT");
	    }

)
)


    |
(
(
		lv_name_8_0=RULE_KW_INT128_3
		{
			newLeafNode(lv_name_8_0, grammarAccess.getTypeSpecifierAccess().getNameKW_INT128_3TerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_8_0, 
        		"at.jku.weiner.c.parser.Parser.KW_INT128_3");
	    }

)
)


    |
(
(
		lv_name_9_0=RULE_KW_LONG
		{
			newLeafNode(lv_name_9_0, grammarAccess.getTypeSpecifierAccess().getNameKW_LONGTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_9_0, 
        		"at.jku.weiner.c.parser.Parser.KW_LONG");
	    }

)
)


    |
(
(
		lv_name_10_0=RULE_KW_SHORT
		{
			newLeafNode(lv_name_10_0, grammarAccess.getTypeSpecifierAccess().getNameKW_SHORTTerminalRuleCall_9_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_10_0, 
        		"at.jku.weiner.c.parser.Parser.KW_SHORT");
	    }

)
)


    |
(
(
		lv_name_11_0=RULE_KW_M128
		{
			newLeafNode(lv_name_11_0, grammarAccess.getTypeSpecifierAccess().getNameKW_M128TerminalRuleCall_10_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_11_0, 
        		"at.jku.weiner.c.parser.Parser.KW_M128");
	    }

)
)


    |
(
(
		lv_name_12_0=RULE_KW_M128D
		{
			newLeafNode(lv_name_12_0, grammarAccess.getTypeSpecifierAccess().getNameKW_M128DTerminalRuleCall_11_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_12_0, 
        		"at.jku.weiner.c.parser.Parser.KW_M128D");
	    }

)
)


    |
(
(
		lv_name_13_0=RULE_KW_M128I
		{
			newLeafNode(lv_name_13_0, grammarAccess.getTypeSpecifierAccess().getNameKW_M128ITerminalRuleCall_12_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_13_0, 
        		"at.jku.weiner.c.parser.Parser.KW_M128I");
	    }

)
)


    |
(
(
		lv_name_14_0=RULE_KW_SIGNED1
		{
			newLeafNode(lv_name_14_0, grammarAccess.getTypeSpecifierAccess().getNameKW_SIGNED1TerminalRuleCall_13_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_14_0, 
        		"at.jku.weiner.c.parser.Parser.KW_SIGNED1");
	    }

)
)


    |
(
(
		lv_name_15_0=RULE_KW_SIGNED2
		{
			newLeafNode(lv_name_15_0, grammarAccess.getTypeSpecifierAccess().getNameKW_SIGNED2TerminalRuleCall_14_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_15_0, 
        		"at.jku.weiner.c.parser.Parser.KW_SIGNED2");
	    }

)
)


    |
(
(
		lv_name_16_0=RULE_KW_SIGNED3
		{
			newLeafNode(lv_name_16_0, grammarAccess.getTypeSpecifierAccess().getNameKW_SIGNED3TerminalRuleCall_15_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_16_0, 
        		"at.jku.weiner.c.parser.Parser.KW_SIGNED3");
	    }

)
)


    |
(
(
		lv_name_17_0=RULE_KW_UNSIGNED
		{
			newLeafNode(lv_name_17_0, grammarAccess.getTypeSpecifierAccess().getNameKW_UNSIGNEDTerminalRuleCall_16_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_17_0, 
        		"at.jku.weiner.c.parser.Parser.KW_UNSIGNED");
	    }

)
)


    |
(
(
		lv_name_18_0=RULE_KW_VOID
		{
			newLeafNode(lv_name_18_0, grammarAccess.getTypeSpecifierAccess().getNameKW_VOIDTerminalRuleCall_17_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_18_0, 
        		"at.jku.weiner.c.parser.Parser.KW_VOID");
	    }

)
)


    |
(
(
(
		lv_name_19_0=RULE_KW_EXTENSION
		{
			newLeafNode(lv_name_19_0, grammarAccess.getTypeSpecifierAccess().getNameKW_EXTENSIONTerminalRuleCall_18_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_19_0, 
        		"at.jku.weiner.c.parser.Parser.KW_EXTENSION");
	    }

)
)


(
this_SKW_LEFTPAREN_20=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_20, grammarAccess.getTypeSpecifierAccess().getSKW_LEFTPARENTerminalRuleCall_18_1_0()); 
    }



(
(
(
		lv_extType_21_0=RULE_KW_M128
		{
			newLeafNode(lv_extType_21_0, grammarAccess.getTypeSpecifierAccess().getExtTypeKW_M128TerminalRuleCall_18_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"extType",
        		lv_extType_21_0, 
        		"at.jku.weiner.c.parser.Parser.KW_M128");
	    }

)
)


    |
(
(
		lv_extType_22_0=RULE_KW_M128D
		{
			newLeafNode(lv_extType_22_0, grammarAccess.getTypeSpecifierAccess().getExtTypeKW_M128DTerminalRuleCall_18_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"extType",
        		lv_extType_22_0, 
        		"at.jku.weiner.c.parser.Parser.KW_M128D");
	    }

)
)


    |
(
(
		lv_extType_23_0=RULE_KW_M128I
		{
			newLeafNode(lv_extType_23_0, grammarAccess.getTypeSpecifierAccess().getExtTypeKW_M128ITerminalRuleCall_18_1_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"extType",
        		lv_extType_23_0, 
        		"at.jku.weiner.c.parser.Parser.KW_M128I");
	    }

)
)

)


this_SKW_RIGHTPAREN_24=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_24, grammarAccess.getTypeSpecifierAccess().getSKW_RIGHTPARENTerminalRuleCall_18_1_2()); 
    }


)?

)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeSpecifierAccess().getSpecifierStructOrUnionSpecifierParserRuleCall_19_0()); 
	    }
		lv_specifier_25_0=ruleStructOrUnionSpecifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeSpecifierRule());
	        }
       		set(
       			$current, 
       			"specifier",
        		lv_specifier_25_0, 
        		"at.jku.weiner.c.parser.Parser.StructOrUnionSpecifier");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeSpecifierAccess().getSpecifierEnumSpecifierParserRuleCall_20_0()); 
	    }
		lv_specifier_26_0=ruleEnumSpecifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeSpecifierRule());
	        }
       		set(
       			$current, 
       			"specifier",
        		lv_specifier_26_0, 
        		"at.jku.weiner.c.parser.Parser.EnumSpecifier");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeSpecifierAccess().getTypeTypedefNameParserRuleCall_21_0()); 
	    }
		lv_type_27_0=ruleTypedefName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeSpecifierRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_27_0, 
        		"at.jku.weiner.c.parser.Parser.TypedefName");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
(
(
		lv_typeOf_28_1=RULE_KW_TYPEOF1
		{
			newLeafNode(lv_typeOf_28_1, grammarAccess.getTypeSpecifierAccess().getTypeOfKW_TYPEOF1TerminalRuleCall_22_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"typeOf",
        		lv_typeOf_28_1, 
        		"at.jku.weiner.c.parser.Parser.KW_TYPEOF1");
	    }

    |		lv_typeOf_28_2=RULE_KW_TYPEOF3
		{
			newLeafNode(lv_typeOf_28_2, grammarAccess.getTypeSpecifierAccess().getTypeOfKW_TYPEOF3TerminalRuleCall_22_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"typeOf",
        		lv_typeOf_28_2, 
        		"at.jku.weiner.c.parser.Parser.KW_TYPEOF3");
	    }

)

)
)


this_SKW_LEFTPAREN_29=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_29, grammarAccess.getTypeSpecifierAccess().getSKW_LEFTPARENTerminalRuleCall_22_1()); 
    }



(
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeSpecifierAccess().getTypeNameTypeNameParserRuleCall_22_2_0_0()); 
	    }
		lv_typeName_30_0=ruleTypeName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeSpecifierRule());
	        }
       		set(
       			$current, 
       			"typeName",
        		lv_typeName_30_0, 
        		"at.jku.weiner.c.parser.Parser.TypeName");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeSpecifierAccess().getConstExprConstantExpressionParserRuleCall_22_2_1_0()); 
	    }
		lv_constExpr_31_0=ruleConstantExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeSpecifierRule());
	        }
       		set(
       			$current, 
       			"constExpr",
        		lv_constExpr_31_0, 
        		"at.jku.weiner.c.parser.Parser.ConstantExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


this_SKW_RIGHTPAREN_32=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_32, grammarAccess.getTypeSpecifierAccess().getSKW_RIGHTPARENTerminalRuleCall_22_3()); 
    }


)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleTypedefName
entryRuleTypedefName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypedefNameRule()); }
	 iv_ruleTypedefName=ruleTypedefName 
	 { $current=$iv_ruleTypedefName.current; } 
	 EOF 
;

// Rule TypedefName
ruleTypedefName returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypedefNameAccess().getTypedefNameAction_0(),
            $current);
    }
)

{at.jku.weiner.c.parser.utils.Scope.isTypeName(state.backtracking, input)}?

(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getTypedefNameAccess().getIdIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypedefNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"at.jku.weiner.c.common.Common.ID");
	    }

)
)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleStructOrUnionSpecifier
entryRuleStructOrUnionSpecifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructOrUnionSpecifierRule()); }
	 iv_ruleStructOrUnionSpecifier=ruleStructOrUnionSpecifier 
	 { $current=$iv_ruleStructOrUnionSpecifier.current; } 
	 EOF 
;

// Rule StructOrUnionSpecifier
ruleStructOrUnionSpecifier returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.parser.utils.Scope.createNewScope("StructOrUnion");
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStructOrUnionSpecifierAccess().getStructOrUnionSpecifierAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getStructOrUnionSpecifierAccess().getTypeStructOrUnionParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleStructOrUnion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructOrUnionSpecifierRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"at.jku.weiner.c.parser.Parser.StructOrUnion");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
(
(
		lv_id_2_0=RULE_ID
		{
			newLeafNode(lv_id_2_0, grammarAccess.getStructOrUnionSpecifierAccess().getIdIDTerminalRuleCall_2_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructOrUnionSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"at.jku.weiner.c.common.Common.ID");
	    }

)
)?


(
(
		lv_braces_3_0=RULE_SKW_LEFTBRACE
		{
			newLeafNode(lv_braces_3_0, grammarAccess.getStructOrUnionSpecifierAccess().getBracesSKW_LEFTBRACETerminalRuleCall_2_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructOrUnionSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"braces",
        		true, 
        		"at.jku.weiner.c.common.Common.SKW_LEFTBRACE");
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getStructOrUnionSpecifierAccess().getStructDeclListStructDeclarationListParserRuleCall_2_0_2_0()); 
	    }
		lv_structDeclList_4_0=ruleStructDeclarationList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructOrUnionSpecifierRule());
	        }
       		set(
       			$current, 
       			"structDeclList",
        		lv_structDeclList_4_0, 
        		"at.jku.weiner.c.parser.Parser.StructDeclarationList");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_SKW_RIGHTBRACE_5=RULE_SKW_RIGHTBRACE
    { 
    newLeafNode(this_SKW_RIGHTBRACE_5, grammarAccess.getStructOrUnionSpecifierAccess().getSKW_RIGHTBRACETerminalRuleCall_2_0_3()); 
    }


)


    |
(
(
		lv_id_6_0=RULE_ID
		{
			newLeafNode(lv_id_6_0, grammarAccess.getStructOrUnionSpecifierAccess().getIdIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructOrUnionSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_6_0, 
        		"at.jku.weiner.c.common.Common.ID");
	    }

)
)

)

)


;
finally {

	{at.jku.weiner.c.parser.utils.Scope.removeScope();}

}





// Entry rule entryRuleStructOrUnion
entryRuleStructOrUnion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructOrUnionRule()); }
	 iv_ruleStructOrUnion=ruleStructOrUnion 
	 { $current=$iv_ruleStructOrUnion.current; } 
	 EOF 
;

// Rule StructOrUnion
ruleStructOrUnion returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStructOrUnionAccess().getStructOrUnionAction_0_0(),
            $current);
    }
)


(
(
		lv_name_1_0=RULE_KW_STRUCT
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStructOrUnionAccess().getNameKW_STRUCTTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructOrUnionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"at.jku.weiner.c.parser.Parser.KW_STRUCT");
	    }

)
)

)


    |
(
(
		lv_name_2_0=RULE_KW_UNION
		{
			newLeafNode(lv_name_2_0, grammarAccess.getStructOrUnionAccess().getNameKW_UNIONTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructOrUnionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"at.jku.weiner.c.parser.Parser.KW_UNION");
	    }

)
)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleStructDeclarationList
entryRuleStructDeclarationList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructDeclarationListRule()); }
	 iv_ruleStructDeclarationList=ruleStructDeclarationList 
	 { $current=$iv_ruleStructDeclarationList.current; } 
	 EOF 
;

// Rule StructDeclarationList
ruleStructDeclarationList returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
		{ 
	        newCompositeNode(grammarAccess.getStructDeclarationListAccess().getStructDeclarationStructDeclarationParserRuleCall_0()); 
	    }
		lv_structDeclaration_0_0=ruleStructDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructDeclarationListRule());
	        }
       		add(
       			$current, 
       			"structDeclaration",
        		lv_structDeclaration_0_0, 
        		"at.jku.weiner.c.parser.Parser.StructDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)+


;
finally {

	/*no after found*/

}





// Entry rule entryRuleStructDeclaration
entryRuleStructDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructDeclarationRule()); }
	 iv_ruleStructDeclaration=ruleStructDeclaration 
	 { $current=$iv_ruleStructDeclaration.current; } 
	 EOF 
;

// Rule StructDeclaration
ruleStructDeclaration returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStructDeclarationAccess().getStructDeclarationAction_0(),
            $current);
    }
)


(
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructDeclarationAccess().getListSpecifierQualifierListParserRuleCall_1_0_0()); 
	    }
		lv_list_1_0=ruleSpecifierQualifierList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_1_0, 
        		"at.jku.weiner.c.parser.Parser.SpecifierQualifierList");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getStructDeclarationAccess().getStructDeclarationListStructDeclaratorListParserRuleCall_1_1_0()); 
	    }
		lv_structDeclarationList_2_0=ruleStructDeclaratorList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
	        }
       		set(
       			$current, 
       			"structDeclarationList",
        		lv_structDeclarationList_2_0, 
        		"at.jku.weiner.c.parser.Parser.StructDeclaratorList");
	        afterParserOrEnumRuleCall();
	    }

)
)?

)?


this_SKW_SEMI_3=RULE_SKW_SEMI
    { 
    newLeafNode(this_SKW_SEMI_3, grammarAccess.getStructDeclarationAccess().getSKW_SEMITerminalRuleCall_2()); 
    }


)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleSpecifierQualifierList
entryRuleSpecifierQualifierList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecifierQualifierListRule()); }
	 iv_ruleSpecifierQualifierList=ruleSpecifierQualifierList 
	 { $current=$iv_ruleSpecifierQualifierList.current; } 
	 EOF 
;

// Rule SpecifierQualifierList
ruleSpecifierQualifierList returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSpecifierQualifierListAccess().getSpecifierQualifierListAction_0(),
            $current);
    }
)


(
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecifierQualifierListAccess().getTypeSpecifierTypeSpecifierParserRuleCall_1_0_0()); 
	    }
		lv_typeSpecifier_1_0=ruleTypeSpecifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecifierQualifierListRule());
	        }
       		add(
       			$current, 
       			"typeSpecifier",
        		lv_typeSpecifier_1_0, 
        		"at.jku.weiner.c.parser.Parser.TypeSpecifier");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecifierQualifierListAccess().getTypeQualifierTypeQualifierParserRuleCall_1_1_0()); 
	    }
		lv_typeQualifier_2_0=ruleTypeQualifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecifierQualifierListRule());
	        }
       		add(
       			$current, 
       			"typeQualifier",
        		lv_typeQualifier_2_0, 
        		"at.jku.weiner.c.parser.Parser.TypeQualifier");
	        afterParserOrEnumRuleCall();
	    }

)
)

)+

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleStructDeclaratorList
entryRuleStructDeclaratorList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructDeclaratorListRule()); }
	 iv_ruleStructDeclaratorList=ruleStructDeclaratorList 
	 { $current=$iv_ruleStructDeclaratorList.current; } 
	 EOF 
;

// Rule StructDeclaratorList
ruleStructDeclaratorList returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructDeclaratorListAccess().getStructDeclaratorStructDeclaratorParserRuleCall_0_0()); 
	    }
		lv_structDeclarator_0_0=ruleStructDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructDeclaratorListRule());
	        }
       		add(
       			$current, 
       			"structDeclarator",
        		lv_structDeclarator_0_0, 
        		"at.jku.weiner.c.parser.Parser.StructDeclarator");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_SKW_COMMA_1=RULE_SKW_COMMA
    { 
    newLeafNode(this_SKW_COMMA_1, grammarAccess.getStructDeclaratorListAccess().getSKW_COMMATerminalRuleCall_1_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getStructDeclaratorListAccess().getStructDeclaratorStructDeclaratorParserRuleCall_1_1_0()); 
	    }
		lv_structDeclarator_2_0=ruleStructDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructDeclaratorListRule());
	        }
       		add(
       			$current, 
       			"structDeclarator",
        		lv_structDeclarator_2_0, 
        		"at.jku.weiner.c.parser.Parser.StructDeclarator");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleStructDeclarator
entryRuleStructDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructDeclaratorRule()); }
	 iv_ruleStructDeclarator=ruleStructDeclarator 
	 { $current=$iv_ruleStructDeclarator.current; } 
	 EOF 
;

// Rule StructDeclarator
ruleStructDeclarator returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructDeclaratorAccess().getDeclaratorDeclaratorParserRuleCall_0_0_0()); 
	    }
		lv_declarator_0_0=ruleDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructDeclaratorRule());
	        }
       		set(
       			$current, 
       			"declarator",
        		lv_declarator_0_0, 
        		"at.jku.weiner.c.parser.Parser.Declarator");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_SKW_COLON_1=RULE_SKW_COLON
    { 
    newLeafNode(this_SKW_COLON_1, grammarAccess.getStructDeclaratorAccess().getSKW_COLONTerminalRuleCall_0_1_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getStructDeclaratorAccess().getConstExprConstantExpressionParserRuleCall_0_1_1_0()); 
	    }
		lv_constExpr_2_0=ruleConstantExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructDeclaratorRule());
	        }
       		add(
       			$current, 
       			"constExpr",
        		lv_constExpr_2_0, 
        		"at.jku.weiner.c.parser.Parser.ConstantExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)?

)


    |
(
this_SKW_COLON_3=RULE_SKW_COLON
    { 
    newLeafNode(this_SKW_COLON_3, grammarAccess.getStructDeclaratorAccess().getSKW_COLONTerminalRuleCall_1_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getStructDeclaratorAccess().getConstExprConstantExpressionParserRuleCall_1_1_0()); 
	    }
		lv_constExpr_4_0=ruleConstantExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructDeclaratorRule());
	        }
       		add(
       			$current, 
       			"constExpr",
        		lv_constExpr_4_0, 
        		"at.jku.weiner.c.parser.Parser.ConstantExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleEnumSpecifier
entryRuleEnumSpecifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumSpecifierRule()); }
	 iv_ruleEnumSpecifier=ruleEnumSpecifier 
	 { $current=$iv_ruleEnumSpecifier.current; } 
	 EOF 
;

// Rule EnumSpecifier
ruleEnumSpecifier returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getEnumSpecifierAccess().getEnumSpecifierAction_0(),
            $current);
    }
)


(
this_KW_ENUM_1=RULE_KW_ENUM
    { 
    newLeafNode(this_KW_ENUM_1, grammarAccess.getEnumSpecifierAccess().getKW_ENUMTerminalRuleCall_1_0()); 
    }



(
(
this_SKW_LEFTBRACE_2=RULE_SKW_LEFTBRACE
    { 
    newLeafNode(this_SKW_LEFTBRACE_2, grammarAccess.getEnumSpecifierAccess().getSKW_LEFTBRACETerminalRuleCall_1_1_0_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumSpecifierAccess().getEnumListEnumeratorListParserRuleCall_1_1_0_1_0()); 
	    }
		lv_enumList_3_0=ruleEnumeratorList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumSpecifierRule());
	        }
       		set(
       			$current, 
       			"enumList",
        		lv_enumList_3_0, 
        		"at.jku.weiner.c.parser.Parser.EnumeratorList");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTBRACE_4=RULE_SKW_RIGHTBRACE
    { 
    newLeafNode(this_SKW_RIGHTBRACE_4, grammarAccess.getEnumSpecifierAccess().getSKW_RIGHTBRACETerminalRuleCall_1_1_0_2()); 
    }


)


    |
(
(
(
		lv_id_5_0=RULE_ID
		{
			newLeafNode(lv_id_5_0, grammarAccess.getEnumSpecifierAccess().getIdIDTerminalRuleCall_1_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_5_0, 
        		"at.jku.weiner.c.common.Common.ID");
	    }

)
)


(
this_SKW_LEFTBRACE_6=RULE_SKW_LEFTBRACE
    { 
    newLeafNode(this_SKW_LEFTBRACE_6, grammarAccess.getEnumSpecifierAccess().getSKW_LEFTBRACETerminalRuleCall_1_1_1_1_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumSpecifierAccess().getEnumListEnumeratorListParserRuleCall_1_1_1_1_1_0()); 
	    }
		lv_enumList_7_0=ruleEnumeratorList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumSpecifierRule());
	        }
       		set(
       			$current, 
       			"enumList",
        		lv_enumList_7_0, 
        		"at.jku.weiner.c.parser.Parser.EnumeratorList");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTBRACE_8=RULE_SKW_RIGHTBRACE
    { 
    newLeafNode(this_SKW_RIGHTBRACE_8, grammarAccess.getEnumSpecifierAccess().getSKW_RIGHTBRACETerminalRuleCall_1_1_1_1_2()); 
    }


)?

)

)

)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleEnumeratorList
entryRuleEnumeratorList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumeratorListRule()); }
	 iv_ruleEnumeratorList=ruleEnumeratorList 
	 { $current=$iv_ruleEnumeratorList.current; } 
	 EOF 
;

// Rule EnumeratorList
ruleEnumeratorList returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumeratorListAccess().getEnumeratorEnumeratorParserRuleCall_0_0()); 
	    }
		lv_enumerator_0_0=ruleEnumerator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumeratorListRule());
	        }
       		add(
       			$current, 
       			"enumerator",
        		lv_enumerator_0_0, 
        		"at.jku.weiner.c.parser.Parser.Enumerator");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_SKW_COMMA_1=RULE_SKW_COMMA
    { 
    newLeafNode(this_SKW_COMMA_1, grammarAccess.getEnumeratorListAccess().getSKW_COMMATerminalRuleCall_1_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumeratorListAccess().getEnumeratorEnumeratorParserRuleCall_1_1_0()); 
	    }
		lv_enumerator_2_0=ruleEnumerator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumeratorListRule());
	        }
       		add(
       			$current, 
       			"enumerator",
        		lv_enumerator_2_0, 
        		"at.jku.weiner.c.parser.Parser.Enumerator");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*


(
(
		lv_lastComma_3_0=RULE_SKW_COMMA
		{
			newLeafNode(lv_lastComma_3_0, grammarAccess.getEnumeratorListAccess().getLastCommaSKW_COMMATerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumeratorListRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lastComma",
        		true, 
        		"at.jku.weiner.c.common.Common.SKW_COMMA");
	    }

)
)?

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleEnumerator
entryRuleEnumerator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumeratorRule()); }
	 iv_ruleEnumerator=ruleEnumerator 
	 { $current=$iv_ruleEnumerator.current; } 
	 EOF 
;

// Rule Enumerator
ruleEnumerator returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getEnumeratorAccess().getEnumeratorAction_0(),
            $current);
    }
)


(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getEnumeratorAccess().getIdIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumeratorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"at.jku.weiner.c.common.Common.ID");
	    }

)
)


(
this_SKW_ASSIGN_2=RULE_SKW_ASSIGN
    { 
    newLeafNode(this_SKW_ASSIGN_2, grammarAccess.getEnumeratorAccess().getSKW_ASSIGNTerminalRuleCall_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumeratorAccess().getExprConstantExpressionParserRuleCall_2_1_0()); 
	    }
		lv_expr_3_0=ruleConstantExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumeratorRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_3_0, 
        		"at.jku.weiner.c.parser.Parser.ConstantExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)?

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleTypeQualifier
entryRuleTypeQualifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeQualifierRule()); }
	 iv_ruleTypeQualifier=ruleTypeQualifier 
	 { $current=$iv_ruleTypeQualifier.current; } 
	 EOF 
;

// Rule TypeQualifier
ruleTypeQualifier returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeQualifierAccess().getTypeQualifierAction_0(),
            $current);
    }
)


(
(
(
		lv_type_1_0=RULE_KW_CONST
		{
			newLeafNode(lv_type_1_0, grammarAccess.getTypeQualifierAccess().getTypeKW_CONSTTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeQualifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"at.jku.weiner.c.parser.Parser.KW_CONST");
	    }

)
)


    |
(
(
		lv_type_2_0=RULE_KW_RESTRICT
		{
			newLeafNode(lv_type_2_0, grammarAccess.getTypeQualifierAccess().getTypeKW_RESTRICTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeQualifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"at.jku.weiner.c.parser.Parser.KW_RESTRICT");
	    }

)
)


    |
(
(
		lv_type_3_0=RULE_KW_RESTRICT2
		{
			newLeafNode(lv_type_3_0, grammarAccess.getTypeQualifierAccess().getTypeKW_RESTRICT2TerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeQualifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"at.jku.weiner.c.parser.Parser.KW_RESTRICT2");
	    }

)
)


    |
(
(
		lv_type_4_0=RULE_KW_RESTRICT3
		{
			newLeafNode(lv_type_4_0, grammarAccess.getTypeQualifierAccess().getTypeKW_RESTRICT3TerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeQualifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"at.jku.weiner.c.parser.Parser.KW_RESTRICT3");
	    }

)
)


    |
(
(
		lv_type_5_0=RULE_KW_VOLATILE
		{
			newLeafNode(lv_type_5_0, grammarAccess.getTypeQualifierAccess().getTypeKW_VOLATILETerminalRuleCall_1_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeQualifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_5_0, 
        		"at.jku.weiner.c.parser.Parser.KW_VOLATILE");
	    }

)
)


    |
(
(
		lv_type_6_0=RULE_KW_ATOMIC
		{
			newLeafNode(lv_type_6_0, grammarAccess.getTypeQualifierAccess().getTypeKW_ATOMICTerminalRuleCall_1_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeQualifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_6_0, 
        		"at.jku.weiner.c.parser.Parser.KW_ATOMIC");
	    }

)
)

)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleFunctionSpecifier
entryRuleFunctionSpecifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionSpecifierRule()); }
	 iv_ruleFunctionSpecifier=ruleFunctionSpecifier 
	 { $current=$iv_ruleFunctionSpecifier.current; } 
	 EOF 
;

// Rule FunctionSpecifier
ruleFunctionSpecifier returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getFunctionSpecifierAccess().getFunctionSpecifierAction_0(),
            $current);
    }
)


(
(
(
(
		lv_name_1_0=RULE_KW_INLINE1
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFunctionSpecifierAccess().getNameKW_INLINE1TerminalRuleCall_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"at.jku.weiner.c.parser.Parser.KW_INLINE1");
	    }

)
)


    |
(
(
		lv_name_2_0=RULE_KW_INLINE2
		{
			newLeafNode(lv_name_2_0, grammarAccess.getFunctionSpecifierAccess().getNameKW_INLINE2TerminalRuleCall_1_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"at.jku.weiner.c.parser.Parser.KW_INLINE2");
	    }

)
)


    |
(
(
		lv_name_3_0=RULE_KW_INLINE3
		{
			newLeafNode(lv_name_3_0, grammarAccess.getFunctionSpecifierAccess().getNameKW_INLINE3TerminalRuleCall_1_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"at.jku.weiner.c.parser.Parser.KW_INLINE3");
	    }

)
)


    |
(
(
		lv_name_4_0=RULE_KW_NORETURN
		{
			newLeafNode(lv_name_4_0, grammarAccess.getFunctionSpecifierAccess().getNameKW_NORETURNTerminalRuleCall_1_0_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"at.jku.weiner.c.parser.Parser.KW_NORETURN");
	    }

)
)

)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionSpecifierAccess().getGccAttributeSpecifierGccAttributeSpecifierParserRuleCall_1_1_0()); 
	    }
		lv_gccAttributeSpecifier_5_0=ruleGccAttributeSpecifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionSpecifierRule());
	        }
       		set(
       			$current, 
       			"gccAttributeSpecifier",
        		lv_gccAttributeSpecifier_5_0, 
        		"at.jku.weiner.c.parser.Parser.GccAttributeSpecifier");
	        afterParserOrEnumRuleCall();
	    }

)
)

)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleDeclarator
entryRuleDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclaratorRule()); }
	 iv_ruleDeclarator=ruleDeclarator 
	 { $current=$iv_ruleDeclarator.current; } 
	 EOF 
;

// Rule Declarator
ruleDeclarator returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclaratorAccess().getDeclaratorAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaratorAccess().getPointerPointerParserRuleCall_1_0()); 
	    }
		lv_pointer_1_0=rulePointer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaratorRule());
	        }
       		set(
       			$current, 
       			"pointer",
        		lv_pointer_1_0, 
        		"at.jku.weiner.c.parser.Parser.Pointer");
	        afterParserOrEnumRuleCall();
	    }

)
)?


(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaratorAccess().getGccDeclExt1GccDeclaratorExtensionParserRuleCall_2_0()); 
	    }
		lv_gccDeclExt1_2_0=ruleGccDeclaratorExtension		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaratorRule());
	        }
       		add(
       			$current, 
       			"gccDeclExt1",
        		lv_gccDeclExt1_2_0, 
        		"at.jku.weiner.c.parser.Parser.GccDeclaratorExtension");
	        afterParserOrEnumRuleCall();
	    }

)
)*


(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaratorAccess().getDeclaratorDirectDeclaratorParserRuleCall_3_0()); 
	    }
		lv_declarator_3_0=ruleDirectDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaratorRule());
	        }
       		set(
       			$current, 
       			"declarator",
        		lv_declarator_3_0, 
        		"at.jku.weiner.c.parser.Parser.DirectDeclarator");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaratorAccess().getGccDeclExt2GccDeclaratorExtensionParserRuleCall_4_0()); 
	    }
		lv_gccDeclExt2_4_0=ruleGccDeclaratorExtension		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaratorRule());
	        }
       		add(
       			$current, 
       			"gccDeclExt2",
        		lv_gccDeclExt2_4_0, 
        		"at.jku.weiner.c.parser.Parser.GccDeclaratorExtension");
	        afterParserOrEnumRuleCall();
	    }

)
)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleDirectDeclarator
entryRuleDirectDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDirectDeclaratorRule()); }
	 iv_ruleDirectDeclarator=ruleDirectDeclarator 
	 { $current=$iv_ruleDirectDeclarator.current; } 
	 EOF 
;

// Rule DirectDeclarator
ruleDirectDeclarator returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDirectDeclaratorAccess().getDirectDeclaratorAction_0(),
            $current);
    }
)


({{at.jku.weiner.c.parser.utils.Scope.setTemp(input);}}

(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getDirectDeclaratorAccess().getIdIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDirectDeclaratorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"at.jku.weiner.c.common.Common.ID");
	    }

)
)
{{at.jku.weiner.c.parser.utils.Scope.addTypedefIfIsTypedef(state.backtracking);}}


    |
(
this_SKW_LEFTPAREN_2=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_2, grammarAccess.getDirectDeclaratorAccess().getSKW_LEFTPARENTerminalRuleCall_1_1_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getDirectDeclaratorAccess().getDeclaratorDeclaratorParserRuleCall_1_1_1_0()); 
	    }
		lv_declarator_3_0=ruleDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirectDeclaratorRule());
	        }
       		set(
       			$current, 
       			"declarator",
        		lv_declarator_3_0, 
        		"at.jku.weiner.c.parser.Parser.Declarator");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTPAREN_4=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_4, grammarAccess.getDirectDeclaratorAccess().getSKW_RIGHTPARENTerminalRuleCall_1_1_2()); 
    }


)

)


(
(
		{ 
	        newCompositeNode(grammarAccess.getDirectDeclaratorAccess().getDeclaratorSuffixDeclaratorSuffixParserRuleCall_2_0()); 
	    }
		lv_declaratorSuffix_5_0=ruleDeclaratorSuffix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirectDeclaratorRule());
	        }
       		add(
       			$current, 
       			"declaratorSuffix",
        		lv_declaratorSuffix_5_0, 
        		"at.jku.weiner.c.parser.Parser.DeclaratorSuffix");
	        afterParserOrEnumRuleCall();
	    }

)
)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleDeclaratorSuffix
entryRuleDeclaratorSuffix returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclaratorSuffixRule()); }
	 iv_ruleDeclaratorSuffix=ruleDeclaratorSuffix 
	 { $current=$iv_ruleDeclaratorSuffix.current; } 
	 EOF 
;

// Rule DeclaratorSuffix
ruleDeclaratorSuffix returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclaratorSuffixAccess().getDeclaratorSuffixAction_0(),
            $current);
    }
)


(
(
this_SKW_LEFTBRACKET_1=RULE_SKW_LEFTBRACKET
    { 
    newLeafNode(this_SKW_LEFTBRACKET_1, grammarAccess.getDeclaratorSuffixAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_0_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaratorSuffixAccess().getExprAssignmentExpressionParserRuleCall_1_0_1_0()); 
	    }
		lv_expr_2_0=ruleAssignmentExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaratorSuffixRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_2_0, 
        		"at.jku.weiner.c.parser.Parser.AssignmentExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTBRACKET_3=RULE_SKW_RIGHTBRACKET
    { 
    newLeafNode(this_SKW_RIGHTBRACKET_3, grammarAccess.getDeclaratorSuffixAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_0_2()); 
    }


)


    |
(
this_SKW_LEFTBRACKET_4=RULE_SKW_LEFTBRACKET
    { 
    newLeafNode(this_SKW_LEFTBRACKET_4, grammarAccess.getDeclaratorSuffixAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_1_0()); 
    }



this_SKW_RIGHTBRACKET_5=RULE_SKW_RIGHTBRACKET
    { 
    newLeafNode(this_SKW_RIGHTBRACKET_5, grammarAccess.getDeclaratorSuffixAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_1_1()); 
    }


)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaratorSuffixAccess().getLastSuffixDirectDeclaratorLastSuffixParserRuleCall_1_2_0()); 
	    }
		lv_lastSuffix_6_0=ruleDirectDeclaratorLastSuffix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaratorSuffixRule());
	        }
       		set(
       			$current, 
       			"lastSuffix",
        		lv_lastSuffix_6_0, 
        		"at.jku.weiner.c.parser.Parser.DirectDeclaratorLastSuffix");
	        afterParserOrEnumRuleCall();
	    }

)
)

)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleDirectDeclaratorLastSuffix
entryRuleDirectDeclaratorLastSuffix returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDirectDeclaratorLastSuffixRule()); }
	 iv_ruleDirectDeclaratorLastSuffix=ruleDirectDeclaratorLastSuffix 
	 { $current=$iv_ruleDirectDeclaratorLastSuffix.current; } 
	 EOF 
;

// Rule DirectDeclaratorLastSuffix
ruleDirectDeclaratorLastSuffix returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDirectDeclaratorLastSuffixAccess().getDirectDeclaratorLastSuffixAction_0(),
            $current);
    }
)


this_SKW_LEFTPAREN_1=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_1, grammarAccess.getDirectDeclaratorLastSuffixAccess().getSKW_LEFTPARENTerminalRuleCall_1()); 
    }



(
(
(
		{ 
	        newCompositeNode(grammarAccess.getDirectDeclaratorLastSuffixAccess().getParameterTypeListParameterTypeListParserRuleCall_2_0_0()); 
	    }
		lv_parameterTypeList_2_0=ruleParameterTypeList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirectDeclaratorLastSuffixRule());
	        }
       		add(
       			$current, 
       			"parameterTypeList",
        		lv_parameterTypeList_2_0, 
        		"at.jku.weiner.c.parser.Parser.ParameterTypeList");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getDirectDeclaratorLastSuffixAccess().getIdentifierListIdentifierListParserRuleCall_2_1_0()); 
	    }
		lv_identifierList_3_0=ruleIdentifierList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirectDeclaratorLastSuffixRule());
	        }
       		set(
       			$current, 
       			"identifierList",
        		lv_identifierList_3_0, 
        		"at.jku.weiner.c.parser.Parser.IdentifierList");
	        afterParserOrEnumRuleCall();
	    }

)
)?

)


this_SKW_RIGHTPAREN_4=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_4, grammarAccess.getDirectDeclaratorLastSuffixAccess().getSKW_RIGHTPARENTerminalRuleCall_3()); 
    }


)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleGccDeclaratorExtension
entryRuleGccDeclaratorExtension returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGccDeclaratorExtensionRule()); }
	 iv_ruleGccDeclaratorExtension=ruleGccDeclaratorExtension 
	 { $current=$iv_ruleGccDeclaratorExtension.current; } 
	 EOF 
;

// Rule GccDeclaratorExtension
ruleGccDeclaratorExtension returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getGccDeclaratorExtensionAccess().getGccDeclaratorExtensionAction_0(),
            $current);
    }
)


(
(
(
(
(
		lv_asm_1_1=RULE_KW_ASM1
		{
			newLeafNode(lv_asm_1_1, grammarAccess.getGccDeclaratorExtensionAccess().getAsmKW_ASM1TerminalRuleCall_1_0_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGccDeclaratorExtensionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"asm",
        		lv_asm_1_1, 
        		"at.jku.weiner.c.parser.Parser.KW_ASM1");
	    }

    |		lv_asm_1_2=RULE_KW_ASM2
		{
			newLeafNode(lv_asm_1_2, grammarAccess.getGccDeclaratorExtensionAccess().getAsmKW_ASM2TerminalRuleCall_1_0_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGccDeclaratorExtensionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"asm",
        		lv_asm_1_2, 
        		"at.jku.weiner.c.parser.Parser.KW_ASM2");
	    }

    |		lv_asm_1_3=RULE_KW_ASM3
		{
			newLeafNode(lv_asm_1_3, grammarAccess.getGccDeclaratorExtensionAccess().getAsmKW_ASM3TerminalRuleCall_1_0_0_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGccDeclaratorExtensionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"asm",
        		lv_asm_1_3, 
        		"at.jku.weiner.c.parser.Parser.KW_ASM3");
	    }

)

)
)


this_SKW_LEFTPAREN_2=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_2, grammarAccess.getGccDeclaratorExtensionAccess().getSKW_LEFTPARENTerminalRuleCall_1_0_1()); 
    }



(
(
		lv_string_3_0=RULE_STRING_LITERAL
		{
			newLeafNode(lv_string_3_0, grammarAccess.getGccDeclaratorExtensionAccess().getStringSTRING_LITERALTerminalRuleCall_1_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGccDeclaratorExtensionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"string",
        		lv_string_3_0, 
        		"at.jku.weiner.c.common.Common.STRING_LITERAL");
	    }

)
)+


this_SKW_RIGHTPAREN_4=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_4, grammarAccess.getGccDeclaratorExtensionAccess().getSKW_RIGHTPARENTerminalRuleCall_1_0_3()); 
    }


)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getGccDeclaratorExtensionAccess().getGccAttributeSpecifierGccAttributeSpecifierParserRuleCall_1_1_0()); 
	    }
		lv_gccAttributeSpecifier_5_0=ruleGccAttributeSpecifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGccDeclaratorExtensionRule());
	        }
       		set(
       			$current, 
       			"gccAttributeSpecifier",
        		lv_gccAttributeSpecifier_5_0, 
        		"at.jku.weiner.c.parser.Parser.GccAttributeSpecifier");
	        afterParserOrEnumRuleCall();
	    }

)
)

)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleGccAttributeSpecifier
entryRuleGccAttributeSpecifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGccAttributeSpecifierRule()); }
	 iv_ruleGccAttributeSpecifier=ruleGccAttributeSpecifier 
	 { $current=$iv_ruleGccAttributeSpecifier.current; } 
	 EOF 
;

// Rule GccAttributeSpecifier
ruleGccAttributeSpecifier returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getGccAttributeSpecifierAccess().getGccAttributeSpecifierAction_0(),
            $current);
    }
)


(
(
(
		lv_attribute_1_1=RULE_KW_ATTRIBUTE2
		{
			newLeafNode(lv_attribute_1_1, grammarAccess.getGccAttributeSpecifierAccess().getAttributeKW_ATTRIBUTE2TerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGccAttributeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"attribute",
        		lv_attribute_1_1, 
        		"at.jku.weiner.c.parser.Parser.KW_ATTRIBUTE2");
	    }

    |		lv_attribute_1_2=RULE_KW_ATTRIBUTE3
		{
			newLeafNode(lv_attribute_1_2, grammarAccess.getGccAttributeSpecifierAccess().getAttributeKW_ATTRIBUTE3TerminalRuleCall_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGccAttributeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"attribute",
        		lv_attribute_1_2, 
        		"at.jku.weiner.c.parser.Parser.KW_ATTRIBUTE3");
	    }

)

)
)


this_SKW_LEFTPAREN_2=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_2, grammarAccess.getGccAttributeSpecifierAccess().getSKW_LEFTPARENTerminalRuleCall_2()); 
    }



this_SKW_LEFTPAREN_3=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_3, grammarAccess.getGccAttributeSpecifierAccess().getSKW_LEFTPARENTerminalRuleCall_3()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getGccAttributeSpecifierAccess().getListGccAttributeListParserRuleCall_4_0()); 
	    }
		lv_list_4_0=ruleGccAttributeList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGccAttributeSpecifierRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_4_0, 
        		"at.jku.weiner.c.parser.Parser.GccAttributeList");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_SKW_RIGHTPAREN_5=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_5, grammarAccess.getGccAttributeSpecifierAccess().getSKW_RIGHTPARENTerminalRuleCall_5()); 
    }



this_SKW_RIGHTPAREN_6=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_6, grammarAccess.getGccAttributeSpecifierAccess().getSKW_RIGHTPARENTerminalRuleCall_6()); 
    }


)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleGccAttributeList
entryRuleGccAttributeList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGccAttributeListRule()); }
	 iv_ruleGccAttributeList=ruleGccAttributeList 
	 { $current=$iv_ruleGccAttributeList.current; } 
	 EOF 
;

// Rule GccAttributeList
ruleGccAttributeList returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
(
		{ 
	        newCompositeNode(grammarAccess.getGccAttributeListAccess().getGccAttributeGccAttributeParserRuleCall_0_0()); 
	    }
		lv_gccAttribute_0_0=ruleGccAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGccAttributeListRule());
	        }
       		add(
       			$current, 
       			"gccAttribute",
        		lv_gccAttribute_0_0, 
        		"at.jku.weiner.c.parser.Parser.GccAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_SKW_COMMA_1=RULE_SKW_COMMA
    { 
    newLeafNode(this_SKW_COMMA_1, grammarAccess.getGccAttributeListAccess().getSKW_COMMATerminalRuleCall_1_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getGccAttributeListAccess().getGccAttributeGccAttributeParserRuleCall_1_1_0()); 
	    }
		lv_gccAttribute_2_0=ruleGccAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGccAttributeListRule());
	        }
       		add(
       			$current, 
       			"gccAttribute",
        		lv_gccAttribute_2_0, 
        		"at.jku.weiner.c.parser.Parser.GccAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleGccAttribute
entryRuleGccAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGccAttributeRule()); }
	 iv_ruleGccAttribute=ruleGccAttribute 
	 { $current=$iv_ruleGccAttribute.current; } 
	 EOF 
;

// Rule GccAttribute
ruleGccAttribute returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getGccAttributeAccess().getGccAttributeAction_0(),
            $current);
    }
)


(
(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getGccAttributeAccess().getIdIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGccAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"at.jku.weiner.c.common.Common.ID");
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getGccAttributeAccess().getConstConstant1ParserRuleCall_1_1_0()); 
	    }
		lv_const_2_0=ruleConstant1		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGccAttributeRule());
	        }
       		set(
       			$current, 
       			"const",
        		lv_const_2_0, 
        		"at.jku.weiner.c.common.Common.Constant1");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getGccAttributeAccess().getKeywordParserKeywordsParserRuleCall_1_2_0()); 
	    }
		lv_keyword_3_0=ruleParserKeywords		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGccAttributeRule());
	        }
       		set(
       			$current, 
       			"keyword",
        		lv_keyword_3_0, 
        		"at.jku.weiner.c.parser.Parser.ParserKeywords");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


(
this_SKW_LEFTPAREN_4=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_4, grammarAccess.getGccAttributeAccess().getSKW_LEFTPARENTerminalRuleCall_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getGccAttributeAccess().getListArgumentExpressionListParserRuleCall_2_1_0()); 
	    }
		lv_list_5_0=ruleArgumentExpressionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGccAttributeRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_5_0, 
        		"at.jku.weiner.c.parser.Parser.ArgumentExpressionList");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_SKW_RIGHTPAREN_6=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_6, grammarAccess.getGccAttributeAccess().getSKW_RIGHTPARENTerminalRuleCall_2_2()); 
    }


)?

)


;
finally {

	/*no after found*/

}





// Entry rule entryRulePointer
entryRulePointer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPointerRule()); }
	 iv_rulePointer=rulePointer 
	 { $current=$iv_rulePointer.current; } 
	 EOF 
;

// Rule Pointer
rulePointer returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPointerAccess().getPointerAction_0(),
            $current);
    }
)


(
(
(
(
		lv_star_1_0=RULE_SKW_STAR
		{
			newLeafNode(lv_star_1_0, grammarAccess.getPointerAccess().getStarSKW_STARTerminalRuleCall_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPointerRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"star",
        		lv_star_1_0, 
        		"at.jku.weiner.c.common.Common.SKW_STAR");
	    }

)
)


    |
(
(
		lv_caret_2_0=RULE_SKW_CARET
		{
			newLeafNode(lv_caret_2_0, grammarAccess.getPointerAccess().getCaretSKW_CARETTerminalRuleCall_1_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPointerRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"caret",
        		lv_caret_2_0, 
        		"at.jku.weiner.c.common.Common.SKW_CARET");
	    }

)
)

)


(
(
		{ 
	        newCompositeNode(grammarAccess.getPointerAccess().getTypeQualifierListTypeQualifierListParserRuleCall_1_1_0()); 
	    }
		lv_typeQualifierList_3_0=ruleTypeQualifierList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPointerRule());
	        }
       		add(
       			$current, 
       			"typeQualifierList",
        		lv_typeQualifierList_3_0, 
        		"at.jku.weiner.c.parser.Parser.TypeQualifierList");
	        afterParserOrEnumRuleCall();
	    }

)
)?

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleTypeQualifierList
entryRuleTypeQualifierList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeQualifierListRule()); }
	 iv_ruleTypeQualifierList=ruleTypeQualifierList 
	 { $current=$iv_ruleTypeQualifierList.current; } 
	 EOF 
;

// Rule TypeQualifierList
ruleTypeQualifierList returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeQualifierListAccess().getTypeQualifierListAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeQualifierListAccess().getTypeQualifierTypeQualifierParserRuleCall_1_0()); 
	    }
		lv_typeQualifier_1_0=ruleTypeQualifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeQualifierListRule());
	        }
       		add(
       			$current, 
       			"typeQualifier",
        		lv_typeQualifier_1_0, 
        		"at.jku.weiner.c.parser.Parser.TypeQualifier");
	        afterParserOrEnumRuleCall();
	    }

)
)+

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleParameterTypeList
entryRuleParameterTypeList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterTypeListRule()); }
	 iv_ruleParameterTypeList=ruleParameterTypeList 
	 { $current=$iv_ruleParameterTypeList.current; } 
	 EOF 
;

// Rule ParameterTypeList
ruleParameterTypeList returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getParameterTypeListAccess().getParameterTypeListAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterTypeListAccess().getListParameterListParserRuleCall_1_0()); 
	    }
		lv_list_1_0=ruleParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterTypeListRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_1_0, 
        		"at.jku.weiner.c.parser.Parser.ParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_SKW_COMMA_2=RULE_SKW_COMMA
    { 
    newLeafNode(this_SKW_COMMA_2, grammarAccess.getParameterTypeListAccess().getSKW_COMMATerminalRuleCall_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterTypeListAccess().getEllipsisEllipsisParserRuleCall_2_1_0()); 
	    }
		lv_ellipsis_3_0=ruleEllipsis		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterTypeListRule());
	        }
       		set(
       			$current, 
       			"ellipsis",
        		true, 
        		"at.jku.weiner.c.common.Common.Ellipsis");
	        afterParserOrEnumRuleCall();
	    }

)
)

)?

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleParameterList
entryRuleParameterList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterListRule()); }
	 iv_ruleParameterList=ruleParameterList 
	 { $current=$iv_ruleParameterList.current; } 
	 EOF 
;

// Rule ParameterList
ruleParameterList returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getParameterListAccess().getParameterListAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterListAccess().getParameterDeclarationParameterDeclarationParserRuleCall_1_0()); 
	    }
		lv_parameterDeclaration_1_0=ruleParameterDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterListRule());
	        }
       		add(
       			$current, 
       			"parameterDeclaration",
        		lv_parameterDeclaration_1_0, 
        		"at.jku.weiner.c.parser.Parser.ParameterDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_SKW_COMMA_2=RULE_SKW_COMMA
    { 
    newLeafNode(this_SKW_COMMA_2, grammarAccess.getParameterListAccess().getSKW_COMMATerminalRuleCall_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterListAccess().getParameterDeclarationParameterDeclarationParserRuleCall_2_1_0()); 
	    }
		lv_parameterDeclaration_3_0=ruleParameterDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterListRule());
	        }
       		add(
       			$current, 
       			"parameterDeclaration",
        		lv_parameterDeclaration_3_0, 
        		"at.jku.weiner.c.parser.Parser.ParameterDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleParameterDeclaration
entryRuleParameterDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterDeclarationRule()); }
	 iv_ruleParameterDeclaration=ruleParameterDeclaration 
	 { $current=$iv_ruleParameterDeclaration.current; } 
	 EOF 
;

// Rule ParameterDeclaration
ruleParameterDeclaration returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getParameterDeclarationAccess().getParameterDeclarationAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterDeclarationAccess().getDeclSpecifiersDeclarationSpecifiersParserRuleCall_1_0()); 
	    }
		lv_declSpecifiers_1_0=ruleDeclarationSpecifiers		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterDeclarationRule());
	        }
       		set(
       			$current, 
       			"declSpecifiers",
        		lv_declSpecifiers_1_0, 
        		"at.jku.weiner.c.parser.Parser.DeclarationSpecifiers");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterDeclarationAccess().getDeclaratorDeclaratorParserRuleCall_2_0_0()); 
	    }
		lv_declarator_2_0=ruleDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterDeclarationRule());
	        }
       		set(
       			$current, 
       			"declarator",
        		lv_declarator_2_0, 
        		"at.jku.weiner.c.parser.Parser.Declarator");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterDeclarationAccess().getAbstractDeclatorAbstractDeclaratorParserRuleCall_2_1_0()); 
	    }
		lv_abstractDeclator_3_0=ruleAbstractDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterDeclarationRule());
	        }
       		set(
       			$current, 
       			"abstractDeclator",
        		lv_abstractDeclator_3_0, 
        		"at.jku.weiner.c.parser.Parser.AbstractDeclarator");
	        afterParserOrEnumRuleCall();
	    }

)
)?

)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleIdentifierList
entryRuleIdentifierList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdentifierListRule()); }
	 iv_ruleIdentifierList=ruleIdentifierList 
	 { $current=$iv_ruleIdentifierList.current; } 
	 EOF 
;

// Rule IdentifierList
ruleIdentifierList returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getIdentifierListAccess().getIdentifierListAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getIdentifierListAccess().getIdMyIdentifierParserRuleCall_1_0()); 
	    }
		lv_id_1_0=ruleMyIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIdentifierListRule());
	        }
       		add(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"at.jku.weiner.c.parser.Parser.MyIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_SKW_COMMA_2=RULE_SKW_COMMA
    { 
    newLeafNode(this_SKW_COMMA_2, grammarAccess.getIdentifierListAccess().getSKW_COMMATerminalRuleCall_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIdentifierListAccess().getIdMyIdentifierParserRuleCall_2_1_0()); 
	    }
		lv_id_3_0=ruleMyIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIdentifierListRule());
	        }
       		add(
       			$current, 
       			"id",
        		lv_id_3_0, 
        		"at.jku.weiner.c.parser.Parser.MyIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleMyIdentifier
entryRuleMyIdentifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMyIdentifierRule()); }
	 iv_ruleMyIdentifier=ruleMyIdentifier 
	 { $current=$iv_ruleMyIdentifier.current; } 
	 EOF 
;

// Rule MyIdentifier
ruleMyIdentifier returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMyIdentifierAccess().getMyIdentifierAction_0(),
            $current);
    }
)


(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getMyIdentifierAccess().getIdIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMyIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"at.jku.weiner.c.common.Common.ID");
	    }

)
)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleTypeName
entryRuleTypeName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeNameRule()); }
	 iv_ruleTypeName=ruleTypeName 
	 { $current=$iv_ruleTypeName.current; } 
	 EOF 
;

// Rule TypeName
ruleTypeName returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeNameAccess().getTypeNameAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeNameAccess().getListSpecifierQualifierListParserRuleCall_1_0()); 
	    }
		lv_list_1_0=ruleSpecifierQualifierList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeNameRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_1_0, 
        		"at.jku.weiner.c.parser.Parser.SpecifierQualifierList");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeNameAccess().getAbstractDeclaratorAbstractDeclaratorParserRuleCall_2_0()); 
	    }
		lv_abstractDeclarator_2_0=ruleAbstractDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeNameRule());
	        }
       		set(
       			$current, 
       			"abstractDeclarator",
        		lv_abstractDeclarator_2_0, 
        		"at.jku.weiner.c.parser.Parser.AbstractDeclarator");
	        afterParserOrEnumRuleCall();
	    }

)
)?

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleAbstractDeclarator
entryRuleAbstractDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractDeclaratorRule()); }
	 iv_ruleAbstractDeclarator=ruleAbstractDeclarator 
	 { $current=$iv_ruleAbstractDeclarator.current; } 
	 EOF 
;

// Rule AbstractDeclarator
ruleAbstractDeclarator returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAbstractDeclaratorAccess().getAbstractDeclaratorAction_0(),
            $current);
    }
)


(
(
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractDeclaratorAccess().getPointerPointerParserRuleCall_1_0_0()); 
	    }
		lv_pointer_1_0=rulePointer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractDeclaratorRule());
	        }
       		set(
       			$current, 
       			"pointer",
        		lv_pointer_1_0, 
        		"at.jku.weiner.c.parser.Parser.Pointer");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractDeclaratorAccess().getPointerPointerParserRuleCall_1_1_0_0()); 
	    }
		lv_pointer_2_0=rulePointer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractDeclaratorRule());
	        }
       		set(
       			$current, 
       			"pointer",
        		lv_pointer_2_0, 
        		"at.jku.weiner.c.parser.Parser.Pointer");
	        afterParserOrEnumRuleCall();
	    }

)
)?


(
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractDeclaratorAccess().getDirectAbstractDeclaratorDirectAbstractDeclaratorParserRuleCall_1_1_1_0()); 
	    }
		lv_directAbstractDeclarator_3_0=ruleDirectAbstractDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractDeclaratorRule());
	        }
       		set(
       			$current, 
       			"directAbstractDeclarator",
        		lv_directAbstractDeclarator_3_0, 
        		"at.jku.weiner.c.parser.Parser.DirectAbstractDeclarator");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractDeclaratorAccess().getGccDeclExtAbstractGccDeclaratorExtensionParserRuleCall_1_1_2_0()); 
	    }
		lv_gccDeclExtAbstract_4_0=ruleGccDeclaratorExtension		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractDeclaratorRule());
	        }
       		add(
       			$current, 
       			"gccDeclExtAbstract",
        		lv_gccDeclExtAbstract_4_0, 
        		"at.jku.weiner.c.parser.Parser.GccDeclaratorExtension");
	        afterParserOrEnumRuleCall();
	    }

)
)*

)

)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleDirectAbstractDeclarator
entryRuleDirectAbstractDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDirectAbstractDeclaratorRule()); }
	 iv_ruleDirectAbstractDeclarator=ruleDirectAbstractDeclarator 
	 { $current=$iv_ruleDirectAbstractDeclarator.current; } 
	 EOF 
;

// Rule DirectAbstractDeclarator
ruleDirectAbstractDeclarator returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDirectAbstractDeclaratorAccess().getDirectAbstractDeclaratorAction_0(),
            $current);
    }
)


(
(
this_SKW_LEFTPAREN_1=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_1, grammarAccess.getDirectAbstractDeclaratorAccess().getSKW_LEFTPARENTerminalRuleCall_1_0_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getDirectAbstractDeclaratorAccess().getDeclaratorAbstractDeclaratorParserRuleCall_1_0_1_0()); 
	    }
		lv_declarator_2_0=ruleAbstractDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirectAbstractDeclaratorRule());
	        }
       		set(
       			$current, 
       			"declarator",
        		lv_declarator_2_0, 
        		"at.jku.weiner.c.parser.Parser.AbstractDeclarator");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTPAREN_3=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_3, grammarAccess.getDirectAbstractDeclaratorAccess().getSKW_RIGHTPARENTerminalRuleCall_1_0_2()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getDirectAbstractDeclaratorAccess().getGccDeclExtGccDeclaratorExtensionParserRuleCall_1_0_3_0()); 
	    }
		lv_gccDeclExt_4_0=ruleGccDeclaratorExtension		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirectAbstractDeclaratorRule());
	        }
       		add(
       			$current, 
       			"gccDeclExt",
        		lv_gccDeclExt_4_0, 
        		"at.jku.weiner.c.parser.Parser.GccDeclaratorExtension");
	        afterParserOrEnumRuleCall();
	    }

)
)*

)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getDirectAbstractDeclaratorAccess().getAbstractDeclaratorSuffixAbstractDeclaratorSuffixParserRuleCall_1_1_0()); 
	    }
		lv_abstractDeclaratorSuffix_5_0=ruleAbstractDeclaratorSuffix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirectAbstractDeclaratorRule());
	        }
       		add(
       			$current, 
       			"abstractDeclaratorSuffix",
        		lv_abstractDeclaratorSuffix_5_0, 
        		"at.jku.weiner.c.parser.Parser.AbstractDeclaratorSuffix");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


(
(
		{ 
	        newCompositeNode(grammarAccess.getDirectAbstractDeclaratorAccess().getAbstractDeclaratorSuffixAbstractDeclaratorSuffixParserRuleCall_2_0()); 
	    }
		lv_abstractDeclaratorSuffix_6_0=ruleAbstractDeclaratorSuffix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirectAbstractDeclaratorRule());
	        }
       		add(
       			$current, 
       			"abstractDeclaratorSuffix",
        		lv_abstractDeclaratorSuffix_6_0, 
        		"at.jku.weiner.c.parser.Parser.AbstractDeclaratorSuffix");
	        afterParserOrEnumRuleCall();
	    }

)
)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleAbstractDeclaratorSuffix
entryRuleAbstractDeclaratorSuffix returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractDeclaratorSuffixRule()); }
	 iv_ruleAbstractDeclaratorSuffix=ruleAbstractDeclaratorSuffix 
	 { $current=$iv_ruleAbstractDeclaratorSuffix.current; } 
	 EOF 
;

// Rule AbstractDeclaratorSuffix
ruleAbstractDeclaratorSuffix returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAbstractDeclaratorSuffixAccess().getAbstractDeclaratorSuffixAction_0(),
            $current);
    }
)


(
(
this_SKW_LEFTBRACKET_1=RULE_SKW_LEFTBRACKET
    { 
    newLeafNode(this_SKW_LEFTBRACKET_1, grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_0_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractDeclaratorSuffixAccess().getTypeQualifierListTypeQualifierListParserRuleCall_1_0_1_0()); 
	    }
		lv_typeQualifierList_2_0=ruleTypeQualifierList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractDeclaratorSuffixRule());
	        }
       		set(
       			$current, 
       			"typeQualifierList",
        		lv_typeQualifierList_2_0, 
        		"at.jku.weiner.c.parser.Parser.TypeQualifierList");
	        afterParserOrEnumRuleCall();
	    }

)
)?


(
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractDeclaratorSuffixAccess().getAssignmentExprAssignmentExpressionParserRuleCall_1_0_2_0()); 
	    }
		lv_assignmentExpr_3_0=ruleAssignmentExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractDeclaratorSuffixRule());
	        }
       		add(
       			$current, 
       			"assignmentExpr",
        		lv_assignmentExpr_3_0, 
        		"at.jku.weiner.c.parser.Parser.AssignmentExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_SKW_RIGHTBRACKET_4=RULE_SKW_RIGHTBRACKET
    { 
    newLeafNode(this_SKW_RIGHTBRACKET_4, grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_0_3()); 
    }


)


    |
(
this_SKW_LEFTBRACKET_5=RULE_SKW_LEFTBRACKET
    { 
    newLeafNode(this_SKW_LEFTBRACKET_5, grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_1_0()); 
    }



this_KW_STATIC_6=RULE_KW_STATIC
    { 
    newLeafNode(this_KW_STATIC_6, grammarAccess.getAbstractDeclaratorSuffixAccess().getKW_STATICTerminalRuleCall_1_1_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractDeclaratorSuffixAccess().getTypeQualifierListTypeQualifierListParserRuleCall_1_1_2_0()); 
	    }
		lv_typeQualifierList_7_0=ruleTypeQualifierList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractDeclaratorSuffixRule());
	        }
       		set(
       			$current, 
       			"typeQualifierList",
        		lv_typeQualifierList_7_0, 
        		"at.jku.weiner.c.parser.Parser.TypeQualifierList");
	        afterParserOrEnumRuleCall();
	    }

)
)?


(
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractDeclaratorSuffixAccess().getAssignmentExprAssignmentExpressionParserRuleCall_1_1_3_0()); 
	    }
		lv_assignmentExpr_8_0=ruleAssignmentExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractDeclaratorSuffixRule());
	        }
       		add(
       			$current, 
       			"assignmentExpr",
        		lv_assignmentExpr_8_0, 
        		"at.jku.weiner.c.parser.Parser.AssignmentExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTBRACKET_9=RULE_SKW_RIGHTBRACKET
    { 
    newLeafNode(this_SKW_RIGHTBRACKET_9, grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_1_4()); 
    }


)


    |
(
this_SKW_LEFTBRACKET_10=RULE_SKW_LEFTBRACKET
    { 
    newLeafNode(this_SKW_LEFTBRACKET_10, grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractDeclaratorSuffixAccess().getTypeQualifierListOrigTypeQualifierListParserRuleCall_1_2_1_0()); 
	    }
		lv_typeQualifierListOrig_11_0=ruleTypeQualifierList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractDeclaratorSuffixRule());
	        }
       		set(
       			$current, 
       			"typeQualifierListOrig",
        		lv_typeQualifierListOrig_11_0, 
        		"at.jku.weiner.c.parser.Parser.TypeQualifierList");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_KW_STATIC_12=RULE_KW_STATIC
    { 
    newLeafNode(this_KW_STATIC_12, grammarAccess.getAbstractDeclaratorSuffixAccess().getKW_STATICTerminalRuleCall_1_2_2()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractDeclaratorSuffixAccess().getAssignmentExprAssignmentExpressionParserRuleCall_1_2_3_0()); 
	    }
		lv_assignmentExpr_13_0=ruleAssignmentExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractDeclaratorSuffixRule());
	        }
       		add(
       			$current, 
       			"assignmentExpr",
        		lv_assignmentExpr_13_0, 
        		"at.jku.weiner.c.parser.Parser.AssignmentExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTBRACKET_14=RULE_SKW_RIGHTBRACKET
    { 
    newLeafNode(this_SKW_RIGHTBRACKET_14, grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_2_4()); 
    }


)


    |
(
this_SKW_LEFTBRACKET_15=RULE_SKW_LEFTBRACKET
    { 
    newLeafNode(this_SKW_LEFTBRACKET_15, grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_3_0()); 
    }



this_SKW_STAR_16=RULE_SKW_STAR
    { 
    newLeafNode(this_SKW_STAR_16, grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_STARTerminalRuleCall_1_3_1()); 
    }



this_SKW_RIGHTBRACKET_17=RULE_SKW_RIGHTBRACKET
    { 
    newLeafNode(this_SKW_RIGHTBRACKET_17, grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_3_2()); 
    }


)


    |
(
this_SKW_LEFTPAREN_18=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_18, grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_LEFTPARENTerminalRuleCall_1_4_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractDeclaratorSuffixAccess().getParameterTypeListParameterTypeListParserRuleCall_1_4_1_0()); 
	    }
		lv_parameterTypeList_19_0=ruleParameterTypeList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractDeclaratorSuffixRule());
	        }
       		set(
       			$current, 
       			"parameterTypeList",
        		lv_parameterTypeList_19_0, 
        		"at.jku.weiner.c.parser.Parser.ParameterTypeList");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_SKW_RIGHTPAREN_20=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_20, grammarAccess.getAbstractDeclaratorSuffixAccess().getSKW_RIGHTPARENTerminalRuleCall_1_4_2()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractDeclaratorSuffixAccess().getGccDeclExtGccDeclaratorExtensionParserRuleCall_1_4_3_0()); 
	    }
		lv_gccDeclExt_21_0=ruleGccDeclaratorExtension		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractDeclaratorSuffixRule());
	        }
       		add(
       			$current, 
       			"gccDeclExt",
        		lv_gccDeclExt_21_0, 
        		"at.jku.weiner.c.parser.Parser.GccDeclaratorExtension");
	        afterParserOrEnumRuleCall();
	    }

)
)*

)

)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleInitializer
entryRuleInitializer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInitializerRule()); }
	 iv_ruleInitializer=ruleInitializer 
	 { $current=$iv_ruleInitializer.current; } 
	 EOF 
;

// Rule Initializer
ruleInitializer returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getInitializerAccess().getInitializerAction_0(),
            $current);
    }
)


(
(
(
		{ 
	        newCompositeNode(grammarAccess.getInitializerAccess().getExprAssignmentExpressionParserRuleCall_1_0_0()); 
	    }
		lv_expr_1_0=ruleAssignmentExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitializerRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"at.jku.weiner.c.parser.Parser.AssignmentExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
this_SKW_LEFTBRACE_2=RULE_SKW_LEFTBRACE
    { 
    newLeafNode(this_SKW_LEFTBRACE_2, grammarAccess.getInitializerAccess().getSKW_LEFTBRACETerminalRuleCall_1_1_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getInitializerAccess().getListInitializerListParserRuleCall_1_1_1_0()); 
	    }
		lv_list_3_0=ruleInitializerList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitializerRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_3_0, 
        		"at.jku.weiner.c.parser.Parser.InitializerList");
	        afterParserOrEnumRuleCall();
	    }

)
)?


(
(
		lv_lastComma_4_0=RULE_SKW_COMMA
		{
			newLeafNode(lv_lastComma_4_0, grammarAccess.getInitializerAccess().getLastCommaSKW_COMMATerminalRuleCall_1_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInitializerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lastComma",
        		true, 
        		"at.jku.weiner.c.common.Common.SKW_COMMA");
	    }

)
)?


this_SKW_RIGHTBRACE_5=RULE_SKW_RIGHTBRACE
    { 
    newLeafNode(this_SKW_RIGHTBRACE_5, grammarAccess.getInitializerAccess().getSKW_RIGHTBRACETerminalRuleCall_1_1_3()); 
    }


)

)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleInitializerList
entryRuleInitializerList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInitializerListRule()); }
	 iv_ruleInitializerList=ruleInitializerList 
	 { $current=$iv_ruleInitializerList.current; } 
	 EOF 
;

// Rule InitializerList
ruleInitializerList returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getInitializerListAccess().getInitializerListAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getInitializerListAccess().getInitInitParserRuleCall_1_0()); 
	    }
		lv_init_1_0=ruleInit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitializerListRule());
	        }
       		add(
       			$current, 
       			"init",
        		lv_init_1_0, 
        		"at.jku.weiner.c.parser.Parser.Init");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_SKW_COMMA_2=RULE_SKW_COMMA
    { 
    newLeafNode(this_SKW_COMMA_2, grammarAccess.getInitializerListAccess().getSKW_COMMATerminalRuleCall_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getInitializerListAccess().getInitInitParserRuleCall_2_1_0()); 
	    }
		lv_init_3_0=ruleInit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitializerListRule());
	        }
       		add(
       			$current, 
       			"init",
        		lv_init_3_0, 
        		"at.jku.weiner.c.parser.Parser.Init");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleInit
entryRuleInit returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInitRule()); }
	 iv_ruleInit=ruleInit 
	 { $current=$iv_ruleInit.current; } 
	 EOF 
;

// Rule Init
ruleInit returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getInitAccess().getInitAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getInitAccess().getDesignationDesignationParserRuleCall_1_0()); 
	    }
		lv_designation_1_0=ruleDesignation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitRule());
	        }
       		set(
       			$current, 
       			"designation",
        		lv_designation_1_0, 
        		"at.jku.weiner.c.parser.Parser.Designation");
	        afterParserOrEnumRuleCall();
	    }

)
)?


(
(
		{ 
	        newCompositeNode(grammarAccess.getInitAccess().getInitializerInitializerParserRuleCall_2_0()); 
	    }
		lv_initializer_2_0=ruleInitializer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitRule());
	        }
       		set(
       			$current, 
       			"initializer",
        		lv_initializer_2_0, 
        		"at.jku.weiner.c.parser.Parser.Initializer");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleBlockList
entryRuleBlockList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlockListRule()); }
	 iv_ruleBlockList=ruleBlockList 
	 { $current=$iv_ruleBlockList.current; } 
	 EOF 
;

// Rule BlockList
ruleBlockList returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getBlockListAccess().getBlockListAction_0(),
            $current);
    }
)


(
(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockListAccess().getDeclarationDeclarationParserRuleCall_1_0_0()); 
	    }
		lv_declaration_1_0=ruleDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockListRule());
	        }
       		add(
       			$current, 
       			"declaration",
        		lv_declaration_1_0, 
        		"at.jku.weiner.c.parser.Parser.Declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockListAccess().getStatementStatementParserRuleCall_1_1_0()); 
	    }
		lv_statement_2_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockListRule());
	        }
       		add(
       			$current, 
       			"statement",
        		lv_statement_2_0, 
        		"at.jku.weiner.c.parser.Parser.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)+

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	 iv_ruleStatement=ruleStatement 
	 { $current=$iv_ruleStatement.current; } 
	 EOF 
;

// Rule Statement
ruleStatement returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStatementAccess().getStatementAction_0(),
            $current);
    }
)


(
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getStmtLabeledStatementParserRuleCall_1_0_0()); 
	    }
		lv_stmt_1_0=ruleLabeledStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"stmt",
        		lv_stmt_1_0, 
        		"at.jku.weiner.c.parser.Parser.LabeledStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getStmtCompoundStatementParserRuleCall_1_1_0()); 
	    }
		lv_stmt_2_0=ruleCompoundStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"stmt",
        		lv_stmt_2_0, 
        		"at.jku.weiner.c.parser.Parser.CompoundStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getStmtExpressionStatementParserRuleCall_1_2_0()); 
	    }
		lv_stmt_3_0=ruleExpressionStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"stmt",
        		lv_stmt_3_0, 
        		"at.jku.weiner.c.parser.Parser.ExpressionStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getStmtSelectionStatementParserRuleCall_1_3_0()); 
	    }
		lv_stmt_4_0=ruleSelectionStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"stmt",
        		lv_stmt_4_0, 
        		"at.jku.weiner.c.parser.Parser.SelectionStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getStmtIterationStatementParserRuleCall_1_4_0()); 
	    }
		lv_stmt_5_0=ruleIterationStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"stmt",
        		lv_stmt_5_0, 
        		"at.jku.weiner.c.parser.Parser.IterationStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getStmtJumpStatementParserRuleCall_1_5_0()); 
	    }
		lv_stmt_6_0=ruleJumpStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"stmt",
        		lv_stmt_6_0, 
        		"at.jku.weiner.c.parser.Parser.JumpStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getStmtAsmStatementParserRuleCall_1_6_0()); 
	    }
		lv_stmt_7_0=ruleAsmStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"stmt",
        		lv_stmt_7_0, 
        		"at.jku.weiner.c.parser.Parser.AsmStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleLabeledStatement
entryRuleLabeledStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLabeledStatementRule()); }
	 iv_ruleLabeledStatement=ruleLabeledStatement 
	 { $current=$iv_ruleLabeledStatement.current; } 
	 EOF 
;

// Rule LabeledStatement
ruleLabeledStatement returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getLabeledStatementAccess().getLabeledStatementAction_0(),
            $current);
    }
)


(
(
(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getLabeledStatementAccess().getIdIDTerminalRuleCall_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabeledStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"at.jku.weiner.c.common.Common.ID");
	    }

)
)


this_SKW_COLON_2=RULE_SKW_COLON
    { 
    newLeafNode(this_SKW_COLON_2, grammarAccess.getLabeledStatementAccess().getSKW_COLONTerminalRuleCall_1_0_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getLabeledStatementAccess().getLStmtStatementParserRuleCall_1_0_2_0()); 
	    }
		lv_lStmt_3_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabeledStatementRule());
	        }
       		set(
       			$current, 
       			"lStmt",
        		lv_lStmt_3_0, 
        		"at.jku.weiner.c.parser.Parser.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


    |
(
(
(
		lv_case_4_0=RULE_KW_CASE
		{
			newLeafNode(lv_case_4_0, grammarAccess.getLabeledStatementAccess().getCaseKW_CASETerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabeledStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"case",
        		lv_case_4_0, 
        		"at.jku.weiner.c.parser.Parser.KW_CASE");
	    }

)
)


(
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getLabeledStatementAccess().getLowerConstant1ParserRuleCall_1_1_1_0_0_0()); 
	    }
		lv_lower_5_0=ruleConstant1		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabeledStatementRule());
	        }
       		set(
       			$current, 
       			"lower",
        		lv_lower_5_0, 
        		"at.jku.weiner.c.common.Common.Constant1");
	        afterParserOrEnumRuleCall();
	    }

)
)



	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLabeledStatementAccess().getEllipsisParserRuleCall_1_1_1_0_1()); 
    }
ruleEllipsis
    { 
        afterParserOrEnumRuleCall();
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getLabeledStatementAccess().getHigherConstant1ParserRuleCall_1_1_1_0_2_0()); 
	    }
		lv_higher_7_0=ruleConstant1		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabeledStatementRule());
	        }
       		set(
       			$current, 
       			"higher",
        		lv_higher_7_0, 
        		"at.jku.weiner.c.common.Common.Constant1");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getLabeledStatementAccess().getExprConstantExpressionParserRuleCall_1_1_1_1_0()); 
	    }
		lv_expr_8_0=ruleConstantExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabeledStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_8_0, 
        		"at.jku.weiner.c.parser.Parser.ConstantExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


this_SKW_COLON_9=RULE_SKW_COLON
    { 
    newLeafNode(this_SKW_COLON_9, grammarAccess.getLabeledStatementAccess().getSKW_COLONTerminalRuleCall_1_1_2()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getLabeledStatementAccess().getLStmtStatementParserRuleCall_1_1_3_0()); 
	    }
		lv_lStmt_10_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabeledStatementRule());
	        }
       		set(
       			$current, 
       			"lStmt",
        		lv_lStmt_10_0, 
        		"at.jku.weiner.c.parser.Parser.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


    |
(
(
(
		lv_mydefault_11_0=RULE_KW_DEFAULT
		{
			newLeafNode(lv_mydefault_11_0, grammarAccess.getLabeledStatementAccess().getMydefaultKW_DEFAULTTerminalRuleCall_1_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabeledStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mydefault",
        		true, 
        		"at.jku.weiner.c.parser.Parser.KW_DEFAULT");
	    }

)
)


this_SKW_COLON_12=RULE_SKW_COLON
    { 
    newLeafNode(this_SKW_COLON_12, grammarAccess.getLabeledStatementAccess().getSKW_COLONTerminalRuleCall_1_2_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getLabeledStatementAccess().getLStmtStatementParserRuleCall_1_2_2_0()); 
	    }
		lv_lStmt_13_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabeledStatementRule());
	        }
       		set(
       			$current, 
       			"lStmt",
        		lv_lStmt_13_0, 
        		"at.jku.weiner.c.parser.Parser.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)

)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleCompoundStatement
entryRuleCompoundStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompoundStatementRule()); }
	 iv_ruleCompoundStatement=ruleCompoundStatement 
	 { $current=$iv_ruleCompoundStatement.current; } 
	 EOF 
;

// Rule CompoundStatement
ruleCompoundStatement returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.parser.utils.Scope.createNewScope("CompoundStatement");
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getCompoundStatementAccess().getCompoundStatementAction_0(),
            $current);
    }
)


this_SKW_LEFTBRACE_1=RULE_SKW_LEFTBRACE
    { 
    newLeafNode(this_SKW_LEFTBRACE_1, grammarAccess.getCompoundStatementAccess().getSKW_LEFTBRACETerminalRuleCall_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getCompoundStatementAccess().getBodyBodyStatementParserRuleCall_2_0()); 
	    }
		lv_body_2_0=ruleBodyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompoundStatementRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_2_0, 
        		"at.jku.weiner.c.parser.Parser.BodyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTBRACE_3=RULE_SKW_RIGHTBRACE
    { 
    newLeafNode(this_SKW_RIGHTBRACE_3, grammarAccess.getCompoundStatementAccess().getSKW_RIGHTBRACETerminalRuleCall_3()); 
    }


)


;
finally {

	{at.jku.weiner.c.parser.utils.Scope.removeScope();}

}





// Entry rule entryRuleBodyStatement
entryRuleBodyStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBodyStatementRule()); }
	 iv_ruleBodyStatement=ruleBodyStatement 
	 { $current=$iv_ruleBodyStatement.current; } 
	 EOF 
;

// Rule BodyStatement
ruleBodyStatement returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getBodyStatementAccess().getBodyStatementAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getBodyStatementAccess().getBlockListBlockListParserRuleCall_1_0()); 
	    }
		lv_blockList_1_0=ruleBlockList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBodyStatementRule());
	        }
       		add(
       			$current, 
       			"blockList",
        		lv_blockList_1_0, 
        		"at.jku.weiner.c.parser.Parser.BlockList");
	        afterParserOrEnumRuleCall();
	    }

)
)?

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleExpressionStatement
entryRuleExpressionStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionStatementRule()); }
	 iv_ruleExpressionStatement=ruleExpressionStatement 
	 { $current=$iv_ruleExpressionStatement.current; } 
	 EOF 
;

// Rule ExpressionStatement
ruleExpressionStatement returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpressionStatementAccess().getExpressionStatementAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_1_0, 
        		"at.jku.weiner.c.parser.Parser.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_SKW_SEMI_2=RULE_SKW_SEMI
    { 
    newLeafNode(this_SKW_SEMI_2, grammarAccess.getExpressionStatementAccess().getSKW_SEMITerminalRuleCall_2()); 
    }


)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleSelectionStatement
entryRuleSelectionStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectionStatementRule()); }
	 iv_ruleSelectionStatement=ruleSelectionStatement 
	 { $current=$iv_ruleSelectionStatement.current; } 
	 EOF 
;

// Rule SelectionStatement
ruleSelectionStatement returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSelectionStatementAccess().getSelectionStatementAction_0(),
            $current);
    }
)


(
(
(
(
		lv_if_1_0=RULE_KW_IF
		{
			newLeafNode(lv_if_1_0, grammarAccess.getSelectionStatementAccess().getIfKW_IFTerminalRuleCall_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSelectionStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"if",
        		lv_if_1_0, 
        		"at.jku.weiner.c.parser.Parser.KW_IF");
	    }

)
)


this_SKW_LEFTPAREN_2=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_2, grammarAccess.getSelectionStatementAccess().getSKW_LEFTPARENTerminalRuleCall_1_0_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionStatementAccess().getExprExpressionParserRuleCall_1_0_2_0()); 
	    }
		lv_expr_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_3_0, 
        		"at.jku.weiner.c.parser.Parser.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTPAREN_4=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_4, grammarAccess.getSelectionStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_1_0_3()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionStatementAccess().getIfStatementStatementParserRuleCall_1_0_4_0()); 
	    }
		lv_ifStatement_5_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionStatementRule());
	        }
       		set(
       			$current, 
       			"ifStatement",
        		lv_ifStatement_5_0, 
        		"at.jku.weiner.c.parser.Parser.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
((
(
RULE_KW_ELSE

)
)=>
(
		lv_else_6_0=RULE_KW_ELSE
		{
			newLeafNode(lv_else_6_0, grammarAccess.getSelectionStatementAccess().getElseKW_ELSETerminalRuleCall_1_0_5_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSelectionStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"else",
        		lv_else_6_0, 
        		"at.jku.weiner.c.parser.Parser.KW_ELSE");
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionStatementAccess().getElseStatementStatementParserRuleCall_1_0_5_1_0()); 
	    }
		lv_elseStatement_7_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionStatementRule());
	        }
       		set(
       			$current, 
       			"elseStatement",
        		lv_elseStatement_7_0, 
        		"at.jku.weiner.c.parser.Parser.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)?

)


    |
(
(
(
		lv_switch_8_0=RULE_KW_SWITCH
		{
			newLeafNode(lv_switch_8_0, grammarAccess.getSelectionStatementAccess().getSwitchKW_SWITCHTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSelectionStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"switch",
        		lv_switch_8_0, 
        		"at.jku.weiner.c.parser.Parser.KW_SWITCH");
	    }

)
)


this_SKW_LEFTPAREN_9=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_9, grammarAccess.getSelectionStatementAccess().getSKW_LEFTPARENTerminalRuleCall_1_1_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionStatementAccess().getExprExpressionParserRuleCall_1_1_2_0()); 
	    }
		lv_expr_10_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_10_0, 
        		"at.jku.weiner.c.parser.Parser.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTPAREN_11=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_11, grammarAccess.getSelectionStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_1_1_3()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionStatementAccess().getSwitchStatementStatementParserRuleCall_1_1_4_0()); 
	    }
		lv_switchStatement_12_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionStatementRule());
	        }
       		set(
       			$current, 
       			"switchStatement",
        		lv_switchStatement_12_0, 
        		"at.jku.weiner.c.parser.Parser.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)

)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleIterationStatement
entryRuleIterationStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIterationStatementRule()); }
	 iv_ruleIterationStatement=ruleIterationStatement 
	 { $current=$iv_ruleIterationStatement.current; } 
	 EOF 
;

// Rule IterationStatement
ruleIterationStatement returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getIterationStatementAccess().getIterationStatementAction_0(),
            $current);
    }
)


(
(
(
(
		lv_while_1_0=RULE_KW_WHILE
		{
			newLeafNode(lv_while_1_0, grammarAccess.getIterationStatementAccess().getWhileKW_WHILETerminalRuleCall_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIterationStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"while",
        		lv_while_1_0, 
        		"at.jku.weiner.c.parser.Parser.KW_WHILE");
	    }

)
)


this_SKW_LEFTPAREN_2=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_2, grammarAccess.getIterationStatementAccess().getSKW_LEFTPARENTerminalRuleCall_1_0_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getExprExpressionParserRuleCall_1_0_2_0()); 
	    }
		lv_expr_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_3_0, 
        		"at.jku.weiner.c.parser.Parser.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTPAREN_4=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_4, grammarAccess.getIterationStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_1_0_3()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getStatementStatementParserRuleCall_1_0_4_0()); 
	    }
		lv_statement_5_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"statement",
        		lv_statement_5_0, 
        		"at.jku.weiner.c.parser.Parser.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


    |
(
(
(
		lv_do_6_0=RULE_KW_DO
		{
			newLeafNode(lv_do_6_0, grammarAccess.getIterationStatementAccess().getDoKW_DOTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIterationStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"do",
        		lv_do_6_0, 
        		"at.jku.weiner.c.parser.Parser.KW_DO");
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getStatementStatementParserRuleCall_1_1_1_0()); 
	    }
		lv_statement_7_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"statement",
        		lv_statement_7_0, 
        		"at.jku.weiner.c.parser.Parser.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_KW_WHILE_8=RULE_KW_WHILE
    { 
    newLeafNode(this_KW_WHILE_8, grammarAccess.getIterationStatementAccess().getKW_WHILETerminalRuleCall_1_1_2()); 
    }



this_SKW_LEFTPAREN_9=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_9, grammarAccess.getIterationStatementAccess().getSKW_LEFTPARENTerminalRuleCall_1_1_3()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getExprExpressionParserRuleCall_1_1_4_0()); 
	    }
		lv_expr_10_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_10_0, 
        		"at.jku.weiner.c.parser.Parser.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTPAREN_11=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_11, grammarAccess.getIterationStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_1_1_5()); 
    }



(
(
		lv_semi_12_0=RULE_SKW_SEMI
		{
			newLeafNode(lv_semi_12_0, grammarAccess.getIterationStatementAccess().getSemiSKW_SEMITerminalRuleCall_1_1_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIterationStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"semi",
        		lv_semi_12_0, 
        		"at.jku.weiner.c.common.Common.SKW_SEMI");
	    }

)
)

)


    |
(
(
(
		lv_for_13_0=RULE_KW_FOR
		{
			newLeafNode(lv_for_13_0, grammarAccess.getIterationStatementAccess().getForKW_FORTerminalRuleCall_1_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIterationStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"for",
        		lv_for_13_0, 
        		"at.jku.weiner.c.parser.Parser.KW_FOR");
	    }

)
)


this_SKW_LEFTPAREN_14=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_14, grammarAccess.getIterationStatementAccess().getSKW_LEFTPARENTerminalRuleCall_1_2_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getInitExprExpressionParserRuleCall_1_2_2_0()); 
	    }
		lv_initExpr_15_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"initExpr",
        		lv_initExpr_15_0, 
        		"at.jku.weiner.c.parser.Parser.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_SKW_SEMI_16=RULE_SKW_SEMI
    { 
    newLeafNode(this_SKW_SEMI_16, grammarAccess.getIterationStatementAccess().getSKW_SEMITerminalRuleCall_1_2_3()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getExprExpressionParserRuleCall_1_2_4_0()); 
	    }
		lv_expr_17_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_17_0, 
        		"at.jku.weiner.c.parser.Parser.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_SKW_SEMI_18=RULE_SKW_SEMI
    { 
    newLeafNode(this_SKW_SEMI_18, grammarAccess.getIterationStatementAccess().getSKW_SEMITerminalRuleCall_1_2_5()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getIncExprExpressionParserRuleCall_1_2_6_0()); 
	    }
		lv_incExpr_19_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"incExpr",
        		lv_incExpr_19_0, 
        		"at.jku.weiner.c.parser.Parser.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_SKW_RIGHTPAREN_20=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_20, grammarAccess.getIterationStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_1_2_7()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getStatementStatementParserRuleCall_1_2_8_0()); 
	    }
		lv_statement_21_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"statement",
        		lv_statement_21_0, 
        		"at.jku.weiner.c.parser.Parser.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


    |
(
(
(
		lv_for_22_0=RULE_KW_FOR
		{
			newLeafNode(lv_for_22_0, grammarAccess.getIterationStatementAccess().getForKW_FORTerminalRuleCall_1_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIterationStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"for",
        		lv_for_22_0, 
        		"at.jku.weiner.c.parser.Parser.KW_FOR");
	    }

)
)


this_SKW_LEFTPAREN_23=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_23, grammarAccess.getIterationStatementAccess().getSKW_LEFTPARENTerminalRuleCall_1_3_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getInitDeclDeclarationParserRuleCall_1_3_2_0()); 
	    }
		lv_initDecl_24_0=ruleDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"initDecl",
        		lv_initDecl_24_0, 
        		"at.jku.weiner.c.parser.Parser.Declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getExprExpressionParserRuleCall_1_3_3_0()); 
	    }
		lv_expr_25_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_25_0, 
        		"at.jku.weiner.c.parser.Parser.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_SKW_SEMI_26=RULE_SKW_SEMI
    { 
    newLeafNode(this_SKW_SEMI_26, grammarAccess.getIterationStatementAccess().getSKW_SEMITerminalRuleCall_1_3_4()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getIncExprExpressionParserRuleCall_1_3_5_0()); 
	    }
		lv_incExpr_27_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"incExpr",
        		lv_incExpr_27_0, 
        		"at.jku.weiner.c.parser.Parser.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_SKW_RIGHTPAREN_28=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_28, grammarAccess.getIterationStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_1_3_6()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getStatementStatementParserRuleCall_1_3_7_0()); 
	    }
		lv_statement_29_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"statement",
        		lv_statement_29_0, 
        		"at.jku.weiner.c.parser.Parser.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)

)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleJumpStatement
entryRuleJumpStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJumpStatementRule()); }
	 iv_ruleJumpStatement=ruleJumpStatement 
	 { $current=$iv_ruleJumpStatement.current; } 
	 EOF 
;

// Rule JumpStatement
ruleJumpStatement returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getJumpStatementAccess().getJumpStatementAction_0(),
            $current);
    }
)


(
(
(
(
		lv_continue_1_0=RULE_KW_CONTINUE
		{
			newLeafNode(lv_continue_1_0, grammarAccess.getJumpStatementAccess().getContinueKW_CONTINUETerminalRuleCall_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJumpStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"continue",
        		lv_continue_1_0, 
        		"at.jku.weiner.c.parser.Parser.KW_CONTINUE");
	    }

)
)


this_SKW_SEMI_2=RULE_SKW_SEMI
    { 
    newLeafNode(this_SKW_SEMI_2, grammarAccess.getJumpStatementAccess().getSKW_SEMITerminalRuleCall_1_0_1()); 
    }


)


    |
(
(
(
		lv_break_3_0=RULE_KW_BREAK
		{
			newLeafNode(lv_break_3_0, grammarAccess.getJumpStatementAccess().getBreakKW_BREAKTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJumpStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"break",
        		lv_break_3_0, 
        		"at.jku.weiner.c.parser.Parser.KW_BREAK");
	    }

)
)


this_SKW_SEMI_4=RULE_SKW_SEMI
    { 
    newLeafNode(this_SKW_SEMI_4, grammarAccess.getJumpStatementAccess().getSKW_SEMITerminalRuleCall_1_1_1()); 
    }


)


    |
(
(
(
		lv_return_5_0=RULE_KW_RETURN
		{
			newLeafNode(lv_return_5_0, grammarAccess.getJumpStatementAccess().getReturnKW_RETURNTerminalRuleCall_1_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJumpStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"return",
        		lv_return_5_0, 
        		"at.jku.weiner.c.parser.Parser.KW_RETURN");
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getJumpStatementAccess().getExprExpressionParserRuleCall_1_2_1_0()); 
	    }
		lv_expr_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJumpStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_6_0, 
        		"at.jku.weiner.c.parser.Parser.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_SKW_SEMI_7=RULE_SKW_SEMI
    { 
    newLeafNode(this_SKW_SEMI_7, grammarAccess.getJumpStatementAccess().getSKW_SEMITerminalRuleCall_1_2_2()); 
    }


)


    |
(
(
(
		lv_goto_8_0=RULE_KW_GOTO
		{
			newLeafNode(lv_goto_8_0, grammarAccess.getJumpStatementAccess().getGotoKW_GOTOTerminalRuleCall_1_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJumpStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"goto",
        		lv_goto_8_0, 
        		"at.jku.weiner.c.parser.Parser.KW_GOTO");
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getJumpStatementAccess().getExprUnaryExpressionParserRuleCall_1_3_1_0()); 
	    }
		lv_expr_9_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJumpStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_9_0, 
        		"at.jku.weiner.c.parser.Parser.UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_SEMI_10=RULE_SKW_SEMI
    { 
    newLeafNode(this_SKW_SEMI_10, grammarAccess.getJumpStatementAccess().getSKW_SEMITerminalRuleCall_1_3_2()); 
    }


)

)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleAsmStatement
entryRuleAsmStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAsmStatementRule()); }
	 iv_ruleAsmStatement=ruleAsmStatement 
	 { $current=$iv_ruleAsmStatement.current; } 
	 EOF 
;

// Rule AsmStatement
ruleAsmStatement returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAsmStatementAccess().getAsmStatementAction_0(),
            $current);
    }
)


(
(
(
		lv_asm_1_0=RULE_KW_ASM1
		{
			newLeafNode(lv_asm_1_0, grammarAccess.getAsmStatementAccess().getAsmKW_ASM1TerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAsmStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"asm",
        		lv_asm_1_0, 
        		"at.jku.weiner.c.parser.Parser.KW_ASM1");
	    }

)
)


    |
(
(
		lv_asm_2_0=RULE_KW_ASM2
		{
			newLeafNode(lv_asm_2_0, grammarAccess.getAsmStatementAccess().getAsmKW_ASM2TerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAsmStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"asm",
        		lv_asm_2_0, 
        		"at.jku.weiner.c.parser.Parser.KW_ASM2");
	    }

)
)


    |
(
(
		lv_asm_3_0=RULE_KW_ASM3
		{
			newLeafNode(lv_asm_3_0, grammarAccess.getAsmStatementAccess().getAsmKW_ASM3TerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAsmStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"asm",
        		lv_asm_3_0, 
        		"at.jku.weiner.c.parser.Parser.KW_ASM3");
	    }

)
)

)


(
(
(
		lv_volatile_4_0=RULE_KW_VOLATILE
		{
			newLeafNode(lv_volatile_4_0, grammarAccess.getAsmStatementAccess().getVolatileKW_VOLATILETerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAsmStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"volatile",
        		lv_volatile_4_0, 
        		"at.jku.weiner.c.parser.Parser.KW_VOLATILE");
	    }

)
)


    |
(
(
		lv_volatile_5_0=RULE_KW_VOLATILE2
		{
			newLeafNode(lv_volatile_5_0, grammarAccess.getAsmStatementAccess().getVolatileKW_VOLATILE2TerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAsmStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"volatile",
        		lv_volatile_5_0, 
        		"at.jku.weiner.c.parser.Parser.KW_VOLATILE2");
	    }

)
)

)?


this_SKW_LEFTPAREN_6=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_6, grammarAccess.getAsmStatementAccess().getSKW_LEFTPARENTerminalRuleCall_3()); 
    }



(
(
(
		{ 
	        newCompositeNode(grammarAccess.getAsmStatementAccess().getAsmLine1AsmLineParserRuleCall_4_0_0()); 
	    }
		lv_asmLine1_7_0=ruleAsmLine		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAsmStatementRule());
	        }
       		set(
       			$current, 
       			"asmLine1",
        		lv_asmLine1_7_0, 
        		"at.jku.weiner.c.parser.Parser.AsmLine");
	        afterParserOrEnumRuleCall();
	    }

)
)?


(
(
		{ 
	        newCompositeNode(grammarAccess.getAsmStatementAccess().getAsmLinesAsmLineWithColonParserRuleCall_4_1_0()); 
	    }
		lv_asmLines_8_0=ruleAsmLineWithColon		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAsmStatementRule());
	        }
       		add(
       			$current, 
       			"asmLines",
        		lv_asmLines_8_0, 
        		"at.jku.weiner.c.parser.Parser.AsmLineWithColon");
	        afterParserOrEnumRuleCall();
	    }

)
)*


(
(
		lv_lastComma_9_0=RULE_SKW_COMMA
		{
			newLeafNode(lv_lastComma_9_0, grammarAccess.getAsmStatementAccess().getLastCommaSKW_COMMATerminalRuleCall_4_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAsmStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lastComma",
        		true, 
        		"at.jku.weiner.c.common.Common.SKW_COMMA");
	    }

)
)?

)


this_SKW_RIGHTPAREN_10=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_10, grammarAccess.getAsmStatementAccess().getSKW_RIGHTPARENTerminalRuleCall_5()); 
    }



this_SKW_SEMI_11=RULE_SKW_SEMI
    { 
    newLeafNode(this_SKW_SEMI_11, grammarAccess.getAsmStatementAccess().getSKW_SEMITerminalRuleCall_6()); 
    }


)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleAsmLine
entryRuleAsmLine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAsmLineRule()); }
	 iv_ruleAsmLine=ruleAsmLine 
	 { $current=$iv_ruleAsmLine.current; } 
	 EOF 
;

// Rule AsmLine
ruleAsmLine returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAsmLineAccess().getAsmLineAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getAsmLineAccess().getSymAsmSymbolicNameParserRuleCall_1_0()); 
	    }
		lv_sym_1_0=ruleAsmSymbolicName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAsmLineRule());
	        }
       		set(
       			$current, 
       			"sym",
        		lv_sym_1_0, 
        		"at.jku.weiner.c.parser.Parser.AsmSymbolicName");
	        afterParserOrEnumRuleCall();
	    }

)
)?


(
(
		{ 
	        newCompositeNode(grammarAccess.getAsmLineAccess().getExprLogicalOrExpressionParserRuleCall_2_0()); 
	    }
		lv_expr_2_0=ruleLogicalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAsmLineRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_2_0, 
        		"at.jku.weiner.c.parser.Parser.LogicalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleAsmSymbolicName
entryRuleAsmSymbolicName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAsmSymbolicNameRule()); }
	 iv_ruleAsmSymbolicName=ruleAsmSymbolicName 
	 { $current=$iv_ruleAsmSymbolicName.current; } 
	 EOF 
;

// Rule AsmSymbolicName
ruleAsmSymbolicName returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAsmSymbolicNameAccess().getAsmSymbolicNameAction_0(),
            $current);
    }
)


this_SKW_LEFTBRACKET_1=RULE_SKW_LEFTBRACKET
    { 
    newLeafNode(this_SKW_LEFTBRACKET_1, grammarAccess.getAsmSymbolicNameAccess().getSKW_LEFTBRACKETTerminalRuleCall_1()); 
    }



(
(
		lv_id_2_0=RULE_ID
		{
			newLeafNode(lv_id_2_0, grammarAccess.getAsmSymbolicNameAccess().getIdIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAsmSymbolicNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"at.jku.weiner.c.common.Common.ID");
	    }

)
)


this_SKW_RIGHTBRACKET_3=RULE_SKW_RIGHTBRACKET
    { 
    newLeafNode(this_SKW_RIGHTBRACKET_3, grammarAccess.getAsmSymbolicNameAccess().getSKW_RIGHTBRACKETTerminalRuleCall_3()); 
    }


)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleAsmLineWithColon
entryRuleAsmLineWithColon returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAsmLineWithColonRule()); }
	 iv_ruleAsmLineWithColon=ruleAsmLineWithColon 
	 { $current=$iv_ruleAsmLineWithColon.current; } 
	 EOF 
;

// Rule AsmLineWithColon
ruleAsmLineWithColon returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAsmLineWithColonAccess().getAsmLineWithColonAction_0(),
            $current);
    }
)


this_SKW_COLON_1=RULE_SKW_COLON
    { 
    newLeafNode(this_SKW_COLON_1, grammarAccess.getAsmLineWithColonAccess().getSKW_COLONTerminalRuleCall_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getAsmLineWithColonAccess().getAsmLineAsmLineWithoutColonParserRuleCall_2_0()); 
	    }
		lv_asmLine_2_0=ruleAsmLineWithoutColon		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAsmLineWithColonRule());
	        }
       		set(
       			$current, 
       			"asmLine",
        		lv_asmLine_2_0, 
        		"at.jku.weiner.c.parser.Parser.AsmLineWithoutColon");
	        afterParserOrEnumRuleCall();
	    }

)
)?

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleAsmLineWithoutColon
entryRuleAsmLineWithoutColon returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAsmLineWithoutColonRule()); }
	 iv_ruleAsmLineWithoutColon=ruleAsmLineWithoutColon 
	 { $current=$iv_ruleAsmLineWithoutColon.current; } 
	 EOF 
;

// Rule AsmLineWithoutColon
ruleAsmLineWithoutColon returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAsmLineWithoutColonAccess().getAsmLineWithoutColonAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getAsmLineWithoutColonAccess().getAsmLinesAsmLineParserRuleCall_1_0()); 
	    }
		lv_asmLines_1_0=ruleAsmLine		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAsmLineWithoutColonRule());
	        }
       		add(
       			$current, 
       			"asmLines",
        		lv_asmLines_1_0, 
        		"at.jku.weiner.c.parser.Parser.AsmLine");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_SKW_COMMA_2=RULE_SKW_COMMA
    { 
    newLeafNode(this_SKW_COMMA_2, grammarAccess.getAsmLineWithoutColonAccess().getSKW_COMMATerminalRuleCall_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getAsmLineWithoutColonAccess().getAsmLinesAsmLineParserRuleCall_2_1_0()); 
	    }
		lv_asmLines_3_0=ruleAsmLine		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAsmLineWithoutColonRule());
	        }
       		add(
       			$current, 
       			"asmLines",
        		lv_asmLines_3_0, 
        		"at.jku.weiner.c.parser.Parser.AsmLine");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleDesignation
entryRuleDesignation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesignationRule()); }
	 iv_ruleDesignation=ruleDesignation 
	 { $current=$iv_ruleDesignation.current; } 
	 EOF 
;

// Rule Designation
ruleDesignation returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDesignationAccess().getDesignationAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getDesignationAccess().getListDesignatorListParserRuleCall_1_0()); 
	    }
		lv_list_1_0=ruleDesignatorList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesignationRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_1_0, 
        		"at.jku.weiner.c.parser.Parser.DesignatorList");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_ASSIGN_2=RULE_SKW_ASSIGN
    { 
    newLeafNode(this_SKW_ASSIGN_2, grammarAccess.getDesignationAccess().getSKW_ASSIGNTerminalRuleCall_2()); 
    }


)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleDesignatorList
entryRuleDesignatorList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesignatorListRule()); }
	 iv_ruleDesignatorList=ruleDesignatorList 
	 { $current=$iv_ruleDesignatorList.current; } 
	 EOF 
;

// Rule DesignatorList
ruleDesignatorList returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDesignatorListAccess().getDesignatorListAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getDesignatorListAccess().getDesignatorDesignatorParserRuleCall_1_0()); 
	    }
		lv_designator_1_0=ruleDesignator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesignatorListRule());
	        }
       		add(
       			$current, 
       			"designator",
        		lv_designator_1_0, 
        		"at.jku.weiner.c.parser.Parser.Designator");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getDesignatorListAccess().getDesignatorDesignatorParserRuleCall_2_0()); 
	    }
		lv_designator_2_0=ruleDesignator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesignatorListRule());
	        }
       		add(
       			$current, 
       			"designator",
        		lv_designator_2_0, 
        		"at.jku.weiner.c.parser.Parser.Designator");
	        afterParserOrEnumRuleCall();
	    }

)
)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleDesignator
entryRuleDesignator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesignatorRule()); }
	 iv_ruleDesignator=ruleDesignator 
	 { $current=$iv_ruleDesignator.current; } 
	 EOF 
;

// Rule Designator
ruleDesignator returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDesignatorAccess().getDesignatorAction_0(),
            $current);
    }
)


(
(
this_SKW_LEFTBRACKET_1=RULE_SKW_LEFTBRACKET
    { 
    newLeafNode(this_SKW_LEFTBRACKET_1, grammarAccess.getDesignatorAccess().getSKW_LEFTBRACKETTerminalRuleCall_1_0_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getDesignatorAccess().getExprConstantExpressionParserRuleCall_1_0_1_0()); 
	    }
		lv_expr_2_0=ruleConstantExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesignatorRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_2_0, 
        		"at.jku.weiner.c.parser.Parser.ConstantExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


(

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDesignatorAccess().getEllipsisParserRuleCall_1_0_2_0()); 
    }
ruleEllipsis
    { 
        afterParserOrEnumRuleCall();
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getDesignatorAccess().getToConstantExpressionParserRuleCall_1_0_2_1_0()); 
	    }
		lv_to_4_0=ruleConstantExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesignatorRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_4_0, 
        		"at.jku.weiner.c.parser.Parser.ConstantExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)?


this_SKW_RIGHTBRACKET_5=RULE_SKW_RIGHTBRACKET
    { 
    newLeafNode(this_SKW_RIGHTBRACKET_5, grammarAccess.getDesignatorAccess().getSKW_RIGHTBRACKETTerminalRuleCall_1_0_3()); 
    }


)


    |
(
this_SKW_DOT_6=RULE_SKW_DOT
    { 
    newLeafNode(this_SKW_DOT_6, grammarAccess.getDesignatorAccess().getSKW_DOTTerminalRuleCall_1_1_0()); 
    }



(
(
		lv_id_7_0=RULE_ID
		{
			newLeafNode(lv_id_7_0, grammarAccess.getDesignatorAccess().getIdIDTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDesignatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_7_0, 
        		"at.jku.weiner.c.common.Common.ID");
	    }

)
)

)

)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall_0()); 
    }
    this_AssignmentExpression_0=ruleAssignmentExpression
    { 
        $current = $this_AssignmentExpression_0.current; 
        afterParserOrEnumRuleCall();
    }



(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExpressionAccess().getExpressionLeftAction_1_0(),
            $current);
    }
)


this_SKW_COMMA_2=RULE_SKW_COMMA
    { 
    newLeafNode(this_SKW_COMMA_2, grammarAccess.getExpressionAccess().getSKW_COMMATerminalRuleCall_1_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getRightAssignmentExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleAssignmentExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"at.jku.weiner.c.parser.Parser.AssignmentExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleAssignmentExpression
entryRuleAssignmentExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignmentExpressionRule()); }
	 iv_ruleAssignmentExpression=ruleAssignmentExpression 
	 { $current=$iv_ruleAssignmentExpression.current; } 
	 EOF 
;

// Rule AssignmentExpression
ruleAssignmentExpression returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionAction_0_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getExprLvalueParserRuleCall_0_1_0()); 
	    }
		lv_expr_1_0=ruleLvalue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"at.jku.weiner.c.parser.Parser.Lvalue");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getOpAssignmentOperatorParserRuleCall_0_2_0()); 
	    }
		lv_op_2_0=ruleAssignmentOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"at.jku.weiner.c.parser.Parser.AssignmentOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAssignmentExprAssignmentExpressionParserRuleCall_0_3_0()); 
	    }
		lv_assignmentExpr_3_0=ruleAssignmentExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
	        }
       		set(
       			$current, 
       			"assignmentExpr",
        		lv_assignmentExpr_3_0, 
        		"at.jku.weiner.c.parser.Parser.AssignmentExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


    |

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getConditionalExpressionParserRuleCall_1()); 
    }
    this_ConditionalExpression_4=ruleConditionalExpression
    { 
        $current = $this_ConditionalExpression_4.current; 
        afterParserOrEnumRuleCall();
    }


)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleLvalue
entryRuleLvalue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLvalueRule()); }
	 iv_ruleLvalue=ruleLvalue 
	 { $current=$iv_ruleLvalue.current; } 
	 EOF 
;

// Rule Lvalue
ruleLvalue returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:


	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLvalueAccess().getUnaryExpressionParserRuleCall()); 
    }
    this_UnaryExpression_0=ruleUnaryExpression
    { 
        $current = $this_UnaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }



;
finally {

	/*no after found*/

}





// Entry rule entryRuleAssignmentOperator
entryRuleAssignmentOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignmentOperatorRule()); } 
	 iv_ruleAssignmentOperator=ruleAssignmentOperator 
	 { $current=$iv_ruleAssignmentOperator.current.getText(); }  
	 EOF 
;

// Rule AssignmentOperator
ruleAssignmentOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_SKW_ASSIGN_0=RULE_SKW_ASSIGN    {
		$current.merge(this_SKW_ASSIGN_0);
    }

    { 
    newLeafNode(this_SKW_ASSIGN_0, grammarAccess.getAssignmentOperatorAccess().getSKW_ASSIGNTerminalRuleCall_0()); 
    }

    |    this_STARASSIGN_1=RULE_STARASSIGN    {
		$current.merge(this_STARASSIGN_1);
    }

    { 
    newLeafNode(this_STARASSIGN_1, grammarAccess.getAssignmentOperatorAccess().getSTARASSIGNTerminalRuleCall_1()); 
    }

    |    this_DIVASSIGN_2=RULE_DIVASSIGN    {
		$current.merge(this_DIVASSIGN_2);
    }

    { 
    newLeafNode(this_DIVASSIGN_2, grammarAccess.getAssignmentOperatorAccess().getDIVASSIGNTerminalRuleCall_2()); 
    }

    |    this_MODASSIGN_3=RULE_MODASSIGN    {
		$current.merge(this_MODASSIGN_3);
    }

    { 
    newLeafNode(this_MODASSIGN_3, grammarAccess.getAssignmentOperatorAccess().getMODASSIGNTerminalRuleCall_3()); 
    }

    |    this_PLUSASSIGN_4=RULE_PLUSASSIGN    {
		$current.merge(this_PLUSASSIGN_4);
    }

    { 
    newLeafNode(this_PLUSASSIGN_4, grammarAccess.getAssignmentOperatorAccess().getPLUSASSIGNTerminalRuleCall_4()); 
    }

    |    this_MINUSASSIGN_5=RULE_MINUSASSIGN    {
		$current.merge(this_MINUSASSIGN_5);
    }

    { 
    newLeafNode(this_MINUSASSIGN_5, grammarAccess.getAssignmentOperatorAccess().getMINUSASSIGNTerminalRuleCall_5()); 
    }

    |    this_LEFTSHIFTASSIGN_6=RULE_LEFTSHIFTASSIGN    {
		$current.merge(this_LEFTSHIFTASSIGN_6);
    }

    { 
    newLeafNode(this_LEFTSHIFTASSIGN_6, grammarAccess.getAssignmentOperatorAccess().getLEFTSHIFTASSIGNTerminalRuleCall_6()); 
    }

    |    this_RIGHTSHIFTASSIGN_7=RULE_RIGHTSHIFTASSIGN    {
		$current.merge(this_RIGHTSHIFTASSIGN_7);
    }

    { 
    newLeafNode(this_RIGHTSHIFTASSIGN_7, grammarAccess.getAssignmentOperatorAccess().getRIGHTSHIFTASSIGNTerminalRuleCall_7()); 
    }

    |    this_ANDASSIGN_8=RULE_ANDASSIGN    {
		$current.merge(this_ANDASSIGN_8);
    }

    { 
    newLeafNode(this_ANDASSIGN_8, grammarAccess.getAssignmentOperatorAccess().getANDASSIGNTerminalRuleCall_8()); 
    }

    |    this_XORASSIGN_9=RULE_XORASSIGN    {
		$current.merge(this_XORASSIGN_9);
    }

    { 
    newLeafNode(this_XORASSIGN_9, grammarAccess.getAssignmentOperatorAccess().getXORASSIGNTerminalRuleCall_9()); 
    }

    |    this_ORASSIGN_10=RULE_ORASSIGN    {
		$current.merge(this_ORASSIGN_10);
    }

    { 
    newLeafNode(this_ORASSIGN_10, grammarAccess.getAssignmentOperatorAccess().getORASSIGNTerminalRuleCall_10()); 
    }
)
    ;





// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionalExpressionRule()); }
	 iv_ruleConditionalExpression=ruleConditionalExpression 
	 { $current=$iv_ruleConditionalExpression.current; } 
	 EOF 
;

// Rule ConditionalExpression
ruleConditionalExpression returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getLogicalOrExpressionParserRuleCall_0()); 
    }
    this_LogicalOrExpression_0=ruleLogicalOrExpression
    { 
        $current = $this_LogicalOrExpression_0.current; 
        afterParserOrEnumRuleCall();
    }



(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getConditionalExpressionAccess().getConditionalExpressionLeftAction_1_0(),
            $current);
    }
)


this_SKW_QUESTION_2=RULE_SKW_QUESTION
    { 
    newLeafNode(this_SKW_QUESTION_2, grammarAccess.getConditionalExpressionAccess().getSKW_QUESTIONTerminalRuleCall_1_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getQExprExpressionParserRuleCall_1_2_0()); 
	    }
		lv_qExpr_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
	        }
       		set(
       			$current, 
       			"qExpr",
        		lv_qExpr_3_0, 
        		"at.jku.weiner.c.parser.Parser.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_SKW_COLON_4=RULE_SKW_COLON
    { 
    newLeafNode(this_SKW_COLON_4, grammarAccess.getConditionalExpressionAccess().getSKW_COLONTerminalRuleCall_1_3()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getCExprConditionalExpressionParserRuleCall_1_4_0()); 
	    }
		lv_cExpr_5_0=ruleConditionalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
	        }
       		set(
       			$current, 
       			"cExpr",
        		lv_cExpr_5_0, 
        		"at.jku.weiner.c.parser.Parser.ConditionalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)?

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleLogicalOrExpression
entryRuleLogicalOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogicalOrExpressionRule()); }
	 iv_ruleLogicalOrExpression=ruleLogicalOrExpression 
	 { $current=$iv_ruleLogicalOrExpression.current; } 
	 EOF 
;

// Rule LogicalOrExpression
ruleLogicalOrExpression returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); 
    }
    this_LogicalAndExpression_0=ruleLogicalAndExpression
    { 
        $current = $this_LogicalAndExpression_0.current; 
        afterParserOrEnumRuleCall();
    }



(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getLogicalOrExpressionAccess().getLogicalOrExpressionLeftAction_1_0(),
            $current);
    }
)


this_SKW_OROR_2=RULE_SKW_OROR
    { 
    newLeafNode(this_SKW_OROR_2, grammarAccess.getLogicalOrExpressionAccess().getSKW_ORORTerminalRuleCall_1_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getRightLogicalAndExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleLogicalAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"at.jku.weiner.c.parser.Parser.LogicalAndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleLogicalAndExpression
entryRuleLogicalAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogicalAndExpressionRule()); }
	 iv_ruleLogicalAndExpression=ruleLogicalAndExpression 
	 { $current=$iv_ruleLogicalAndExpression.current; } 
	 EOF 
;

// Rule LogicalAndExpression
ruleLogicalAndExpression returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getInclusiveOrExpressionParserRuleCall_0()); 
    }
    this_InclusiveOrExpression_0=ruleInclusiveOrExpression
    { 
        $current = $this_InclusiveOrExpression_0.current; 
        afterParserOrEnumRuleCall();
    }



(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getLogicalAndExpressionAccess().getLogicalAndExpressionLeftAction_1_0(),
            $current);
    }
)


this_SKW_ANDAND_2=RULE_SKW_ANDAND
    { 
    newLeafNode(this_SKW_ANDAND_2, grammarAccess.getLogicalAndExpressionAccess().getSKW_ANDANDTerminalRuleCall_1_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getRightInclusiveOrExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleInclusiveOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"at.jku.weiner.c.parser.Parser.InclusiveOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleInclusiveOrExpression
entryRuleInclusiveOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInclusiveOrExpressionRule()); }
	 iv_ruleInclusiveOrExpression=ruleInclusiveOrExpression 
	 { $current=$iv_ruleInclusiveOrExpression.current; } 
	 EOF 
;

// Rule InclusiveOrExpression
ruleInclusiveOrExpression returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInclusiveOrExpressionAccess().getExclusiveOrExpressionParserRuleCall_0()); 
    }
    this_ExclusiveOrExpression_0=ruleExclusiveOrExpression
    { 
        $current = $this_ExclusiveOrExpression_0.current; 
        afterParserOrEnumRuleCall();
    }



(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getInclusiveOrExpressionAccess().getInclusiveOrExpressionLeftAction_1_0(),
            $current);
    }
)


this_SKW_OR_2=RULE_SKW_OR
    { 
    newLeafNode(this_SKW_OR_2, grammarAccess.getInclusiveOrExpressionAccess().getSKW_ORTerminalRuleCall_1_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getInclusiveOrExpressionAccess().getRightExclusiveOrExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleExclusiveOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInclusiveOrExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"at.jku.weiner.c.parser.Parser.ExclusiveOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleExclusiveOrExpression
entryRuleExclusiveOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExclusiveOrExpressionRule()); }
	 iv_ruleExclusiveOrExpression=ruleExclusiveOrExpression 
	 { $current=$iv_ruleExclusiveOrExpression.current; } 
	 EOF 
;

// Rule ExclusiveOrExpression
ruleExclusiveOrExpression returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExclusiveOrExpressionAccess().getAndExpressionParserRuleCall_0()); 
    }
    this_AndExpression_0=ruleAndExpression
    { 
        $current = $this_AndExpression_0.current; 
        afterParserOrEnumRuleCall();
    }



(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExclusiveOrExpressionAccess().getExclusiveOrExpressionLeftAction_1_0(),
            $current);
    }
)


this_SKW_CARET_2=RULE_SKW_CARET
    { 
    newLeafNode(this_SKW_CARET_2, grammarAccess.getExclusiveOrExpressionAccess().getSKW_CARETTerminalRuleCall_1_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getExclusiveOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExclusiveOrExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"at.jku.weiner.c.parser.Parser.AndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	 iv_ruleAndExpression=ruleAndExpression 
	 { $current=$iv_ruleAndExpression.current; } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); 
    }
    this_EqualityExpression_0=ruleEqualityExpression
    { 
        $current = $this_EqualityExpression_0.current; 
        afterParserOrEnumRuleCall();
    }



(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0(),
            $current);
    }
)


this_SKW_AND_2=RULE_SKW_AND
    { 
    newLeafNode(this_SKW_AND_2, grammarAccess.getAndExpressionAccess().getSKW_ANDTerminalRuleCall_1_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleEqualityExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"at.jku.weiner.c.parser.Parser.EqualityExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEqualityExpressionRule()); }
	 iv_ruleEqualityExpression=ruleEqualityExpression 
	 { $current=$iv_ruleEqualityExpression.current; } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
    }
    this_RelationalExpression_0=ruleRelationalExpression
    { 
        $current = $this_RelationalExpression_0.current; 
        afterParserOrEnumRuleCall();
    }



(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftAction_1_0(),
            $current);
    }
)


(
(
(
		lv_op_2_0=RULE_SKW_EQUAL
		{
			newLeafNode(lv_op_2_0, grammarAccess.getEqualityExpressionAccess().getOpSKW_EQUALTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEqualityExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"at.jku.weiner.c.common.Common.SKW_EQUAL");
	    }

)
)


    |
(
(
		lv_op_3_0=RULE_SKW_NOTEQUAL
		{
			newLeafNode(lv_op_3_0, grammarAccess.getEqualityExpressionAccess().getOpSKW_NOTEQUALTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEqualityExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"at.jku.weiner.c.common.Common.SKW_NOTEQUAL");
	    }

)
)

)


(
(
		{ 
	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_4_0=ruleRelationalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_4_0, 
        		"at.jku.weiner.c.parser.Parser.RelationalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationalExpressionRule()); }
	 iv_ruleRelationalExpression=ruleRelationalExpression 
	 { $current=$iv_ruleRelationalExpression.current; } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0()); 
    }
    this_ShiftExpression_0=ruleShiftExpression
    { 
        $current = $this_ShiftExpression_0.current; 
        afterParserOrEnumRuleCall();
    }



(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLeftAction_1_0(),
            $current);
    }
)


(
(
(
		lv_op_2_0=RULE_SKW_LESS
		{
			newLeafNode(lv_op_2_0, grammarAccess.getRelationalExpressionAccess().getOpSKW_LESSTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"at.jku.weiner.c.common.Common.SKW_LESS");
	    }

)
)


    |
(
(
		lv_op_3_0=RULE_SKW_GREATER
		{
			newLeafNode(lv_op_3_0, grammarAccess.getRelationalExpressionAccess().getOpSKW_GREATERTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"at.jku.weiner.c.common.Common.SKW_GREATER");
	    }

)
)


    |
(
(
		lv_op_4_0=RULE_SKW_LESSEQUAL
		{
			newLeafNode(lv_op_4_0, grammarAccess.getRelationalExpressionAccess().getOpSKW_LESSEQUALTerminalRuleCall_1_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_4_0, 
        		"at.jku.weiner.c.common.Common.SKW_LESSEQUAL");
	    }

)
)


    |
(
(
		lv_op_5_0=RULE_SKW_GREATEREQUAL
		{
			newLeafNode(lv_op_5_0, grammarAccess.getRelationalExpressionAccess().getOpSKW_GREATEREQUALTerminalRuleCall_1_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_5_0, 
        		"at.jku.weiner.c.common.Common.SKW_GREATEREQUAL");
	    }

)
)

)


(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightShiftExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_6_0=ruleShiftExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_6_0, 
        		"at.jku.weiner.c.parser.Parser.ShiftExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleShiftExpression
entryRuleShiftExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShiftExpressionRule()); }
	 iv_ruleShiftExpression=ruleShiftExpression 
	 { $current=$iv_ruleShiftExpression.current; } 
	 EOF 
;

// Rule ShiftExpression
ruleShiftExpression returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
    }
    this_AdditiveExpression_0=ruleAdditiveExpression
    { 
        $current = $this_AdditiveExpression_0.current; 
        afterParserOrEnumRuleCall();
    }



(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getShiftExpressionAccess().getShiftExpressionLeftAction_1_0(),
            $current);
    }
)


(
(
(
		lv_op_2_0=RULE_SKW_LEFTSHIFT
		{
			newLeafNode(lv_op_2_0, grammarAccess.getShiftExpressionAccess().getOpSKW_LEFTSHIFTTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShiftExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"at.jku.weiner.c.common.Common.SKW_LEFTSHIFT");
	    }

)
)


    |
(
(
		lv_op_3_0=RULE_SKW_RIGHTSHIFT
		{
			newLeafNode(lv_op_3_0, grammarAccess.getShiftExpressionAccess().getOpSKW_RIGHTSHIFTTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShiftExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"at.jku.weiner.c.common.Common.SKW_RIGHTSHIFT");
	    }

)
)

)


(
(
		{ 
	        newCompositeNode(grammarAccess.getShiftExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_4_0=ruleAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_4_0, 
        		"at.jku.weiner.c.parser.Parser.AdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdditiveExpressionRule()); }
	 iv_ruleAdditiveExpression=ruleAdditiveExpression 
	 { $current=$iv_ruleAdditiveExpression.current; } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
    }
    this_MultiplicativeExpression_0=ruleMultiplicativeExpression
    { 
        $current = $this_MultiplicativeExpression_0.current; 
        afterParserOrEnumRuleCall();
    }



(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftAction_1_0(),
            $current);
    }
)


(
(
(
		lv_op_2_0=RULE_SKW_PLUS
		{
			newLeafNode(lv_op_2_0, grammarAccess.getAdditiveExpressionAccess().getOpSKW_PLUSTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAdditiveExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"at.jku.weiner.c.common.Common.SKW_PLUS");
	    }

)
)


    |
(
(
		lv_op_3_0=RULE_SKW_MINUS
		{
			newLeafNode(lv_op_3_0, grammarAccess.getAdditiveExpressionAccess().getOpSKW_MINUSTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAdditiveExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"at.jku.weiner.c.common.Common.SKW_MINUS");
	    }

)
)

)


(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_4_0=ruleMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_4_0, 
        		"at.jku.weiner.c.parser.Parser.MultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); }
	 iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression 
	 { $current=$iv_ruleMultiplicativeExpression.current; } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getCastExpressionParserRuleCall_0()); 
    }
    this_CastExpression_0=ruleCastExpression
    { 
        $current = $this_CastExpression_0.current; 
        afterParserOrEnumRuleCall();
    }



(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftAction_1_0(),
            $current);
    }
)


(
(
(
		lv_op_2_0=RULE_SKW_STAR
		{
			newLeafNode(lv_op_2_0, grammarAccess.getMultiplicativeExpressionAccess().getOpSKW_STARTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"at.jku.weiner.c.common.Common.SKW_STAR");
	    }

)
)


    |
(
(
		lv_op_3_0=RULE_SKW_DIV
		{
			newLeafNode(lv_op_3_0, grammarAccess.getMultiplicativeExpressionAccess().getOpSKW_DIVTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"at.jku.weiner.c.common.Common.SKW_DIV");
	    }

)
)


    |
(
(
		lv_op_4_0=RULE_SKW_MOD
		{
			newLeafNode(lv_op_4_0, grammarAccess.getMultiplicativeExpressionAccess().getOpSKW_MODTerminalRuleCall_1_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_4_0, 
        		"at.jku.weiner.c.common.Common.SKW_MOD");
	    }

)
)

)


(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRightCastExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_5_0=ruleCastExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"at.jku.weiner.c.parser.Parser.CastExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleCastExpression
entryRuleCastExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCastExpressionRule()); }
	 iv_ruleCastExpression=ruleCastExpression 
	 { $current=$iv_ruleCastExpression.current; } 
	 EOF 
;

// Rule CastExpression
ruleCastExpression returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getCastExpressionAccess().getCastExpressionAction_0_0(),
            $current);
    }
)


this_SKW_LEFTPAREN_1=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_1, grammarAccess.getCastExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_0_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getCastExpressionAccess().getTypeTypeNameParserRuleCall_0_2_0()); 
	    }
		lv_type_2_0=ruleTypeName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCastExpressionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"at.jku.weiner.c.parser.Parser.TypeName");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTPAREN_3=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_3, grammarAccess.getCastExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_0_3()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getCastExpressionAccess().getExprCastExpressionParserRuleCall_0_4_0()); 
	    }
		lv_expr_4_0=ruleCastExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCastExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_4_0, 
        		"at.jku.weiner.c.parser.Parser.CastExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


    |

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCastExpressionAccess().getUnaryExpressionParserRuleCall_1()); 
    }
    this_UnaryExpression_5=ruleUnaryExpression
    { 
        $current = $this_UnaryExpression_5.current; 
        afterParserOrEnumRuleCall();
    }


)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); }
	 iv_ruleUnaryExpression=ruleUnaryExpression 
	 { $current=$iv_ruleUnaryExpression.current; } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPostfixExpressionParserRuleCall_0()); 
    }
    this_PostfixExpression_0=rulePostfixExpression
    { 
        $current = $this_PostfixExpression_0.current; 
        afterParserOrEnumRuleCall();
    }



    |
(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
            $current);
    }
)


(
(
		lv_plusplus_2_0=RULE_SKW_PLUSPLUS
		{
			newLeafNode(lv_plusplus_2_0, grammarAccess.getUnaryExpressionAccess().getPlusplusSKW_PLUSPLUSTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"plusplus",
        		lv_plusplus_2_0, 
        		"at.jku.weiner.c.common.Common.SKW_PLUSPLUS");
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_1_2_0()); 
	    }
		lv_expr_3_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_3_0, 
        		"at.jku.weiner.c.parser.Parser.UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


    |
(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_2_0(),
            $current);
    }
)


(
(
		lv_minusminus_5_0=RULE_SKW_MINUSMINUS
		{
			newLeafNode(lv_minusminus_5_0, grammarAccess.getUnaryExpressionAccess().getMinusminusSKW_MINUSMINUSTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"minusminus",
        		lv_minusminus_5_0, 
        		"at.jku.weiner.c.common.Common.SKW_MINUSMINUS");
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_2_2_0()); 
	    }
		lv_expr_6_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_6_0, 
        		"at.jku.weiner.c.parser.Parser.UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


    |
(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_3_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpUnaryOperatorParserRuleCall_3_1_0()); 
	    }
		lv_op_8_0=ruleUnaryOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_8_0, 
        		"at.jku.weiner.c.parser.Parser.UnaryOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprCastExpressionParserRuleCall_3_2_0()); 
	    }
		lv_expr_9_0=ruleCastExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_9_0, 
        		"at.jku.weiner.c.parser.Parser.CastExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


    |
(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_4_0(),
            $current);
    }
)


(
(
		lv_sizeOf_11_0=RULE_KW_SIZEOF
		{
			newLeafNode(lv_sizeOf_11_0, grammarAccess.getUnaryExpressionAccess().getSizeOfKW_SIZEOFTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sizeOf",
        		lv_sizeOf_11_0, 
        		"at.jku.weiner.c.parser.Parser.KW_SIZEOF");
	    }

)
)


this_SKW_LEFTPAREN_12=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_12, grammarAccess.getUnaryExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_4_2()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getTypeNameTypeNameParserRuleCall_4_3_0()); 
	    }
		lv_typeName_13_0=ruleTypeName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"typeName",
        		lv_typeName_13_0, 
        		"at.jku.weiner.c.parser.Parser.TypeName");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTPAREN_14=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_14, grammarAccess.getUnaryExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_4_4()); 
    }


)


    |
(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_5_0(),
            $current);
    }
)


(
(
		lv_sizeOf_16_0=RULE_KW_SIZEOF
		{
			newLeafNode(lv_sizeOf_16_0, grammarAccess.getUnaryExpressionAccess().getSizeOfKW_SIZEOFTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sizeOf",
        		lv_sizeOf_16_0, 
        		"at.jku.weiner.c.parser.Parser.KW_SIZEOF");
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprUnaryExpressionParserRuleCall_5_2_0()); 
	    }
		lv_expr_17_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_17_0, 
        		"at.jku.weiner.c.parser.Parser.UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


    |
(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_6_0(),
            $current);
    }
)


(
(
(
		lv_alignOf_19_1=RULE_KW_ALIGNOF1
		{
			newLeafNode(lv_alignOf_19_1, grammarAccess.getUnaryExpressionAccess().getAlignOfKW_ALIGNOF1TerminalRuleCall_6_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"alignOf",
        		lv_alignOf_19_1, 
        		"at.jku.weiner.c.parser.Parser.KW_ALIGNOF1");
	    }

    |		lv_alignOf_19_2=RULE_KW_ALIGNOF2
		{
			newLeafNode(lv_alignOf_19_2, grammarAccess.getUnaryExpressionAccess().getAlignOfKW_ALIGNOF2TerminalRuleCall_6_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"alignOf",
        		lv_alignOf_19_2, 
        		"at.jku.weiner.c.parser.Parser.KW_ALIGNOF2");
	    }

    |		lv_alignOf_19_3=RULE_KW_ALIGNOF3
		{
			newLeafNode(lv_alignOf_19_3, grammarAccess.getUnaryExpressionAccess().getAlignOfKW_ALIGNOF3TerminalRuleCall_6_1_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"alignOf",
        		lv_alignOf_19_3, 
        		"at.jku.weiner.c.parser.Parser.KW_ALIGNOF3");
	    }

)

)
)


this_SKW_LEFTPAREN_20=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_20, grammarAccess.getUnaryExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_6_2()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getTypeNameTypeNameParserRuleCall_6_3_0()); 
	    }
		lv_typeName_21_0=ruleTypeName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"typeName",
        		lv_typeName_21_0, 
        		"at.jku.weiner.c.parser.Parser.TypeName");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTPAREN_22=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_22, grammarAccess.getUnaryExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_6_4()); 
    }


)


    |
(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_7_0(),
            $current);
    }
)


(
(
		lv_andand_24_0=RULE_SKW_ANDAND
		{
			newLeafNode(lv_andand_24_0, grammarAccess.getUnaryExpressionAccess().getAndandSKW_ANDANDTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"andand",
        		lv_andand_24_0, 
        		"at.jku.weiner.c.common.Common.SKW_ANDAND");
	    }

)
)


(
(
		lv_id_25_0=RULE_ID
		{
			newLeafNode(lv_id_25_0, grammarAccess.getUnaryExpressionAccess().getIdIDTerminalRuleCall_7_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_25_0, 
        		"at.jku.weiner.c.common.Common.ID");
	    }

)
)

)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleUnaryOperator
entryRuleUnaryOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnaryOperatorRule()); } 
	 iv_ruleUnaryOperator=ruleUnaryOperator 
	 { $current=$iv_ruleUnaryOperator.current.getText(); }  
	 EOF 
;

// Rule UnaryOperator
ruleUnaryOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_SKW_AND_0=RULE_SKW_AND    {
		$current.merge(this_SKW_AND_0);
    }

    { 
    newLeafNode(this_SKW_AND_0, grammarAccess.getUnaryOperatorAccess().getSKW_ANDTerminalRuleCall_0()); 
    }

    |    this_SKW_STAR_1=RULE_SKW_STAR    {
		$current.merge(this_SKW_STAR_1);
    }

    { 
    newLeafNode(this_SKW_STAR_1, grammarAccess.getUnaryOperatorAccess().getSKW_STARTerminalRuleCall_1()); 
    }

    |    this_SKW_PLUS_2=RULE_SKW_PLUS    {
		$current.merge(this_SKW_PLUS_2);
    }

    { 
    newLeafNode(this_SKW_PLUS_2, grammarAccess.getUnaryOperatorAccess().getSKW_PLUSTerminalRuleCall_2()); 
    }

    |    this_SKW_MINUS_3=RULE_SKW_MINUS    {
		$current.merge(this_SKW_MINUS_3);
    }

    { 
    newLeafNode(this_SKW_MINUS_3, grammarAccess.getUnaryOperatorAccess().getSKW_MINUSTerminalRuleCall_3()); 
    }

    |    this_SKW_TILDE_4=RULE_SKW_TILDE    {
		$current.merge(this_SKW_TILDE_4);
    }

    { 
    newLeafNode(this_SKW_TILDE_4, grammarAccess.getUnaryOperatorAccess().getSKW_TILDETerminalRuleCall_4()); 
    }

    |    this_SKW_NOT_5=RULE_SKW_NOT    {
		$current.merge(this_SKW_NOT_5);
    }

    { 
    newLeafNode(this_SKW_NOT_5, grammarAccess.getUnaryOperatorAccess().getSKW_NOTTerminalRuleCall_5()); 
    }
)
    ;





// Entry rule entryRulePostfixExpression
entryRulePostfixExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPostfixExpressionRule()); }
	 iv_rulePostfixExpression=rulePostfixExpression 
	 { $current=$iv_rulePostfixExpression.current; } 
	 EOF 
;

// Rule PostfixExpression
rulePostfixExpression returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPostfixExpressionAccess().getPostfixExpressionAction_0_0_0(),
            $current);
    }
)


(
(
(
		lv_ext_1_0=RULE_KW_EXTENSION
		{
			newLeafNode(lv_ext_1_0, grammarAccess.getPostfixExpressionAccess().getExtKW_EXTENSIONTerminalRuleCall_0_0_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPostfixExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ext",
        		true, 
        		"at.jku.weiner.c.parser.Parser.KW_EXTENSION");
	    }

)
)?


this_SKW_LEFTPAREN_2=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_2, grammarAccess.getPostfixExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_0_0_1_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixExpressionAccess().getTypeNameTypeNameParserRuleCall_0_0_1_2_0()); 
	    }
		lv_typeName_3_0=ruleTypeName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
	        }
       		set(
       			$current, 
       			"typeName",
        		lv_typeName_3_0, 
        		"at.jku.weiner.c.parser.Parser.TypeName");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTPAREN_4=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_4, grammarAccess.getPostfixExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_0_0_1_3()); 
    }



this_SKW_LEFTBRACE_5=RULE_SKW_LEFTBRACE
    { 
    newLeafNode(this_SKW_LEFTBRACE_5, grammarAccess.getPostfixExpressionAccess().getSKW_LEFTBRACETerminalRuleCall_0_0_1_4()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixExpressionAccess().getInitializerListInitializerListParserRuleCall_0_0_1_5_0()); 
	    }
		lv_initializerList_6_0=ruleInitializerList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
	        }
       		set(
       			$current, 
       			"initializerList",
        		lv_initializerList_6_0, 
        		"at.jku.weiner.c.parser.Parser.InitializerList");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
		lv_comma_7_0=RULE_SKW_COMMA
		{
			newLeafNode(lv_comma_7_0, grammarAccess.getPostfixExpressionAccess().getCommaSKW_COMMATerminalRuleCall_0_0_1_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPostfixExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comma",
        		true, 
        		"at.jku.weiner.c.common.Common.SKW_COMMA");
	    }

)
)?


this_SKW_RIGHTBRACE_8=RULE_SKW_RIGHTBRACE
    { 
    newLeafNode(this_SKW_RIGHTBRACE_8, grammarAccess.getPostfixExpressionAccess().getSKW_RIGHTBRACETerminalRuleCall_0_0_1_7()); 
    }


)

)


    |

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPostfixExpressionAccess().getPrimaryExpressionParserRuleCall_0_1()); 
    }
    this_PrimaryExpression_9=rulePrimaryExpression
    { 
        $current = $this_PrimaryExpression_9.current; 
        afterParserOrEnumRuleCall();
    }


)


(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPostfixExpressionAccess().getPostfixExpressionExprAction_1_0(),
            $current);
    }
)


(
(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixExpressionAccess().getSuffixPostfixExpressionSuffixArrayParserRuleCall_1_1_0_0()); 
	    }
		lv_suffix_11_0=rulePostfixExpressionSuffixArray		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
	        }
       		set(
       			$current, 
       			"suffix",
        		lv_suffix_11_0, 
        		"at.jku.weiner.c.parser.Parser.PostfixExpressionSuffixArray");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixExpressionAccess().getSuffixPostfixExpressionSuffixArgumentParserRuleCall_1_1_1_0()); 
	    }
		lv_suffix_12_0=rulePostfixExpressionSuffixArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
	        }
       		set(
       			$current, 
       			"suffix",
        		lv_suffix_12_0, 
        		"at.jku.weiner.c.parser.Parser.PostfixExpressionSuffixArgument");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixExpressionAccess().getSuffixPostfixExpressionSuffixDotParserRuleCall_1_1_2_0()); 
	    }
		lv_suffix_13_0=rulePostfixExpressionSuffixDot		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
	        }
       		set(
       			$current, 
       			"suffix",
        		lv_suffix_13_0, 
        		"at.jku.weiner.c.parser.Parser.PostfixExpressionSuffixDot");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixExpressionAccess().getSuffixPostfixExpressionSuffixArrowParserRuleCall_1_1_3_0()); 
	    }
		lv_suffix_14_0=rulePostfixExpressionSuffixArrow		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
	        }
       		set(
       			$current, 
       			"suffix",
        		lv_suffix_14_0, 
        		"at.jku.weiner.c.parser.Parser.PostfixExpressionSuffixArrow");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixExpressionAccess().getSuffixPostfixExpressionSuffixPlusPlusParserRuleCall_1_1_4_0()); 
	    }
		lv_suffix_15_0=rulePostfixExpressionSuffixPlusPlus		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
	        }
       		set(
       			$current, 
       			"suffix",
        		lv_suffix_15_0, 
        		"at.jku.weiner.c.parser.Parser.PostfixExpressionSuffixPlusPlus");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixExpressionAccess().getSuffixPostfixExpressionSuffixMinusMinusParserRuleCall_1_1_5_0()); 
	    }
		lv_suffix_16_0=rulePostfixExpressionSuffixMinusMinus		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
	        }
       		set(
       			$current, 
       			"suffix",
        		lv_suffix_16_0, 
        		"at.jku.weiner.c.parser.Parser.PostfixExpressionSuffixMinusMinus");
	        afterParserOrEnumRuleCall();
	    }

)
)

)

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRulePostfixExpressionSuffixArray
entryRulePostfixExpressionSuffixArray returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPostfixExpressionSuffixArrayRule()); }
	 iv_rulePostfixExpressionSuffixArray=rulePostfixExpressionSuffixArray 
	 { $current=$iv_rulePostfixExpressionSuffixArray.current; } 
	 EOF 
;

// Rule PostfixExpressionSuffixArray
rulePostfixExpressionSuffixArray returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPostfixExpressionSuffixArrayAccess().getPostfixExpressionSuffixArrayAction_0(),
            $current);
    }
)


this_SKW_LEFTBRACKET_1=RULE_SKW_LEFTBRACKET
    { 
    newLeafNode(this_SKW_LEFTBRACKET_1, grammarAccess.getPostfixExpressionSuffixArrayAccess().getSKW_LEFTBRACKETTerminalRuleCall_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixExpressionSuffixArrayAccess().getArrayExprExpressionParserRuleCall_2_0()); 
	    }
		lv_arrayExpr_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixExpressionSuffixArrayRule());
	        }
       		set(
       			$current, 
       			"arrayExpr",
        		lv_arrayExpr_2_0, 
        		"at.jku.weiner.c.parser.Parser.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTBRACKET_3=RULE_SKW_RIGHTBRACKET
    { 
    newLeafNode(this_SKW_RIGHTBRACKET_3, grammarAccess.getPostfixExpressionSuffixArrayAccess().getSKW_RIGHTBRACKETTerminalRuleCall_3()); 
    }


)


;
finally {

	/*no after found*/

}





// Entry rule entryRulePostfixExpressionSuffixArgument
entryRulePostfixExpressionSuffixArgument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPostfixExpressionSuffixArgumentRule()); }
	 iv_rulePostfixExpressionSuffixArgument=rulePostfixExpressionSuffixArgument 
	 { $current=$iv_rulePostfixExpressionSuffixArgument.current; } 
	 EOF 
;

// Rule PostfixExpressionSuffixArgument
rulePostfixExpressionSuffixArgument returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPostfixExpressionSuffixArgumentAccess().getPostfixExpressionSuffixArgumentAction_0(),
            $current);
    }
)


this_SKW_LEFTPAREN_1=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_1, grammarAccess.getPostfixExpressionSuffixArgumentAccess().getSKW_LEFTPARENTerminalRuleCall_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixExpressionSuffixArgumentAccess().getArgumentExpressionListArgumentExpressionListParserRuleCall_2_0()); 
	    }
		lv_argumentExpressionList_2_0=ruleArgumentExpressionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixExpressionSuffixArgumentRule());
	        }
       		set(
       			$current, 
       			"argumentExpressionList",
        		lv_argumentExpressionList_2_0, 
        		"at.jku.weiner.c.parser.Parser.ArgumentExpressionList");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_SKW_RIGHTPAREN_3=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_3, grammarAccess.getPostfixExpressionSuffixArgumentAccess().getSKW_RIGHTPARENTerminalRuleCall_3()); 
    }


)


;
finally {

	/*no after found*/

}





// Entry rule entryRulePostfixExpressionSuffixDot
entryRulePostfixExpressionSuffixDot returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPostfixExpressionSuffixDotRule()); }
	 iv_rulePostfixExpressionSuffixDot=rulePostfixExpressionSuffixDot 
	 { $current=$iv_rulePostfixExpressionSuffixDot.current; } 
	 EOF 
;

// Rule PostfixExpressionSuffixDot
rulePostfixExpressionSuffixDot returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPostfixExpressionSuffixDotAccess().getPostfixExpressionSuffixDotAction_0(),
            $current);
    }
)


this_SKW_DOT_1=RULE_SKW_DOT
    { 
    newLeafNode(this_SKW_DOT_1, grammarAccess.getPostfixExpressionSuffixDotAccess().getSKW_DOTTerminalRuleCall_1()); 
    }



(
(
		lv_id_2_0=RULE_ID
		{
			newLeafNode(lv_id_2_0, grammarAccess.getPostfixExpressionSuffixDotAccess().getIdIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPostfixExpressionSuffixDotRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"at.jku.weiner.c.common.Common.ID");
	    }

)
)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRulePostfixExpressionSuffixArrow
entryRulePostfixExpressionSuffixArrow returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPostfixExpressionSuffixArrowRule()); }
	 iv_rulePostfixExpressionSuffixArrow=rulePostfixExpressionSuffixArrow 
	 { $current=$iv_rulePostfixExpressionSuffixArrow.current; } 
	 EOF 
;

// Rule PostfixExpressionSuffixArrow
rulePostfixExpressionSuffixArrow returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPostfixExpressionSuffixArrowAccess().getPostfixExpressionSuffixArrowAction_0(),
            $current);
    }
)


this_ARROW_1=RULE_ARROW
    { 
    newLeafNode(this_ARROW_1, grammarAccess.getPostfixExpressionSuffixArrowAccess().getARROWTerminalRuleCall_1()); 
    }



(
(
		lv_id_2_0=RULE_ID
		{
			newLeafNode(lv_id_2_0, grammarAccess.getPostfixExpressionSuffixArrowAccess().getIdIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPostfixExpressionSuffixArrowRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"at.jku.weiner.c.common.Common.ID");
	    }

)
)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRulePostfixExpressionSuffixPlusPlus
entryRulePostfixExpressionSuffixPlusPlus returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPostfixExpressionSuffixPlusPlusRule()); }
	 iv_rulePostfixExpressionSuffixPlusPlus=rulePostfixExpressionSuffixPlusPlus 
	 { $current=$iv_rulePostfixExpressionSuffixPlusPlus.current; } 
	 EOF 
;

// Rule PostfixExpressionSuffixPlusPlus
rulePostfixExpressionSuffixPlusPlus returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPostfixExpressionSuffixPlusPlusAccess().getPostfixExpressionSuffixPlusPlusAction_0(),
            $current);
    }
)


this_SKW_PLUSPLUS_1=RULE_SKW_PLUSPLUS
    { 
    newLeafNode(this_SKW_PLUSPLUS_1, grammarAccess.getPostfixExpressionSuffixPlusPlusAccess().getSKW_PLUSPLUSTerminalRuleCall_1()); 
    }


)


;
finally {

	/*no after found*/

}





// Entry rule entryRulePostfixExpressionSuffixMinusMinus
entryRulePostfixExpressionSuffixMinusMinus returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPostfixExpressionSuffixMinusMinusRule()); }
	 iv_rulePostfixExpressionSuffixMinusMinus=rulePostfixExpressionSuffixMinusMinus 
	 { $current=$iv_rulePostfixExpressionSuffixMinusMinus.current; } 
	 EOF 
;

// Rule PostfixExpressionSuffixMinusMinus
rulePostfixExpressionSuffixMinusMinus returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPostfixExpressionSuffixMinusMinusAccess().getPostfixExpressionSuffixMinusMinusAction_0(),
            $current);
    }
)


this_SKW_MINUSMINUS_1=RULE_SKW_MINUSMINUS
    { 
    newLeafNode(this_SKW_MINUSMINUS_1, grammarAccess.getPostfixExpressionSuffixMinusMinusAccess().getSKW_MINUSMINUSTerminalRuleCall_1()); 
    }


)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleArgumentExpressionList
entryRuleArgumentExpressionList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgumentExpressionListRule()); }
	 iv_ruleArgumentExpressionList=ruleArgumentExpressionList 
	 { $current=$iv_ruleArgumentExpressionList.current; } 
	 EOF 
;

// Rule ArgumentExpressionList
ruleArgumentExpressionList returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentExpressionListAccess().getExprAssignmentExpressionParserRuleCall_0_0()); 
	    }
		lv_expr_0_0=ruleAssignmentExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentExpressionListRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_0_0, 
        		"at.jku.weiner.c.parser.Parser.AssignmentExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_SKW_COMMA_1=RULE_SKW_COMMA
    { 
    newLeafNode(this_SKW_COMMA_1, grammarAccess.getArgumentExpressionListAccess().getSKW_COMMATerminalRuleCall_1_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentExpressionListAccess().getExprAssignmentExpressionParserRuleCall_1_1_0()); 
	    }
		lv_expr_2_0=ruleAssignmentExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentExpressionListRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_2_0, 
        		"at.jku.weiner.c.parser.Parser.AssignmentExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;
finally {

	/*no after found*/

}





// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	 iv_rulePrimaryExpression=rulePrimaryExpression 
	 { $current=$iv_rulePrimaryExpression.current; } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_0(),
            $current);
    }
)


(
(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getPrimaryExpressionAccess().getIdIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"at.jku.weiner.c.common.Common.ID");
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstConstant2ParserRuleCall_1_1_0()); 
	    }
		lv_const_2_0=ruleConstant2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"const",
        		lv_const_2_0, 
        		"at.jku.weiner.c.common.Common.Constant2");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		lv_string_3_0=RULE_STRING_LITERAL
		{
			newLeafNode(lv_string_3_0, grammarAccess.getPrimaryExpressionAccess().getStringSTRING_LITERALTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"string",
        		lv_string_3_0, 
        		"at.jku.weiner.c.common.Common.STRING_LITERAL");
	    }

)
)+


    |
(
(
(
		lv_parentheses_4_0=RULE_SKW_LEFTPAREN
		{
			newLeafNode(lv_parentheses_4_0, grammarAccess.getPrimaryExpressionAccess().getParenthesesSKW_LEFTPARENTerminalRuleCall_1_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"parentheses",
        		true, 
        		"at.jku.weiner.c.common.Common.SKW_LEFTPAREN");
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getExprExpressionParserRuleCall_1_3_1_0()); 
	    }
		lv_expr_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_5_0, 
        		"at.jku.weiner.c.parser.Parser.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTPAREN_6=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_6, grammarAccess.getPrimaryExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_1_3_2()); 
    }


)


    |
(
(
(
		lv_ext_7_0=RULE_KW_EXTENSION
		{
			newLeafNode(lv_ext_7_0, grammarAccess.getPrimaryExpressionAccess().getExtKW_EXTENSIONTerminalRuleCall_1_4_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ext",
        		true, 
        		"at.jku.weiner.c.parser.Parser.KW_EXTENSION");
	    }

)
)?


this_SKW_LEFTPAREN_8=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_8, grammarAccess.getPrimaryExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_1_4_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getCompoundStmtCompoundStatementParserRuleCall_1_4_2_0()); 
	    }
		lv_compoundStmt_9_0=ruleCompoundStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"compoundStmt",
        		lv_compoundStmt_9_0, 
        		"at.jku.weiner.c.parser.Parser.CompoundStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTPAREN_10=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_10, grammarAccess.getPrimaryExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_1_4_3()); 
    }


)


    |
(
(
(
		lv_builtin_offsetof_11_0=RULE_KW_BUILTIN_OFFSETOF
		{
			newLeafNode(lv_builtin_offsetof_11_0, grammarAccess.getPrimaryExpressionAccess().getBuiltin_offsetofKW_BUILTIN_OFFSETOFTerminalRuleCall_1_5_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"builtin_offsetof",
        		true, 
        		"at.jku.weiner.c.parser.Parser.KW_BUILTIN_OFFSETOF");
	    }

)
)


this_SKW_LEFTPAREN_12=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_12, grammarAccess.getPrimaryExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_1_5_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeNameTypeNameParserRuleCall_1_5_2_0()); 
	    }
		lv_typeName_13_0=ruleTypeName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"typeName",
        		lv_typeName_13_0, 
        		"at.jku.weiner.c.parser.Parser.TypeName");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_COMMA_14=RULE_SKW_COMMA
    { 
    newLeafNode(this_SKW_COMMA_14, grammarAccess.getPrimaryExpressionAccess().getSKW_COMMATerminalRuleCall_1_5_3()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getExprUnaryExpressionParserRuleCall_1_5_4_0()); 
	    }
		lv_expr_15_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_15_0, 
        		"at.jku.weiner.c.parser.Parser.UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTPAREN_16=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_16, grammarAccess.getPrimaryExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_1_5_5()); 
    }


)


    |
(
(
(
		lv_builtin_typescompatiblep_17_0=RULE_KW_BUILTIN_TYPESCOMPATIBLEP
		{
			newLeafNode(lv_builtin_typescompatiblep_17_0, grammarAccess.getPrimaryExpressionAccess().getBuiltin_typescompatiblepKW_BUILTIN_TYPESCOMPATIBLEPTerminalRuleCall_1_6_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"builtin_typescompatiblep",
        		true, 
        		"at.jku.weiner.c.parser.Parser.KW_BUILTIN_TYPESCOMPATIBLEP");
	    }

)
)


this_SKW_LEFTPAREN_18=RULE_SKW_LEFTPAREN
    { 
    newLeafNode(this_SKW_LEFTPAREN_18, grammarAccess.getPrimaryExpressionAccess().getSKW_LEFTPARENTerminalRuleCall_1_6_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeNameTypeNameParserRuleCall_1_6_2_0()); 
	    }
		lv_typeName_19_0=ruleTypeName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"typeName",
        		lv_typeName_19_0, 
        		"at.jku.weiner.c.parser.Parser.TypeName");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_COMMA_20=RULE_SKW_COMMA
    { 
    newLeafNode(this_SKW_COMMA_20, grammarAccess.getPrimaryExpressionAccess().getSKW_COMMATerminalRuleCall_1_6_3()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeName2TypeNameParserRuleCall_1_6_4_0()); 
	    }
		lv_typeName2_21_0=ruleTypeName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"typeName2",
        		lv_typeName2_21_0, 
        		"at.jku.weiner.c.parser.Parser.TypeName");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_SKW_RIGHTPAREN_22=RULE_SKW_RIGHTPAREN
    { 
    newLeafNode(this_SKW_RIGHTPAREN_22, grammarAccess.getPrimaryExpressionAccess().getSKW_RIGHTPARENTerminalRuleCall_1_6_5()); 
    }


)

)

)


;
finally {

	/*no after found*/

}





// Entry rule entryRuleConstantExpression
entryRuleConstantExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantExpressionRule()); }
	 iv_ruleConstantExpression=ruleConstantExpression 
	 { $current=$iv_ruleConstantExpression.current; } 
	 EOF 
;

// Rule ConstantExpression
ruleConstantExpression returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:


	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstantExpressionAccess().getConditionalExpressionParserRuleCall()); 
    }
    this_ConditionalExpression_0=ruleConditionalExpression
    { 
        $current = $this_ConditionalExpression_0.current; 
        afterParserOrEnumRuleCall();
    }



;
finally {

	/*no after found*/

}





// Entry rule entryRuleParserKeywords
entryRuleParserKeywords returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getParserKeywordsRule()); } 
	 iv_ruleParserKeywords=ruleParserKeywords 
	 { $current=$iv_ruleParserKeywords.current.getText(); }  
	 EOF 
;

// Rule ParserKeywords
ruleParserKeywords returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_KW_ATOMIC_0=RULE_KW_ATOMIC    {
		$current.merge(this_KW_ATOMIC_0);
    }

    { 
    newLeafNode(this_KW_ATOMIC_0, grammarAccess.getParserKeywordsAccess().getKW_ATOMICTerminalRuleCall_0()); 
    }

    |    this_KW_AUTO_1=RULE_KW_AUTO    {
		$current.merge(this_KW_AUTO_1);
    }

    { 
    newLeafNode(this_KW_AUTO_1, grammarAccess.getParserKeywordsAccess().getKW_AUTOTerminalRuleCall_1()); 
    }

    |    this_KW_BOOL_2=RULE_KW_BOOL    {
		$current.merge(this_KW_BOOL_2);
    }

    { 
    newLeafNode(this_KW_BOOL_2, grammarAccess.getParserKeywordsAccess().getKW_BOOLTerminalRuleCall_2()); 
    }

    |    this_KW_CONST_3=RULE_KW_CONST    {
		$current.merge(this_KW_CONST_3);
    }

    { 
    newLeafNode(this_KW_CONST_3, grammarAccess.getParserKeywordsAccess().getKW_CONSTTerminalRuleCall_3()); 
    }

    |    this_KW_CHAR_4=RULE_KW_CHAR    {
		$current.merge(this_KW_CHAR_4);
    }

    { 
    newLeafNode(this_KW_CHAR_4, grammarAccess.getParserKeywordsAccess().getKW_CHARTerminalRuleCall_4()); 
    }

    |    this_KW_DOUBLE_5=RULE_KW_DOUBLE    {
		$current.merge(this_KW_DOUBLE_5);
    }

    { 
    newLeafNode(this_KW_DOUBLE_5, grammarAccess.getParserKeywordsAccess().getKW_DOUBLETerminalRuleCall_5()); 
    }

    |    this_KW_EXTERN_6=RULE_KW_EXTERN    {
		$current.merge(this_KW_EXTERN_6);
    }

    { 
    newLeafNode(this_KW_EXTERN_6, grammarAccess.getParserKeywordsAccess().getKW_EXTERNTerminalRuleCall_6()); 
    }

    |    this_KW_FLOAT_7=RULE_KW_FLOAT    {
		$current.merge(this_KW_FLOAT_7);
    }

    { 
    newLeafNode(this_KW_FLOAT_7, grammarAccess.getParserKeywordsAccess().getKW_FLOATTerminalRuleCall_7()); 
    }

    |    this_KW_INT_8=RULE_KW_INT    {
		$current.merge(this_KW_INT_8);
    }

    { 
    newLeafNode(this_KW_INT_8, grammarAccess.getParserKeywordsAccess().getKW_INTTerminalRuleCall_8()); 
    }

    |    this_KW_LONG_9=RULE_KW_LONG    {
		$current.merge(this_KW_LONG_9);
    }

    { 
    newLeafNode(this_KW_LONG_9, grammarAccess.getParserKeywordsAccess().getKW_LONGTerminalRuleCall_9()); 
    }

    |    this_KW_RESTRICT_10=RULE_KW_RESTRICT    {
		$current.merge(this_KW_RESTRICT_10);
    }

    { 
    newLeafNode(this_KW_RESTRICT_10, grammarAccess.getParserKeywordsAccess().getKW_RESTRICTTerminalRuleCall_10()); 
    }

    |    this_KW_SHORT_11=RULE_KW_SHORT    {
		$current.merge(this_KW_SHORT_11);
    }

    { 
    newLeafNode(this_KW_SHORT_11, grammarAccess.getParserKeywordsAccess().getKW_SHORTTerminalRuleCall_11()); 
    }

    |    this_KW_SIGNED1_12=RULE_KW_SIGNED1    {
		$current.merge(this_KW_SIGNED1_12);
    }

    { 
    newLeafNode(this_KW_SIGNED1_12, grammarAccess.getParserKeywordsAccess().getKW_SIGNED1TerminalRuleCall_12()); 
    }

    |    this_KW_SIGNED2_13=RULE_KW_SIGNED2    {
		$current.merge(this_KW_SIGNED2_13);
    }

    { 
    newLeafNode(this_KW_SIGNED2_13, grammarAccess.getParserKeywordsAccess().getKW_SIGNED2TerminalRuleCall_13()); 
    }

    |    this_KW_SIGNED3_14=RULE_KW_SIGNED3    {
		$current.merge(this_KW_SIGNED3_14);
    }

    { 
    newLeafNode(this_KW_SIGNED3_14, grammarAccess.getParserKeywordsAccess().getKW_SIGNED3TerminalRuleCall_14()); 
    }

    |    this_KW_VOID_15=RULE_KW_VOID    {
		$current.merge(this_KW_VOID_15);
    }

    { 
    newLeafNode(this_KW_VOID_15, grammarAccess.getParserKeywordsAccess().getKW_VOIDTerminalRuleCall_15()); 
    }

    |    this_KW_UNSIGNED_16=RULE_KW_UNSIGNED    {
		$current.merge(this_KW_UNSIGNED_16);
    }

    { 
    newLeafNode(this_KW_UNSIGNED_16, grammarAccess.getParserKeywordsAccess().getKW_UNSIGNEDTerminalRuleCall_16()); 
    }
)
    ;





// Entry rule entryRuleConstant1
entryRuleConstant1 returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstant1Rule()); } 
	 iv_ruleConstant1=ruleConstant1 
	 { $current=$iv_ruleConstant1.current.getText(); }  
	 EOF 
;

// Rule Constant1
ruleConstant1 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_HEX_LITERAL_0=RULE_HEX_LITERAL    {
		$current.merge(this_HEX_LITERAL_0);
    }

    { 
    newLeafNode(this_HEX_LITERAL_0, grammarAccess.getConstant1Access().getHEX_LITERALTerminalRuleCall_0()); 
    }

    |    this_OCTAL_LITERAL_1=RULE_OCTAL_LITERAL    {
		$current.merge(this_OCTAL_LITERAL_1);
    }

    { 
    newLeafNode(this_OCTAL_LITERAL_1, grammarAccess.getConstant1Access().getOCTAL_LITERALTerminalRuleCall_1()); 
    }

    |    this_DECIMAL_LITERAL_2=RULE_DECIMAL_LITERAL    {
		$current.merge(this_DECIMAL_LITERAL_2);
    }

    { 
    newLeafNode(this_DECIMAL_LITERAL_2, grammarAccess.getConstant1Access().getDECIMAL_LITERALTerminalRuleCall_2()); 
    }

    |    this_CHAR_LITERAL_3=RULE_CHAR_LITERAL    {
		$current.merge(this_CHAR_LITERAL_3);
    }

    { 
    newLeafNode(this_CHAR_LITERAL_3, grammarAccess.getConstant1Access().getCHAR_LITERALTerminalRuleCall_3()); 
    }

    |    this_STRING_LITERAL_4=RULE_STRING_LITERAL    {
		$current.merge(this_STRING_LITERAL_4);
    }

    { 
    newLeafNode(this_STRING_LITERAL_4, grammarAccess.getConstant1Access().getSTRING_LITERALTerminalRuleCall_4()); 
    }

    |    this_FLOAT_LITERAL_5=RULE_FLOAT_LITERAL    {
		$current.merge(this_FLOAT_LITERAL_5);
    }

    { 
    newLeafNode(this_FLOAT_LITERAL_5, grammarAccess.getConstant1Access().getFLOAT_LITERALTerminalRuleCall_5()); 
    }

    |    this_BIN_LITERAL_6=RULE_BIN_LITERAL    {
		$current.merge(this_BIN_LITERAL_6);
    }

    { 
    newLeafNode(this_BIN_LITERAL_6, grammarAccess.getConstant1Access().getBIN_LITERALTerminalRuleCall_6()); 
    }
)
    ;





// Entry rule entryRuleConstant2
entryRuleConstant2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstant2Rule()); }
	 iv_ruleConstant2=ruleConstant2 
	 { $current=$iv_ruleConstant2.current; } 
	 EOF 
;

// Rule Constant2
ruleConstant2 returns [EObject current=null] 
    @init { enterRule();
   		/*no init found*/
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getConstant2Access().getConstant2Action_0(),
            $current);
    }
)


(
(
(
		lv_hex_1_0=RULE_HEX_LITERAL
		{
			newLeafNode(lv_hex_1_0, grammarAccess.getConstant2Access().getHexHEX_LITERALTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstant2Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"hex",
        		lv_hex_1_0, 
        		"at.jku.weiner.c.common.Common.HEX_LITERAL");
	    }

)
)


    |
(
(
		lv_oct_2_0=RULE_OCTAL_LITERAL
		{
			newLeafNode(lv_oct_2_0, grammarAccess.getConstant2Access().getOctOCTAL_LITERALTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstant2Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"oct",
        		lv_oct_2_0, 
        		"at.jku.weiner.c.common.Common.OCTAL_LITERAL");
	    }

)
)


    |
(
(
		lv_dec_3_0=RULE_DECIMAL_LITERAL
		{
			newLeafNode(lv_dec_3_0, grammarAccess.getConstant2Access().getDecDECIMAL_LITERALTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstant2Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dec",
        		lv_dec_3_0, 
        		"at.jku.weiner.c.common.Common.DECIMAL_LITERAL");
	    }

)
)


    |
(
(
		lv_ch_4_0=RULE_CHAR_LITERAL
		{
			newLeafNode(lv_ch_4_0, grammarAccess.getConstant2Access().getChCHAR_LITERALTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstant2Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ch",
        		lv_ch_4_0, 
        		"at.jku.weiner.c.common.Common.CHAR_LITERAL");
	    }

)
)


    |
(
(
		lv_float_5_0=RULE_FLOAT_LITERAL
		{
			newLeafNode(lv_float_5_0, grammarAccess.getConstant2Access().getFloatFLOAT_LITERALTerminalRuleCall_1_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstant2Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"float",
        		lv_float_5_0, 
        		"at.jku.weiner.c.common.Common.FLOAT_LITERAL");
	    }

)
)


    |
(
(
		lv_bin_6_0=RULE_BIN_LITERAL
		{
			newLeafNode(lv_bin_6_0, grammarAccess.getConstant2Access().getBinBIN_LITERALTerminalRuleCall_1_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstant2Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"bin",
        		lv_bin_6_0, 
        		"at.jku.weiner.c.common.Common.BIN_LITERAL");
	    }

)
)

)

)


;
finally {

	/*no after found*/

}







// Entry rule entryRuleEllipsis
entryRuleEllipsis returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEllipsisRule()); } 
	 iv_ruleEllipsis=ruleEllipsis 
	 { $current=$iv_ruleEllipsis.current.getText(); }  
	 EOF 
;

// Rule Ellipsis
ruleEllipsis returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_SKW_DOT_0=RULE_SKW_DOT    {
		$current.merge(this_SKW_DOT_0);
    }

    { 
    newLeafNode(this_SKW_DOT_0, grammarAccess.getEllipsisAccess().getSKW_DOTTerminalRuleCall_0()); 
    }
    this_SKW_DOT_1=RULE_SKW_DOT    {
		$current.merge(this_SKW_DOT_1);
    }

    { 
    newLeafNode(this_SKW_DOT_1, grammarAccess.getEllipsisAccess().getSKW_DOTTerminalRuleCall_1()); 
    }
    this_SKW_DOT_2=RULE_SKW_DOT    {
		$current.merge(this_SKW_DOT_2);
    }

    { 
    newLeafNode(this_SKW_DOT_2, grammarAccess.getEllipsisAccess().getSKW_DOTTerminalRuleCall_2()); 
    }
)
    ;





RULE_KW_ATOMIC : RULE_SKW_UNDERSCORE 'Atomic';

RULE_KW_ATTRIBUTE2 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE 'attribute';

RULE_KW_ATTRIBUTE3 : RULE_KW_ATTRIBUTE2 RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE;

RULE_KW_AUTO : 'auto';

RULE_KW_ALIGNAS : RULE_SKW_UNDERSCORE 'Alignas';

RULE_KW_ALIGNOF1 : 'alignof';

RULE_KW_ALIGNOF2 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE RULE_KW_ALIGNOF1;

RULE_KW_ALIGNOF3 : RULE_KW_ALIGNOF2 RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE;

RULE_KW_ASM1 : 'asm';

RULE_KW_ASM2 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE RULE_KW_ASM1;

RULE_KW_ASM3 : RULE_KW_ASM2 RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE;

RULE_KW_BOOL : RULE_SKW_UNDERSCORE 'Bool';

RULE_KW_BREAK : 'break';

RULE_KW_BUILTIN_VA_LIST : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE 'builtin_va_list';

RULE_KW_BUILTIN_OFFSETOF : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE 'builtin_offsetof';

RULE_KW_BUILTIN_TYPESCOMPATIBLEP : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE 'builtin_types_compatible_p';

RULE_KW_CASE : 'case';

RULE_KW_CHAR : 'char';

RULE_KW_COMPLEX : RULE_SKW_UNDERSCORE 'Complex';

RULE_KW_CONST : 'const';

RULE_KW_CONTINUE : 'continue';

RULE_KW_DEFAULT : 'default';

RULE_KW_DO : 'do';

RULE_KW_DOUBLE : 'double';

RULE_KW_ELSE : 'else';

RULE_KW_EXTENSION : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE 'extension' RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE;

RULE_KW_ENUM : 'enum';

RULE_KW_EXTERN : 'extern';

RULE_KW_FLOAT : 'float';

RULE_KW_FOR : 'for';

RULE_KW_GENERIC : RULE_SKW_UNDERSCORE 'Generic';

RULE_KW_GOTO : 'goto';

RULE_KW_IF : 'if';

RULE_KW_IMAGINARY : RULE_SKW_UNDERSCORE 'Imaginary';

RULE_KW_INLINE1 : 'inline';

RULE_KW_INLINE2 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE RULE_KW_INLINE1;

RULE_KW_INLINE3 : RULE_KW_INLINE2 RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE;

RULE_KW_INT : 'int';

RULE_KW_INT128_3 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE 'int128';

RULE_KW_LABEL3 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE 'label' RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE;

RULE_KW_LONG : 'long';

RULE_KW_M128 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE 'm128';

RULE_KW_M128D : RULE_KW_M128 'd';

RULE_KW_M128I : RULE_KW_M128 'i';

RULE_KW_NORETURN : RULE_SKW_UNDERSCORE 'Noreturn';

RULE_KW_PRAGMA : 'pragma';

RULE_KW_REGISTER : 'register';

RULE_KW_RESTRICT : 'restrict';

RULE_KW_RESTRICT2 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE RULE_KW_RESTRICT;

RULE_KW_RESTRICT3 : RULE_KW_RESTRICT2 RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE;

RULE_KW_RETURN : 'return';

RULE_KW_SHORT : 'short';

RULE_KW_SIGNED1 : 'signed';

RULE_KW_SIGNED2 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE RULE_KW_SIGNED1;

RULE_KW_SIGNED3 : RULE_KW_SIGNED2 RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE;

RULE_KW_SIZEOF : 'sizeof';

RULE_KW_STATIC : 'static';

RULE_KW_STATICASSERT : RULE_SKW_UNDERSCORE 'Static_assert';

RULE_KW_STRUCT : 'struct';

RULE_KW_SWITCH : 'switch';

RULE_KW_THREADLOCAL : RULE_SKW_UNDERSCORE 'Thread_local';

RULE_KW_TYPEDEF : 'typedef';

RULE_KW_TYPEOF1 : 'typeof';

RULE_KW_TYPEOF3 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE RULE_KW_TYPEOF1 RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE;

RULE_KW_UNION : 'union';

RULE_KW_UNSIGNED : 'unsigned';

RULE_KW_VOID : 'void';

RULE_KW_VOLATILE : 'volatile';

RULE_KW_VOLATILE2 : RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE RULE_KW_VOLATILE RULE_SKW_UNDERSCORE RULE_SKW_UNDERSCORE;

RULE_KW_WHILE : 'while';

RULE_STARASSIGN : RULE_SKW_STAR RULE_SKW_ASSIGN;

RULE_DIVASSIGN : RULE_SKW_DIV RULE_SKW_ASSIGN;

RULE_MODASSIGN : RULE_SKW_MOD RULE_SKW_ASSIGN;

RULE_PLUSASSIGN : RULE_SKW_PLUS RULE_SKW_ASSIGN;

RULE_MINUSASSIGN : RULE_SKW_MINUS RULE_SKW_ASSIGN;

RULE_LEFTSHIFTASSIGN : RULE_SKW_LEFTSHIFT RULE_SKW_ASSIGN;

RULE_RIGHTSHIFTASSIGN : RULE_SKW_RIGHTSHIFT RULE_SKW_ASSIGN;

RULE_ANDASSIGN : RULE_SKW_AND RULE_SKW_ASSIGN;

RULE_XORASSIGN : RULE_SKW_CARET RULE_SKW_ASSIGN;

RULE_ORASSIGN : RULE_SKW_OR RULE_SKW_ASSIGN;

RULE_ARROW : RULE_SKW_MINUS RULE_SKW_GREATER;

RULE_LINEDIRECTIVE : '#' (~(RULE_NEWLINE)|RULE_SKW_BACKSLASH RULE_NEWLINE)*;

RULE_WHITESPACE : (' '|'\t')+;

RULE_SKW_AND : '&';

RULE_SKW_ANDAND : RULE_SKW_AND RULE_SKW_AND;

RULE_SKW_ASSIGN : '=';

RULE_SKW_BACKSLASH : '\\';

RULE_SKW_CARET : '^';

RULE_SKW_COMMA : ',';

RULE_SKW_COLON : ':';

RULE_SKW_DIV : '/';

fragment RULE_SKW_DOLLAR : '$';

RULE_SKW_DOT : '.';

RULE_SKW_DOUBLEQUOTE : '"';

RULE_SKW_EQUAL : RULE_SKW_ASSIGN RULE_SKW_ASSIGN;

RULE_SKW_GREATER : '>';

RULE_SKW_GREATEREQUAL : RULE_SKW_GREATER RULE_SKW_ASSIGN;

RULE_SKW_LEFTBRACE : '{';

RULE_SKW_LEFTBRACKET : '[';

RULE_SKW_LEFTPAREN : '(';

RULE_SKW_LEFTSHIFT : RULE_SKW_LESS RULE_SKW_LESS;

RULE_SKW_LESS : '<';

RULE_SKW_LESSEQUAL : RULE_SKW_LESS RULE_SKW_ASSIGN;

RULE_SKW_MINUS : '-';

RULE_SKW_MINUSMINUS : RULE_SKW_MINUS RULE_SKW_MINUS;

RULE_SKW_MOD : '%';

RULE_SKW_NOT : '!';

RULE_SKW_NOTEQUAL : RULE_SKW_NOT RULE_SKW_ASSIGN;

RULE_SKW_OR : '|';

RULE_SKW_OROR : RULE_SKW_OR RULE_SKW_OR;

RULE_SKW_PLUS : '+';

RULE_SKW_PLUSPLUS : RULE_SKW_PLUS RULE_SKW_PLUS;

RULE_SKW_QUESTION : '?';

RULE_SKW_RIGHTBRACE : '}';

RULE_SKW_RIGHTBRACKET : ']';

RULE_SKW_RIGHTPAREN : ')';

RULE_SKW_RIGHTSHIFT : RULE_SKW_GREATER RULE_SKW_GREATER;

RULE_SKW_SEMI : ';';

RULE_SKW_SINGLEQUOTE : '\'';

RULE_SKW_STAR : '*';

RULE_SKW_TILDE : '~';

fragment RULE_SKW_UNDERSCORE : '_';

RULE_ID : RULE_IDENTIFIER;

fragment RULE_IDENTIFIER : RULE_LETTER (RULE_LETTER|'0'..'9')*;

fragment RULE_LETTER : (RULE_SKW_DOLLAR|'A'..'Z'|'a'..'z'|RULE_SKW_UNDERSCORE);

RULE_CHAR_LITERAL : RULE_SKW_SINGLEQUOTE (RULE_ESCAPE_SEQUENCE|~((RULE_SKW_SINGLEQUOTE|RULE_SKW_BACKSLASH))) RULE_SKW_SINGLEQUOTE;

RULE_STRING_LITERAL : RULE_SKW_DOUBLEQUOTE (RULE_ESCAPE_SEQUENCE|~((RULE_SKW_BACKSLASH|RULE_SKW_DOUBLEQUOTE)))* RULE_SKW_DOUBLEQUOTE;

RULE_HEX_LITERAL : '0' ('x'|'X') RULE_HEX_DIGIT+ RULE_INTEGER_TYPE_SUFFIX?;

RULE_DECIMAL_LITERAL : ('0'|'1'..'9' ('0'..'9')*) RULE_INTEGER_TYPE_SUFFIX?;

RULE_OCTAL_LITERAL : '0' ('0'..'7')+ RULE_INTEGER_TYPE_SUFFIX?;

RULE_BIN_LITERAL : ('0b'|'0B') ('0'..'1')+;

fragment RULE_HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F');

fragment RULE_INTEGER_TYPE_SUFFIX : (RULE_UNSIGNED_SUFFIX RULE_LONG_SUFFIX?|RULE_UNSIGNED_SUFFIX RULE_LONG_LONG_SUFFIX|RULE_LONG_SUFFIX RULE_UNSIGNED_SUFFIX?|RULE_LONG_LONG_SUFFIX RULE_UNSIGNED_SUFFIX?);

fragment RULE_UNSIGNED_SUFFIX : ('u'|'U');

fragment RULE_LONG_SUFFIX : ('l'|'L');

fragment RULE_LONG_LONG_SUFFIX : ('ll'|'LL');

RULE_FLOAT_LITERAL : (('0'..'9')+ RULE_SKW_DOT ('0'..'9')* RULE_EXPONENT? RULE_FLOAT_TYPE_SUFFIX?|RULE_SKW_DOT ('0'..'9')+ RULE_EXPONENT? RULE_FLOAT_TYPE_SUFFIX?|('0'..'9')+ RULE_EXPONENT RULE_FLOAT_TYPE_SUFFIX?|('0'..'9')+ RULE_EXPONENT? RULE_FLOAT_TYPE_SUFFIX);

fragment RULE_EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+;

fragment RULE_FLOAT_TYPE_SUFFIX : ('f'|'F'|'d'|'D');

fragment RULE_ESCAPE_SEQUENCE : (RULE_SKW_BACKSLASH ('b'|'t'|'n'|'f'|'r'|'"'|RULE_SKW_SINGLEQUOTE|RULE_SKW_BACKSLASH)|RULE_OCTAL_ESCAPE|RULE_HEX_ESCAPE);

fragment RULE_OCTAL_ESCAPE : (RULE_SKW_BACKSLASH '0'..'3' '0'..'7' '0'..'7'|RULE_SKW_BACKSLASH '0'..'7' '0'..'7'|RULE_SKW_BACKSLASH '0'..'7');

fragment RULE_HEX_ESCAPE : RULE_SKW_BACKSLASH 'x' RULE_HEX_DIGIT+;

fragment RULE_LINEFEED : '\n';

fragment RULE_CARRIAGERETURN : '\r';

fragment RULE_LINE_END : (RULE_CARRIAGERETURN|RULE_LINEFEED);

RULE_LINEBREAK : RULE_SKW_BACKSLASH RULE_LINE_END;

RULE_NEWLINE : RULE_LINE_END;

fragment RULE_SPACE : ' ';

fragment RULE_TAB : '\t';

RULE_BLOCK_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_LINE_COMMENT : '//' ~(RULE_LINE_END)*;

RULE_SPECIAL : .;


