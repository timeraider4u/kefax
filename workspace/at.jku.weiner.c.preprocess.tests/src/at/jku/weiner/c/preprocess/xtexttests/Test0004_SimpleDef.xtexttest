//----------------------------------------------------------------------
//----------------------------------------------------------------------
package at.jku.weiner.c.preprocess
language preprocess
imports at.jku.weiner.c.common.common
//----------------------------------------------------------------------
split-lexer=false
source file="res/Test0004_SimpleDef.c"
//----------------------------------------------------------------------
lexer-tokens
	HASH DEFINE WHITESPACE 		ID WHITESPACE WHITESPACE 	FLOAT_LITERAL NEWLINE
	HASH DEFINE WHITESPACE		ID WHITESPACE 		STRING_LITERAL NEWLINE
	HASH DEFINE WHITESPACE		ID WHITESPACE 		DECIMAL_LITERAL NEWLINE
	NEWLINE
	HASH DEFINE WHITESPACE		ID WHITESPACE WHITESPACE	ID NEWLINE
	NEWLINE
	HASH DEFINE WHITESPACE		ID WHITESPACE		ID WHITESPACE ID SKW_LEFTPAREN ID SKW_RIGHTPAREN NEWLINE
	NEWLINE
	//SPECIAL +*2 WHITESPACE ID SKW_COMMA WHITESPACE ID WHITESPACE ID NEWLINE
	LINE_COMMENT NEWLINE
	HASH DEFINE WHITESPACE 		ID WHITESPACE		ID NEWLINE
	NEWLINE
	ID WHITESPACE SKW_LEFTBRACE NEWLINE
	WHITESPACE ID WHITESPACE ID WHITESPACE SKW_ASSIGN WHITESPACE ID WHITESPACE SKW_MINUS WHITESPACE ID SKW_SEMI NEWLINE
	WHITESPACE ID WHITESPACE ID SKW_SEMI NEWLINE
	SKW_RIGHTBRACE NEWLINE
//----------------------------------------------------------------------
(Model
	units+=
	(TranslationUnit
		group=
		(GroupOpt
			lines+=
			(PreprocessorDirectives
				directive=
				(DefineDirective
					id++"PI",
					string++"3.1415926535897932"
				)
			),
			(PreprocessorDirectives
				directive=
				(DefineDirective
					id++"NAME",
					string++"\\\"Nobody\\\""
				)
			),
			(PreprocessorDirectives
				directive=
				(DefineDirective
					id++"NUMBER",
					string++"2"
				)
			),
			(NewLineLine),
			(PreprocessorDirectives
				directive=
				(DefineDirective
					id++"X",
					string++"NUMBER"
				)
			),
			(NewLineLine),
			(PreprocessorDirectives
				directive=
				(DefineDirective
					id++"MAIN",
					string++"int main(void)"
				)
			),
			(NewLineLine),
			(NewLineLine),
			(PreprocessorDirectives
				directive=
				(DefineDirective
					id++"long",
					string++"int"
				)
			),
			(NewLineLine),
			(Code
				code++"MAIN {"
			),
			(Code
				code++"	long d = X - NUMBER;"
			),
			(Code
				code++"	return d;"
			),
			(Code
				code++"}"
			)
			
		)
	)
)
//----------------------------------------------------------------------
output file="bin/Test0004_SimpleDef.c.i"
expected file="expected/Test0004_SimpleDef.c"
//replacePatterns file="res/Patterns.txt"
//----------------------------------------------------------------------
//----------------------------------------------------------------------
