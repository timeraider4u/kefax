//----------------------------------------------------------------------
//----------------------------------------------------------------------
package at.jku.weiner.c.preprocess
language preprocess
//----------------------------------------------------------------------
split-lexer=true
source file="res/Test0025_FunctionMacroTwoArguments.c"
//----------------------------------------------------------------------
lexer-tokens
	HASH DEFINE WS ID SKW_LEFTPAREN ID SKW_COMMA WS ID SKW_RIGHTPAREN WS
		SKW_LEFTPAREN SKW_LEFTPAREN ID SKW_RIGHTPAREN WS SKW_LESS WS
		SKW_LEFTPAREN ID SKW_RIGHTPAREN WS SKW_QUESTION WS
		SKW_LEFTPAREN ID SKW_RIGHTPAREN WS SKW_COLON WS
		SKW_LEFTPAREN ID SKW_RIGHTPAREN SKW_RIGHTPAREN 
		NEWLINE
	// a
	ID WS ID WS SKW_ASSIGN WS ID SKW_LEFTPAREN SKW_COMMA WS DECIMAL_LITERAL SKW_RIGHTPAREN 
		WS SKW_PLUS WS ID SKW_LEFTPAREN WS DECIMAL_LITERAL WS SKW_COMMA WS DECIMAL_LITERAL WS SKW_RIGHTPAREN 
		SKW_SEMI NEWLINE
	// b
	ID WS ID WS SKW_ASSIGN WS ID SKW_LEFTPAREN ID SKW_COMMA WS SKW_RIGHTPAREN SKW_SEMI NEWLINE
	// c
	ID WS ID WS SKW_ASSIGN WS ID SKW_LEFTPAREN SKW_COMMA SKW_RIGHTPAREN SKW_SEMI NEWLINE
	// d
	ID WS ID WS SKW_ASSIGN WS ID SKW_LEFTPAREN SKW_LEFTPAREN SKW_COMMA SKW_RIGHTPAREN SKW_COMMA SKW_RIGHTPAREN SKW_SEMI NEWLINE
	// e
	ID WS ID WS SKW_ASSIGN WS ID WS SKW_LEFTPAREN ID WS SKW_LEFTPAREN ID SKW_COMMA WS ID SKW_RIGHTPAREN 
		SKW_COMMA WS ID SKW_RIGHTPAREN SKW_SEMI NEWLINE
//----------------------------------------------------------------------
(Model
	units+=
	(TranslationUnit
		group=
		(GroupOpt
			lines+=
			(PreprocessorDirectives
				directive=
				(DefineFunctionLikeMacro
					id++"MIN",
					list=
					(IdentifierList
						id+*"[X, Y]"
					),
					string++"((X) < (Y) ? (X) : (Y))"
				)
			),
			(Code
				code++"int a = MIN(, 5) + MIN( 1 , 2 );"
			),
			(Code
				code++"int b = MIN(a, );"
			),
			(Code
				code++"int c = MIN(,);"
			),
			(Code
				code++"int d = MIN((,),);"
			),
			(Code
				code++"int e = MIN (MIN (a, b), c);"
			)
		)
	)
)
//----------------------------------------------------------------------
output file="bin/Test0025_FunctionMacroTwoArguments.c.i"
expected file="expected/Test0025_FunctionMacroTwoArguments.c"
//replacePatterns file="res/Patterns.txt"
//----------------------------------------------------------------------
//----------------------------------------------------------------------
