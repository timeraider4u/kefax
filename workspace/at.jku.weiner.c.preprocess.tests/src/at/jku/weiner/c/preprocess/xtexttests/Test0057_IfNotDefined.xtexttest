//----------------------------------------------------------------------
//----------------------------------------------------------------------
package at.jku.weiner.c.preprocess
language preprocess
//----------------------------------------------------------------------
split-lexer=false
source file="res/Test0057_IfNotDefined.c"
//----------------------------------------------------------------------
lexer-tokens
	HASH DEFINE WS ID WS DECIMAL_LITERAL NEWLINE
	HASH IF WS SKW_NOT WS DEFINED WS ID NEWLINE
		WS ID WS ID SKW_LEFTPAREN SKW_RIGHTPAREN SKW_SEMI NEWLINE
	HASH ENDIF NEWLINE
//----------------------------------------------------------------------
(Model
	units+=
	(TranslationUnit
		group=
		(GroupOpt
			lines+=
			(PreprocessorDirectives
				directive=
				(DefineDirective
					id++"FOO",
					string++"64"
				)
			),
			(PreprocessorDirectives
				directive=
				(ConditionalDirective
					conditional=
					(IfConditional
						expression=
						(ConstantExpression
							expr=
							(ConditionalExpression
								expr=
								(LogicalOrExpression
									expr+=
									(LogicalAndExpression
										expr+=
										(InclusiveOrExpression
											expr+=
											(ExclusiveOrExpression
												expr+=
												(AndExpression
													expr+=
													(EqualityExpression
														expr+=
														(RelationalExpression
															expr+=
															(ShiftExpression
																expr+=
																(AdditiveExpression
																	expr+=
																	(MultiplicativeExpression
																		expr+=
																		(CastExpression
																			expr=
																			(UnaryExpression
																				op=
																				(UnaryOperator
																					op++"!"
																				),
																				expr=
																				(CastExpression
																					expr=
																					(UnaryExpression
																						op isNull,
																						expr=
																						(PostfixExpression
																							expr=
																							(PrimaryExpression
																								defined?=true,
																								id++"FOO"
																							)
																						)
																					)
																				)
																			)
																		)
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								)
							)
						),
						group=
						(GroupOpt
							lines+=
							(Code
								code++"	void bar();"
							)
						)
					)
				)
			)
		)
	)
)
//----------------------------------------------------------------------
output file="bin/Test0057_IfNotDefined.c.i"
expected file="expected/Test0057_IfNotDefined.c"
//replacePatterns file="res/Patterns.txt"
//----------------------------------------------------------------------
//----------------------------------------------------------------------
