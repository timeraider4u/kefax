//----------------------------------------------------------------------
//----------------------------------------------------------------------
package at.jku.weiner.c.preprocess
language preprocess
imports at.jku.weiner.c.common.common
//----------------------------------------------------------------------
split-lexer=false
source file="res/Test0060_IfElIfElse.c"
//----------------------------------------------------------------------
lexer-tokens
	//WHITESPACE NEWLINE
	HASH DEFINE WHITESPACE ID WHITESPACE DECIMAL_LITERAL NEWLINE
	IGNORED NEWLINE
	HASH IF WHITESPACE DEFINED WHITESPACE ID NEWLINE
		WHITESPACE ID WHITESPACE ID SKW_LEFTPAREN SKW_RIGHTPAREN SKW_SEMI NEWLINE
	HASH ELIF WHITESPACE DEFINED WHITESPACE ID NEWLINE
		WHITESPACE ID WHITESPACE ID SKW_LEFTPAREN SKW_RIGHTPAREN SKW_SEMI NEWLINE
	HASH ELSE NEWLINE
		WHITESPACE ID WHITESPACE ID SKW_LEFTPAREN SKW_RIGHTPAREN SKW_SEMI NEWLINE
	HASH ENDIF NEWLINE
//----------------------------------------------------------------------
//(common::Model
	//units+=
	//(common::TranslationUnit
	(Preprocess
		group=
		(GroupOpt
			lines+=
//			(Code
//				code++"//#define FOO 50"
//			),
			(PreprocessorDirectives
				directive=
				(DefineObjectMacro
					id++"FOO",
					string++"50"
				)
			),
			(NewLineLine),
//			(PreprocessorDirectives
//				directive=
//				(DefineObjectMacro
//					id++"BAR",
//					string++"0"
//				)
//			),
			(PreprocessorDirectives
				directive=
				(ConditionalDirective
					conditional=
					(IfConditional
						expression=
						(PrimaryExpression
							defined?=true,
							id++"FOO"
						),
						group=
						(GroupOpt
							lines+=
							(Code
								code++"	void foo();"
							)
						)
					), // end if conditional
					elifs+=
					(ElIfConditional
						expression=
						(PrimaryExpression
							defined?=true,
							id++"BAR"
						),
						group=
						(GroupOpt
							lines+=
							(Code
								code++"	void bar();"
							)
						)
					), // end elif conditional
					else=
					(ElseConditional
						group=
						(GroupOpt
							lines+=
							(Code
								code++"	void no_foo_and_no_bar();"
							)
						)
					)
				) // end conditional directive
			)
		)
	)
//)
//)
//----------------------------------------------------------------------
output file="bin/Test0060_IfElIfElse.c.i"
expected file="expected/Test0060_IfElIfElse.c"
//replacePatterns file="res/Patterns.txt"
//----------------------------------------------------------------------
//----------------------------------------------------------------------
