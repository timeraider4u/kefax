//----------------------------------------------------------------------
//----------------------------------------------------------------------
package at.jku.weiner.c.preprocess
language preprocess
imports at.jku.weiner.c.common.common
//----------------------------------------------------------------------
split-lexer=false
source file="res/Test0082_Stringification4.c"
//----------------------------------------------------------------------
lexer-tokens
	HASH DEFINE WHITESPACE ID SKW_LEFTPAREN ID SKW_RIGHTPAREN WHITESPACE HASH ID WHITESPACE 
		ID SKW_LEFTPAREN HASH ID SKW_RIGHTPAREN NEWLINE
	HASH DEFINE WHITESPACE ID SKW_LEFTPAREN ID SKW_RIGHTPAREN WHITESPACE ID SKW_LEFTPAREN HASH ID SKW_RIGHTPAREN NEWLINE
	HASH DEFINE WHITESPACE ID SKW_LEFTPAREN ID SKW_RIGHTPAREN WHITESPACE HASH ID NEWLINE
	
	NEWLINE
	ID SKW_LEFTPAREN ID SKW_RIGHTPAREN SKW_SEMI NEWLINE
	ID SKW_LEFTPAREN ID SKW_RIGHTPAREN SKW_SEMI NEWLINE
	ID SKW_LEFTPAREN ID SKW_RIGHTPAREN SKW_SEMI NEWLINE
//----------------------------------------------------------------------
//(common::Model
	//units+=
	//(common::TranslationUnit
	(Preprocess
		group=
		(GroupOpt
			lines+=
			(PreprocessorDirectives
				directive=
				(DefineFunctionLikeMacro
					ident++"FOOBAR",
					list=
					(IdentifierList
						ident+*"[X]"
					),
//					replacement+=
//					(ReplaceLine
						string++"#X BAR(#X)"
//						ident++"X"
//					),
//					(ReplaceLine
//						string++" BAR(",
//						ident++"X"
//					),
//					(ReplaceLine
//						string++")"
//					)
				)
			),
			(PreprocessorDirectives
				directive=
				(DefineFunctionLikeMacro
					ident++"BAR",
					list=
					(IdentifierList
						ident+*"[X]"
					),
//					replacement+=
//					(ReplaceLine
						string++"FOO(#X)"
//						ident++"X"
//					),
//					(ReplaceLine
//						string++")"
//					)
				)
			),
			(PreprocessorDirectives
				directive=
				(DefineFunctionLikeMacro
					ident++"FOO",
					list=
					(IdentifierList
						ident+*"[X]"
					),
//					replacement+=
//					(ReplaceLine
						string++"#X"
//						ident++"X"
//					)
				)
			),
			(NewLineLine),
			(Code
				code++"FOO(abc);"
			),
			(Code
				code++"BAR(abc);"
			),
			(Code
				code++"FOOBAR(abc);"
			)
		)
	)
//)
//)
//----------------------------------------------------------------------
output file="bin/Test0082_Stringification4.c.i"
expected file="expected/Test0082_Stringification4.c"
//replacePatterns file="res/Patterns.txt"
//----------------------------------------------------------------------
//----------------------------------------------------------------------
