//----------------------------------------------------------------------
//----------------------------------------------------------------------
package at.jku.weiner.c.preprocess
language preprocess
imports at.jku.weiner.c.common.common
//----------------------------------------------------------------------
split-lexer=false
source file="res/Test0103_Ellipsis9.c"
//----------------------------------------------------------------------
lexer-tokens
	// #define FOO(x...) 
	HASH DEFINE WHITESPACE ID SKW_LEFTPAREN 
		ID SKW_ELLIPSIS
		SKW_RIGHTPAREN WHITESPACE
		// printf(x) 
		ID SKW_LEFTPAREN ID SKW_RIGHTPAREN
		NEWLINE
	// FOO();
	ID SKW_LEFTPAREN SKW_RIGHTPAREN SKW_SEMI NEWLINE
	// FOO( );
	ID SKW_LEFTPAREN WHITESPACE SKW_RIGHTPAREN SKW_SEMI NEWLINE
	// FOO(, );
	ID SKW_LEFTPAREN SKW_COMMA WHITESPACE SKW_RIGHTPAREN SKW_SEMI NEWLINE
	// FOO(, , );
	ID SKW_LEFTPAREN SKW_COMMA WHITESPACE SKW_COMMA WHITESPACE SKW_RIGHTPAREN SKW_SEMI NEWLINE
	// FOO("abc");
	ID SKW_LEFTPAREN STRING_LITERAL SKW_RIGHTPAREN SKW_SEMI NEWLINE
	// FOO("abc", "def");
	ID SKW_LEFTPAREN STRING_LITERAL
		SKW_COMMA WHITESPACE STRING_LITERAL
		SKW_RIGHTPAREN SKW_SEMI NEWLINE
	// FOO( "abc", "def", "ghi");
	ID SKW_LEFTPAREN WHITESPACE STRING_LITERAL
		SKW_COMMA WHITESPACE  STRING_LITERAL
		SKW_COMMA WHITESPACE  STRING_LITERAL
		SKW_RIGHTPAREN SKW_SEMI NEWLINE
//----------------------------------------------------------------------
//(common::Model
	//units+=
	//(common::TranslationUnit
	(Preprocess
		group=
		(GroupOpt
			lines+=
			(PreprocessorDirectives
				directive=
				(DefineFunctionLikeMacro
					id++"FOO",
					list =
					(IdentifierList
						id isEmpty,
						varID++"x",
						variadic?=true
					),
					string++"printf(x)"
				)
			),
			(Code
				code++"FOO();"
			),
			(Code
				code++"FOO( );"
			),
			(Code
				code++"FOO(, );"
			),
			(Code
				code++"FOO(, , );"
			),
			(Code
				code++"FOO(\\\"abc\\\");"
			),
			(Code
				code++"FOO(\\\"abc\\\", \\\"def\\\");"
			),
			(Code
				code++"FOO( \\\"abc\\\", \\\"def\\\", \\\"ghi\\\");"
			)
		)
	)
//)
//)
//----------------------------------------------------------------------
output file="bin/Test0103_Ellipsis9.c.i"
expected file="expected/Test0103_Ellipsis9.c"
//replacePatterns file="res/Patterns.txt"
//----------------------------------------------------------------------
//----------------------------------------------------------------------
