//----------------------------------------------------------------------
//----------------------------------------------------------------------
package at.jku.weiner.c.preprocess
language preprocess
imports at.jku.weiner.c.common.common
//----------------------------------------------------------------------
split-lexer=false
source file="res/Test0119_DefineAndInclude.c"
//----------------------------------------------------------------------
lexer-tokens
	IGNORED NEWLINE
	HASH DEFINE WHITESPACE ID WHITESPACE DECIMAL_LITERAL NEWLINE
	HASH DEFINE WHITESPACE ID WHITESPACE DECIMAL_LITERAL NEWLINE
	HASH DEFINE WHITESPACE ID SKW_LEFTPAREN ID SKW_RIGHTPAREN WHITESPACE HASH ID NEWLINE
	HASH DEFINE WHITESPACE ID SKW_LEFTPAREN ID SKW_RIGHTPAREN WHITESPACE ID SKW_LEFTPAREN
			SKW_DOT SKW_DOT SKW_DIV 
			ID SKW_DIV INCLUDE SKW_DIV ID 
			SKW_DIV ID HASH HASH ID SKW_DOT ID SKW_RIGHTPAREN NEWLINE
	HASH DEFINE WHITESPACE ID SKW_LEFTPAREN ID SKW_RIGHTPAREN WHITESPACE ID SKW_LEFTPAREN ID SKW_RIGHTPAREN NEWLINE
	ID SKW_LEFTPAREN ID SKW_RIGHTPAREN NEWLINE
	HASH INCLUDE WHITESPACE ID SKW_LEFTPAREN ID SKW_RIGHTPAREN NEWLINE
//----------------------------------------------------------------------
//(common::Model
	//units+=
	//(common::TranslationUnit
	(Preprocess
		group=
		(GroupOpt
			lines+=
			(NewLineLine),
			(PreprocessorDirectives
				directive=
				(DefineObjectMacro
					ident++"xyz",
					string++"4"
				)
			),
			(PreprocessorDirectives
				directive=
				(DefineObjectMacro
					ident++"bar",
					string++"1"
				)
			),
			(PreprocessorDirectives
				directive=
				(DefineFunctionLikeMacro
					ident++"__foo",
					list=
					(IdentifierList
						ident+*"[x]"
					),
					string++"#x"
				)
			),
			(PreprocessorDirectives
				directive=
				(DefineFunctionLikeMacro
					ident++"_foo",
					list=
					(IdentifierList
						ident+*"[x]"
					),
					string++"__foo(../myinclude/include/bar/baz##x.h)"
				)
			),
			(PreprocessorDirectives
				directive=
				(DefineFunctionLikeMacro
					ident++"foo",
					list=
					(IdentifierList
						ident+*"[x]"
					),
					string++"_foo(x)"
				)
			),
			(Code
				code++"foo(xyz)"
			),
			(PreprocessorDirectives
				directive=
				(IncludeDirective
					string++"foo(xyz)"
				)
			)
			
		)
	)
//)
//)
//----------------------------------------------------------------------
output file="bin/Test0119_DefineAndInclude.c.i"
expected file="expected/Test0119_DefineAndInclude.c"
//replacePatterns file="res/Patterns.txt"
//----------------------------------------------------------------------
before
	class= at.jku.weiner.c.preprocess.xtexttests.TestUtils
	method=setUpTest0119
	()
//----------------------------------------------------------------------
//----------------------------------------------------------------------
