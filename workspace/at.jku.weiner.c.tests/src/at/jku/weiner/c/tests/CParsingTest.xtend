/*
 * generated by Xtext 2.9.0-SNAPSHOT
 */
package at.jku.weiner.c.tests

import at.jku.weiner.c.c.Model
import com.google.inject.Inject
import org.eclipse.xtext.junit4.InjectWith
import org.eclipse.xtext.junit4.XtextRunner
import org.eclipse.xtext.junit4.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith

@RunWith(XtextRunner)
@InjectWith(CInjectorProvider)
class CParsingTest{

	@Inject
	ParseHelper<Model> parseHelper;

	@Test 
	def void loadModel() {
		val result = parseHelper.parse(''';''')
		Assert.assertNotNull(result)
		Assert.assertNotNull(result.unit);
		Assert.assertEquals(1, result.unit.size);
		var unit = result.unit.get(0);
		Assert.assertNotNull(unit);
		Assert.assertNotNull(unit.external);
		Assert.assertEquals(1, unit.external.size);
	}

	@Test 
	def void loadModel2() {
		val result = parseHelper.parse('''
			;
			;;
		''')
		Assert.assertNotNull(result)
		Assert.assertNotNull(result.unit);
		Assert.assertEquals(1, result.unit.size);
		var unit = result.unit.get(0);
		Assert.assertNotNull(unit);
		Assert.assertNotNull(unit.external);
		Assert.assertEquals(3, unit.external.size);
	}

	@Test 
	def void loadModel3() {
		val result = parseHelper.parse('''
			int i;
			int i = 0;
		''')
		Assert.assertNotNull(result)
		Assert.assertNotNull(result.unit);
		Assert.assertEquals(1, result.unit.size);
		var unit = result.unit.get(0);
		Assert.assertNotNull(unit);
		Assert.assertNotNull(unit.external);
		Assert.assertEquals(2, unit.external.size);
	}

}
