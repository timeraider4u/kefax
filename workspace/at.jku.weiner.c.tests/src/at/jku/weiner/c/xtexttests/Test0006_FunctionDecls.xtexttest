package at.jku.weiner.c
language c
//----------------------------------------------------------------------
source file="res/Test0006_FunctionDecls.c"
//----------------------------------------------------------------------
lexer-tokens
KW_VOID WHITESPACE ID LEFTPAREN
KW_CHAR WHITESPACE ID COMMA WHITESPACE
KW_FLOAT WHITESPACE ID COMMA WHITESPACE
KW_INT WHITESPACE ID 
RIGHTPAREN SEMI NEWLINE
KW_VOID WHITESPACE ID LEFTPAREN
KW_CHAR COMMA WHITESPACE
KW_FLOAT COMMA WHITESPACE
KW_INT
RIGHTPAREN SEMI NEWLINE
LINE_COMMENT NEWLINE
//----------------------------------------------------------------------
(Model unit+=
	(TranslationUnit 
		external+=
		// int do1(int a, int b, int c);
		(ExternalDeclaration 
			declaration=
			(Declaration
				specifiers=
				(DeclarationSpecifiers
					declarationSpecifier+=
					(TypeSpecifier
						name++"void"
					)
				),
				initDeclaratorList+=
				(InitDeclaratorList
					initDeclarator+=
					(InitDeclarator
						declarator=
						(Declarator
							declarator=
							(DirectDeclarator
								id++"do1",
								declaratorSuffix+=
								(DeclaratorSuffix
									lastSuffix=
									(DirectDeclaratorLastSuffix
										parameterTypeList+=
										(ParameterTypeList
											list=
											(ParameterList
												parameterDeclaration+=
												(ParameterDeclaration
													declSpecifiers=
													(DeclarationSpecifiers
														declarationSpecifier+=
														(TypeSpecifier
															name++"char"
														)
													),
													declarator=
													(Declarator
														declarator=
														(DirectDeclarator
															id++"c"
														)
													)
												),
												(ParameterDeclaration
													declSpecifiers=
													(DeclarationSpecifiers
														declarationSpecifier+=
														(TypeSpecifier
															name++"float"
														)
													),
													declarator=
													(Declarator
														declarator=
														(DirectDeclarator
															id++"f"
														)
													)
												),
												(ParameterDeclaration
													declSpecifiers=
													(DeclarationSpecifiers
														declarationSpecifier+=
														(TypeSpecifier
															name++"int"
														)
													),
													declarator=
													(Declarator
														declarator=
														(DirectDeclarator
															id++"i"
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
				),
				semi++";"
			)
		),
		// void do2(int, int, int);
		(ExternalDeclaration 
			declaration=
			(Declaration
				specifiers=
				(DeclarationSpecifiers
					declarationSpecifier+=
					(TypeSpecifier
						name++"void"
					)
				),
				initDeclaratorList+=
				(InitDeclaratorList
					initDeclarator+=
					(InitDeclarator
						declarator=
						(Declarator
							declarator=
							(DirectDeclarator
								id++"do2",
								declaratorSuffix+=
								(DeclaratorSuffix
									lastSuffix=
									(DirectDeclaratorLastSuffix
										parameterTypeList+=
										(ParameterTypeList
											list=
											(ParameterList
												parameterDeclaration+=
												(ParameterDeclaration
													declSpecifiers=
													(DeclarationSpecifiers
														declarationSpecifier+=
														(TypeSpecifier
															name++"char"
														)
													)
												),
												(ParameterDeclaration
													declSpecifiers=
													(DeclarationSpecifiers
														declarationSpecifier+=
														(TypeSpecifier
															name++"float"
														)
													)
												),
												(ParameterDeclaration
													declSpecifiers=
													(DeclarationSpecifiers
														declarationSpecifier+=
														(TypeSpecifier
															name++"int"
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
				),
				semi++";"
			)
		)
		
	)
)
//----------------------------------------------------------------------
output file="bin/greetings.txt"
expected file isSameAsInputFile

