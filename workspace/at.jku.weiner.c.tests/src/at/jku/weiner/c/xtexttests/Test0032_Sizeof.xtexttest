package at.jku.weiner.c
language c
//----------------------------------------------------------------------
source file="res/Test0032_SizeOf.c"
//----------------------------------------------------------------------
lexer-tokens

KW_INT WHITESPACE ID LEFTPAREN RIGHTPAREN WHITESPACE LEFTBRACE NEWLINE
	WHITESPACE KW_RETURN WHITESPACE KW_SIZEOF LEFTPAREN
	KW_INT RIGHTPAREN SEMI NEWLINE
RIGHTBRACE NEWLINE

//----------------------------------------------------------------------
(Model unit+=
	(TranslationUnit 
		external+=		
		(ExternalDeclaration 
			functiondefHead=
			(FunctionDefHead
				funDeclSpecifiers=
				(DeclarationSpecifiers
					declarationSpecifier+=
					(TypeSpecifier
						name++"int"
					)
				),
				funDeclarator=
				(Declarator
					declarator=
					(DirectDeclarator
						id++"sizeOfInt"
					)
				)
			),
			functionDefinition=
			(FunctionDefinition
				body=
				(BodyStatement
					blockList+=
					(BlockList
						statement+=
						(Statement
							stmt=
							(JumpStatement
								expr=
								(Expression
									exprExpr+=
									(AssignmentExpression
										expr=
										(ConditionalExpression
											expr=
											(LogicalOrExpression
												expr+=
												(LogicalAndExpression
													expr+=
													(InclusiveOrExpression
														expr+=
														(ExclusiveOrExpression
															expr+=
															(AndExpression
																expr+=
																(EqualityExpression
																	expr+=
																	(RelationalExpression
																		expr+=
																		(ShiftExpression
																			expr+=
																			(AdditiveExpression
																				expr+=
																				(MultiplicativeExpression
																					expr+=
																					(CastExpression
																						expr=
																						(UnaryExpression
																							sizeOf++"sizeof",
																							typeName=
																							(TypeName
																								list=
																								(SpecifierQualifierList
																									typeSpecifier+=
																									(TypeSpecifier
																										name++"int"
																									)
																								)
																							)
																						)
																					)
																				)
																			)
																		)
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								), // end expression
								return++"return",
								semi++";"
							)// end jump statement
						)//end statement
					)
				)
			)
		)// end external declaration		
	)
)
