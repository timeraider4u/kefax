package at.jku.weiner.c
language c
//----------------------------------------------------------------------
source file="res/Test0035_SimpleArray.c"
//----------------------------------------------------------------------
lexer-tokens
LINEDIRECTIVE NEWLINE
LINEDIRECTIVE NEWLINE
NEWLINE

KW_CHAR WHITESPACE ID LEFTBRACKET DECIMAL_LITERAL RIGHTBRACKET 
	WHITESPACE ASSIGN WHITESPACE STRING_LITERAL SEMI NEWLINE
NEWLINE

KW_INT WHITESPACE ID LEFTPAREN
	KW_VOID
RIGHTPAREN WHITESPACE LEFTBRACE NEWLINE
	WHITESPACE ID LEFTPAREN STRING_LITERAL COMMA WHITESPACE 
		ID RIGHTPAREN SEMI NEWLINE
	WHITESPACE ID LEFTPAREN ID COMMA WHITESPACE 
		STRING_LITERAL RIGHTPAREN SEMI NEWLINE
	WHITESPACE ID LEFTPAREN STRING_LITERAL COMMA WHITESPACE 
		ID RIGHTPAREN SEMI NEWLINE
		
	//WHITESPACE LINE_COMMENT NEWLINE
	WHITESPACE ID LEFTBRACKET DECIMAL_LITERAL RIGHTBRACKET
		WHITESPACE ASSIGN WHITESPACE CHAR_LITERAL SEMI NEWLINE
	
	WHITESPACE ID LEFTPAREN STRING_LITERAL COMMA WHITESPACE 
		ID RIGHTPAREN SEMI NEWLINE
	WHITESPACE KW_RETURN WHITESPACE DECIMAL_LITERAL SEMI NEWLINE
RIGHTBRACE NEWLINE
//----------------------------------------------------------------------
(Model unit+=
	(TranslationUnit 
		external+=
		(ExternalDeclaration
			declaration=
			(Declaration
				specifiers=
				(DeclarationSpecifiers
					declarationSpecifier+=
					(TypeSpecifier
						name++"char"
					)
				),
				initDeclaratorList+=
				(InitDeclaratorList
					initDeclarator+=
					(InitDeclarator
						declarator=
						(Declarator
							declarator=
							(DirectDeclarator
								id++"out",
								declaratorSuffix+=
								(DeclaratorSuffix
									expr=
									(AssignmentExpression
										expr=
										(ConditionalExpression
											expr=
											(LogicalOrExpression
												expr+=
												(LogicalAndExpression
													expr+=
													(InclusiveOrExpression
														expr+=
														(ExclusiveOrExpression
															expr+=
															(AndExpression
																expr+=
																(EqualityExpression
																	expr+=
																	(RelationalExpression
																		expr+=
																		(ShiftExpression
																			expr+=
																			(AdditiveExpression
																				expr+=
																				(MultiplicativeExpression
																					expr+=
																					(CastExpression
																						expr=
																						(UnaryExpression
																							expr=
																							(PostfixExpression
																								expr+=
																								(PrimaryExpression
																									const=
																									(Constant
																										dec++"255"
																									)
																								)
																							)
																						)
																					)
																				)
																			)
																		)
																	)
																)
															)
														)
													)
												)
											)
										)
									) // end assignment expression
								)
							)
						), // end declarator
						initializer=
						(Initializer
							expr=
							(AssignmentExpression
								expr=
								(ConditionalExpression
									expr=
									(LogicalOrExpression
										expr+=
										(LogicalAndExpression
											expr+=
											(InclusiveOrExpression
												expr+=
												(ExclusiveOrExpression
													expr+=
													(AndExpression
														expr+=
														(EqualityExpression
															expr+=
															(RelationalExpression
																expr+=
																(ShiftExpression
																	expr+=
																	(AdditiveExpression
																		expr+=
																		(MultiplicativeExpression
																			expr+=
																			(CastExpression
																				expr=
																				(UnaryExpression
																					expr=
																					(PostfixExpression
																						expr+=
																						(PrimaryExpression
																							const=
																							(Constant
																								str++"\\\"some output\\\""
																							)
																						)
																					)
																				)
																			)
																		)
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								)
							) // end assignment expression
						)
					)
				)
			)
		),
		(ExternalDeclaration 
			functiondefHead=
			(FunctionDefHead
				funDeclSpecifiers=
				(FunctionDeclarationSpecifiers
					declarationSpecifier+=
					(TypeSpecifier
						name++"int"
					)
				),
				funDeclarator=
				(Declarator
					declarator=
					(DirectDeclarator
						id++"main",
						declaratorSuffix+=
						(DeclaratorSuffix
							lastSuffix=
							(DirectDeclaratorLastSuffix
								parameterTypeList+=
								(ParameterTypeList
									list=
									(ParameterList
										parameterDeclaration+=
										(ParameterDeclaration
											declSpecifiers=
											(DeclarationSpecifiers
												declarationSpecifier+=
												(TypeSpecifier
													name++"void"
												)
											)
										) 
									) // end parameter list
								)
							)
						) // DeclaratorSuffix
					)
				)
			),
			functionDefinition=
			(FunctionDefinition
				body=
				(BodyStatement
					blockList+=
					(BlockList
						statement+=
						// printf(..., out);
						(Statement
							stmt=
							(ExpressionStatement
								expression=
								(Expression
									exprExpr+=
									(AssignmentExpression
										expr=
										(ConditionalExpression
											expr=
											(LogicalOrExpression
												expr+=
												(LogicalAndExpression
													expr+=
													(InclusiveOrExpression
														expr+=
														(ExclusiveOrExpression
															expr+=
															(AndExpression
																expr+=
																(EqualityExpression
																	expr+=
																	(RelationalExpression
																		expr+=
																		(ShiftExpression
																			expr+=
																			(AdditiveExpression
																				expr+=
																				(MultiplicativeExpression
																					expr+=
																					(CastExpression
																						expr=
																						(UnaryExpression
																							expr=
																							(PostfixExpression
																								expr+=
																								(PrimaryExpression
																									id++"printf"
																								),
																								argumentExpressionList+=
																								(ArgumentExpressionList
																									expr+=
																									(AssignmentExpression
																										expr=
																										(ConditionalExpression
																											expr=
																											(LogicalOrExpression
																												expr+=
																												(LogicalAndExpression
																													expr+=
																													(InclusiveOrExpression
																														expr+=
																														(ExclusiveOrExpression
																															expr+=
																															(AndExpression
																																expr+=
																																(EqualityExpression
																																	expr+=
																																	(RelationalExpression
																																		expr+=
																																		(ShiftExpression
																																			expr+=
																																			(AdditiveExpression
																																				expr+=
																																				(MultiplicativeExpression
																																					expr+=
																																					(CastExpression
																																						expr=
																																						(UnaryExpression
																																							expr=
																																							(PostfixExpression
																																								expr+=
																																								(PrimaryExpression
																																									const=
																																									(Constant
																																										str++"\\\"%s\\\\n\\\""
																																									)
																																								)
																																							)
																																						)
																																					)
																																				)
																																			)
																																		)
																																	)
																																)
																															)
																														)
																													)
																												)
																											)
																										)
																									), // end assignment expression
																									(AssignmentExpression
																										expr=
																										(ConditionalExpression
																											expr=
																											(LogicalOrExpression
																												expr+=
																												(LogicalAndExpression
																													expr+=
																													(InclusiveOrExpression
																														expr+=
																														(ExclusiveOrExpression
																															expr+=
																															(AndExpression
																																expr+=
																																(EqualityExpression
																																	expr+=
																																	(RelationalExpression
																																		expr+=
																																		(ShiftExpression
																																			expr+=
																																			(AdditiveExpression
																																				expr+=
																																				(MultiplicativeExpression
																																					expr+=
																																					(CastExpression
																																						expr=
																																						(UnaryExpression
																																							expr=
																																							(PostfixExpression
																																								expr+=
																																								(PrimaryExpression
																																									id++"out"
																																								)
																																							)
																																						)
																																					)
																																				)
																																			)
																																		)
																																	)
																																)
																															)
																														)
																													)
																												)
																											)
																										)
																									) // end assignment expression
																								)
																							)
																						)
																					)
																				)
																			)
																		)
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								), // end expression
								semi++";"
							) // end expression statement
						), // end statement
						// strcpy(out, ...);
						(Statement
							stmt=
							(ExpressionStatement
								expression=
								(Expression
									exprExpr+=
									(AssignmentExpression
										expr=
										(ConditionalExpression
											expr=
											(LogicalOrExpression
												expr+=
												(LogicalAndExpression
													expr+=
													(InclusiveOrExpression
														expr+=
														(ExclusiveOrExpression
															expr+=
															(AndExpression
																expr+=
																(EqualityExpression
																	expr+=
																	(RelationalExpression
																		expr+=
																		(ShiftExpression
																			expr+=
																			(AdditiveExpression
																				expr+=
																				(MultiplicativeExpression
																					expr+=
																					(CastExpression
																						expr=
																						(UnaryExpression
																							expr=
																							(PostfixExpression
																								expr+=
																								(PrimaryExpression
																									id++"strcpy"
																								),
																								argumentExpressionList+=
																								(ArgumentExpressionList
																									expr+=
																									(AssignmentExpression
																										expr=
																										(ConditionalExpression
																											expr=
																											(LogicalOrExpression
																												expr+=
																												(LogicalAndExpression
																													expr+=
																													(InclusiveOrExpression
																														expr+=
																														(ExclusiveOrExpression
																															expr+=
																															(AndExpression
																																expr+=
																																(EqualityExpression
																																	expr+=
																																	(RelationalExpression
																																		expr+=
																																		(ShiftExpression
																																			expr+=
																																			(AdditiveExpression
																																				expr+=
																																				(MultiplicativeExpression
																																					expr+=
																																					(CastExpression
																																						expr=
																																						(UnaryExpression
																																							expr=
																																							(PostfixExpression
																																								expr+=
																																								(PrimaryExpression
																																									id++"out"
																																								)
																																							)
																																						)
																																					)
																																				)
																																			)
																																		)
																																	)
																																)
																															)
																														)
																													)
																												)
																											)
																										)
																									), // end assignment expression
																									(AssignmentExpression
																										expr=
																										(ConditionalExpression
																											expr=
																											(LogicalOrExpression
																												expr+=
																												(LogicalAndExpression
																													expr+=
																													(InclusiveOrExpression
																														expr+=
																														(ExclusiveOrExpression
																															expr+=
																															(AndExpression
																																expr+=
																																(EqualityExpression
																																	expr+=
																																	(RelationalExpression
																																		expr+=
																																		(ShiftExpression
																																			expr+=
																																			(AdditiveExpression
																																				expr+=
																																				(MultiplicativeExpression
																																					expr+=
																																					(CastExpression
																																						expr=
																																						(UnaryExpression
																																							expr=
																																							(PostfixExpression
																																								expr+=
																																								(PrimaryExpression
																																									const=
																																									(Constant
																																										str++"\\\"Hello World!\\\""
																																									)
																																								)
																																							)
																																						)
																																					)
																																				)
																																			)
																																		)
																																	)
																																)
																															)
																														)
																													)
																												)
																											)
																										)
																									) // end assignment expression
																								)
																							)
																						)
																					)
																				)
																			)
																		)
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								), // end expression
								semi++";"
							) // end expression statement
						), // end statement
						// printf(..., out);
						(Statement
							stmt=
							(ExpressionStatement
								expression=
								(Expression
									exprExpr+=
									(AssignmentExpression
										expr=
										(ConditionalExpression
											expr=
											(LogicalOrExpression
												expr+=
												(LogicalAndExpression
													expr+=
													(InclusiveOrExpression
														expr+=
														(ExclusiveOrExpression
															expr+=
															(AndExpression
																expr+=
																(EqualityExpression
																	expr+=
																	(RelationalExpression
																		expr+=
																		(ShiftExpression
																			expr+=
																			(AdditiveExpression
																				expr+=
																				(MultiplicativeExpression
																					expr+=
																					(CastExpression
																						expr=
																						(UnaryExpression
																							expr=
																							(PostfixExpression
																								expr+=
																								(PrimaryExpression
																									id++"printf"
																								),
																								argumentExpressionList+=
																								(ArgumentExpressionList
																									expr+=
																									(AssignmentExpression
																										expr=
																										(ConditionalExpression
																											expr=
																											(LogicalOrExpression
																												expr+=
																												(LogicalAndExpression
																													expr+=
																													(InclusiveOrExpression
																														expr+=
																														(ExclusiveOrExpression
																															expr+=
																															(AndExpression
																																expr+=
																																(EqualityExpression
																																	expr+=
																																	(RelationalExpression
																																		expr+=
																																		(ShiftExpression
																																			expr+=
																																			(AdditiveExpression
																																				expr+=
																																				(MultiplicativeExpression
																																					expr+=
																																					(CastExpression
																																						expr=
																																						(UnaryExpression
																																							expr=
																																							(PostfixExpression
																																								expr+=
																																								(PrimaryExpression
																																									const=
																																									(Constant
																																										str++"\\\"%s\\\\n\\\""
																																									)
																																								)
																																							)
																																						)
																																					)
																																				)
																																			)
																																		)
																																	)
																																)
																															)
																														)
																													)
																												)
																											)
																										)
																									), // end assignment expression
																									(AssignmentExpression
																										expr=
																										(ConditionalExpression
																											expr=
																											(LogicalOrExpression
																												expr+=
																												(LogicalAndExpression
																													expr+=
																													(InclusiveOrExpression
																														expr+=
																														(ExclusiveOrExpression
																															expr+=
																															(AndExpression
																																expr+=
																																(EqualityExpression
																																	expr+=
																																	(RelationalExpression
																																		expr+=
																																		(ShiftExpression
																																			expr+=
																																			(AdditiveExpression
																																				expr+=
																																				(MultiplicativeExpression
																																					expr+=
																																					(CastExpression
																																						expr=
																																						(UnaryExpression
																																							expr=
																																							(PostfixExpression
																																								expr+=
																																								(PrimaryExpression
																																									id++"out"
																																								)
																																							)
																																						)
																																					)
																																				)
																																			)
																																		)
																																	)
																																)
																															)
																														)
																													)
																												)
																											)
																										)
																									) // end assignment expression
																								)
																							)
																						)
																					)
																				)
																			)
																		)
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								), // end expression
								semi++";"
							) // end expression statement
						), // end statement
						// out[...] = ...;
						(Statement
							stmt=
							(ExpressionStatement
								expression=
								(Expression
									exprExpr+=
									(AssignmentExpression
										expr=
										(UnaryExpression
											expr=
											(PostfixExpression
												expr+=
												(PrimaryExpression
													id++"out"
												),
												arrayExpr+=
												(Expression
													exprExpr+=
													(AssignmentExpression
														expr=
														(ConditionalExpression
															expr=
															(LogicalOrExpression
																expr+=
																(LogicalAndExpression
																	expr+=
																	(InclusiveOrExpression
																		expr+=
																		(ExclusiveOrExpression
																			expr+=
																			(AndExpression
																				expr+=
																				(EqualityExpression
																					expr+=
																					(RelationalExpression
																						expr+=
																						(ShiftExpression
																							expr+=
																							(AdditiveExpression
																								expr+=
																								(MultiplicativeExpression
																									expr+=
																									(CastExpression
																										expr=
																										(UnaryExpression
																											expr=
																											(PostfixExpression
																												expr+=
																												(PrimaryExpression
																													const=
																													(Constant
																														dec++"6"
																													)
																												)
																											)
																										)
																									)
																								)
																							)
																						)
																					)
																				)
																			)
																		)
																	)
																)
															)
														) // end conditional expression
													) // end assignment expression
												) // end expression
											) // end assignment expression
										), // end unary expression
										op=
										(AssignmentOperator
											op++"="
										),
										assignmentExpr=
										(AssignmentExpression
											expr=
											(ConditionalExpression
												expr=
												(LogicalOrExpression
													expr+=
													(LogicalAndExpression
														expr+=
														(InclusiveOrExpression
															expr+=
															(ExclusiveOrExpression
																expr+=
																(AndExpression
																	expr+=
																	(EqualityExpression
																		expr+=
																		(RelationalExpression
																			expr+=
																			(ShiftExpression
																				expr+=
																				(AdditiveExpression
																					expr+=
																					(MultiplicativeExpression
																						expr+=
																						(CastExpression
																							expr=
																							(UnaryExpression
																								expr=
																								(PostfixExpression
																									expr+=
																									(PrimaryExpression
																										const=
																										(Constant
																											ch++"'w'"
																										)
																									)
																								)
																							)
																						)
																					)
																				)
																			)
																		)
																		
																	)
																)
															)
														)
													)
												)
											) // end conditional expression
										) // end assignment expression
									) // end assignment expression
								),//end expression
								semi++";"
							)
						), // end statement
						// printf(..., out);
						(Statement
							stmt=
							(ExpressionStatement
								expression=
								(Expression
									exprExpr+=
									(AssignmentExpression
										expr=
										(ConditionalExpression
											expr=
											(LogicalOrExpression
												expr+=
												(LogicalAndExpression
													expr+=
													(InclusiveOrExpression
														expr+=
														(ExclusiveOrExpression
															expr+=
															(AndExpression
																expr+=
																(EqualityExpression
																	expr+=
																	(RelationalExpression
																		expr+=
																		(ShiftExpression
																			expr+=
																			(AdditiveExpression
																				expr+=
																				(MultiplicativeExpression
																					expr+=
																					(CastExpression
																						expr=
																						(UnaryExpression
																							expr=
																							(PostfixExpression
																								expr+=
																								(PrimaryExpression
																									id++"printf"
																								),
																								argumentExpressionList+=
																								(ArgumentExpressionList
																									expr+=
																									(AssignmentExpression
																										expr=
																										(ConditionalExpression
																											expr=
																											(LogicalOrExpression
																												expr+=
																												(LogicalAndExpression
																													expr+=
																													(InclusiveOrExpression
																														expr+=
																														(ExclusiveOrExpression
																															expr+=
																															(AndExpression
																																expr+=
																																(EqualityExpression
																																	expr+=
																																	(RelationalExpression
																																		expr+=
																																		(ShiftExpression
																																			expr+=
																																			(AdditiveExpression
																																				expr+=
																																				(MultiplicativeExpression
																																					expr+=
																																					(CastExpression
																																						expr=
																																						(UnaryExpression
																																							expr=
																																							(PostfixExpression
																																								expr+=
																																								(PrimaryExpression
																																									const=
																																									(Constant
																																										str++"\\\"%s\\\\n\\\""
																																									)
																																								)
																																							)
																																						)
																																					)
																																				)
																																			)
																																		)
																																	)
																																)
																															)
																														)
																													)
																												)
																											)
																										)
																									), // end assignment expression
																									(AssignmentExpression
																										expr=
																										(ConditionalExpression
																											expr=
																											(LogicalOrExpression
																												expr+=
																												(LogicalAndExpression
																													expr+=
																													(InclusiveOrExpression
																														expr+=
																														(ExclusiveOrExpression
																															expr+=
																															(AndExpression
																																expr+=
																																(EqualityExpression
																																	expr+=
																																	(RelationalExpression
																																		expr+=
																																		(ShiftExpression
																																			expr+=
																																			(AdditiveExpression
																																				expr+=
																																				(MultiplicativeExpression
																																					expr+=
																																					(CastExpression
																																						expr=
																																						(UnaryExpression
																																							expr=
																																							(PostfixExpression
																																								expr+=
																																								(PrimaryExpression
																																									id++"out"
																																								)
																																							)
																																						)
																																					)
																																				)
																																			)
																																		)
																																	)
																																)
																															)
																														)
																													)
																												)
																											)
																										)
																									) // end assignment expression
																								)
																							)
																						)
																					)
																				)
																			)
																		)
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								), // end expression
								semi++";"
							) // end expression statement
						), // end statement
						// return statement
						(Statement
							stmt=
							(JumpStatement
								expr=
								(Expression
									exprExpr+=
									(AssignmentExpression
										expr=
										(ConditionalExpression
											expr=
											(LogicalOrExpression
												expr+=
												(LogicalAndExpression
													expr+=
													(InclusiveOrExpression
														expr+=
														(ExclusiveOrExpression
															expr+=
															(AndExpression
																expr+=
																(EqualityExpression
																	expr+=
																	(RelationalExpression
																		expr+=
																		(ShiftExpression
																			expr+=
																			(AdditiveExpression
																				expr+=
																				(MultiplicativeExpression
																					expr+=
																					(CastExpression
																						expr=
																						(UnaryExpression
																							expr=
																							(PostfixExpression
																								expr+=
																								(PrimaryExpression
																									const=
																									(Constant
																										dec++"0"
																									)
																								)
																							)
																						)
																					)
																				)
																			)
																		)
																	)
																	
																)
															)
														)
													)
												)
											)
										)
									)
								), // end expression
								return++"return",
								semi++";"
							) // end jump statement
						) // end second statement
					) // end block list
				) // end body statement
			)
		) // end external declaration
	)
)
//----------------------------------------------------------------------
output file="bin/Test0035_SimpleArray.c"
expected file isSameAsInputFile
