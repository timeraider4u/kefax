/*
 * generated by Xtext 2.9.0-SNAPSHOT
 */
grammar InternalC;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	 memoize=true;
	
	 k=2;
	
	
	 forceHoisting=true;
	
}

@lexer::header {
package at.jku.weiner.c.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package at.jku.weiner.c.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import at.jku.weiner.c.services.CGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private CGrammarAccess grammarAccess;
 	
    public InternalCParser(TokenStream input, CGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected CGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getModelAccess().getModelAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getUnitTranslationUnitParserRuleCall_1_0()); 
	    }
		lv_unit_1_0=ruleTranslationUnit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"unit",
        		lv_unit_1_0, 
        		"at.jku.weiner.c.C.TranslationUnit");
	        afterParserOrEnumRuleCall();
	    }

)
)?

)


;





// Entry rule entryRuleTranslationUnit
entryRuleTranslationUnit returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTranslationUnitRule()); }
	 iv_ruleTranslationUnit=ruleTranslationUnit 
	 { $current=$iv_ruleTranslationUnit.current; } 
	 EOF 
;

// Rule TranslationUnit
ruleTranslationUnit returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Scope.createNewScope("TranslationUnit");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Scope.removeScope();
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTranslationUnitAccess().getTranslationUnitAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getTranslationUnitAccess().getExternalExternalDeclarationParserRuleCall_1_0()); 
	    }
		lv_external_1_0=ruleExternalDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTranslationUnitRule());
	        }
       		add(
       			$current, 
       			"external",
        		lv_external_1_0, 
        		"at.jku.weiner.c.C.ExternalDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)+

)


;





// Entry rule entryRuleExternalDeclaration
entryRuleExternalDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExternalDeclarationRule()); }
	 iv_ruleExternalDeclaration=ruleExternalDeclaration 
	 { $current=$iv_ruleExternalDeclaration.current; } 
	 EOF 
;

// Rule ExternalDeclaration
ruleExternalDeclaration returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Log.log("ExternalDeclaration-enter");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.log("ExternalDeclaration-leave");
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getExternalDeclarationAccess().getExternalDeclarationAction_0(),
            $current);
    }
)


(
(
(
((
(
ruleFunctionDefHead
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getExternalDeclarationAccess().getFunctiondefHeadFunctionDefHeadParserRuleCall_1_0_0_0_0()); 
	    }
		lv_functiondefHead_1_0=ruleFunctionDefHead		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalDeclarationRule());
	        }
       		set(
       			$current, 
       			"functiondefHead",
        		lv_functiondefHead_1_0, 
        		"at.jku.weiner.c.C.FunctionDefHead");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_LEFTBRACE_2=RULE_LEFTBRACE
    { 
    newLeafNode(this_LEFTBRACE_2, grammarAccess.getExternalDeclarationAccess().getLEFTBRACETerminalRuleCall_1_0_0_1()); 
    }


)


(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalDeclarationAccess().getFunctionDefinitionFunctionDefinitionParserRuleCall_1_0_1_0()); 
	    }
		lv_functionDefinition_3_0=ruleFunctionDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalDeclarationRule());
	        }
       		set(
       			$current, 
       			"functionDefinition",
        		lv_functionDefinition_3_0, 
        		"at.jku.weiner.c.C.FunctionDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_RIGHTBRACE_4=RULE_RIGHTBRACE
    { 
    newLeafNode(this_RIGHTBRACE_4, grammarAccess.getExternalDeclarationAccess().getRIGHTBRACETerminalRuleCall_1_0_2()); 
    }


)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalDeclarationAccess().getDeclarationDeclarationParserRuleCall_1_1_0()); 
	    }
		lv_declaration_5_0=ruleDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalDeclarationRule());
	        }
       		set(
       			$current, 
       			"declaration",
        		lv_declaration_5_0, 
        		"at.jku.weiner.c.C.Declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		lv_semi_6_0=RULE_SEMI
		{
			newLeafNode(lv_semi_6_0, grammarAccess.getExternalDeclarationAccess().getSemiSEMITerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"semi",
        		lv_semi_6_0, 
        		"at.jku.weiner.c.C.SEMI");
	    }

)
)

)

)


;





// Entry rule entryRuleFunctionDefHead
entryRuleFunctionDefHead returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionDefHeadRule()); }
	 iv_ruleFunctionDefHead=ruleFunctionDefHead 
	 { $current=$iv_ruleFunctionDefHead.current; } 
	 EOF 
;

// Rule FunctionDefHead
ruleFunctionDefHead returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getFunctionDefHeadAccess().getFunctionDefHeadAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefHeadAccess().getFunDeclSpecifiersDeclarationSpecifiersParserRuleCall_1_0()); 
	    }
		lv_funDeclSpecifiers_1_0=ruleDeclarationSpecifiers		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefHeadRule());
	        }
       		set(
       			$current, 
       			"funDeclSpecifiers",
        		lv_funDeclSpecifiers_1_0, 
        		"at.jku.weiner.c.C.DeclarationSpecifiers");
	        afterParserOrEnumRuleCall();
	    }

)
)?


(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefHeadAccess().getFunDeclaratorDeclaratorParserRuleCall_2_0()); 
	    }
		lv_funDeclarator_2_0=ruleDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefHeadRule());
	        }
       		set(
       			$current, 
       			"funDeclarator",
        		lv_funDeclarator_2_0, 
        		"at.jku.weiner.c.C.Declarator");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefHeadAccess().getFunDeclarationDeclarationParserRuleCall_3_0()); 
	    }
		lv_funDeclaration_3_0=ruleDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefHeadRule());
	        }
       		add(
       			$current, 
       			"funDeclaration",
        		lv_funDeclaration_3_0, 
        		"at.jku.weiner.c.C.Declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*

)


;





// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionDefinitionRule()); }
	 iv_ruleFunctionDefinition=ruleFunctionDefinition 
	 { $current=$iv_ruleFunctionDefinition.current; } 
	 EOF 
;

// Rule FunctionDefinition
ruleFunctionDefinition returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Scope.createNewScope("FunctionDefinition");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Scope.removeScope();
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getFunctionDefinitionAccess().getFunctionDefinitionAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getBodyBodyStatementParserRuleCall_1_0()); 
	    }
		lv_body_1_0=ruleBodyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_1_0, 
        		"at.jku.weiner.c.C.BodyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


;





// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	 iv_ruleDeclaration=ruleDeclaration 
	 { $current=$iv_ruleDeclaration.current; } 
	 EOF 
;

// Rule Declaration
ruleDeclaration returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Scope.setTypedef(false);
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.log("Declaration-leave");
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclarationAccess().getDeclarationAction_0(),
            $current);
    }
)


(
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getSpecifiersDeclarationSpecifiersParserRuleCall_1_0_0()); 
	    }
		lv_specifiers_1_0=ruleDeclarationSpecifiers		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"specifiers",
        		lv_specifiers_1_0, 
        		"at.jku.weiner.c.C.DeclarationSpecifiers");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getInitDeclaratorListInitDeclaratorListParserRuleCall_1_1_0()); 
	    }
		lv_initDeclaratorList_2_0=ruleInitDeclaratorList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		add(
       			$current, 
       			"initDeclaratorList",
        		lv_initDeclaratorList_2_0, 
        		"at.jku.weiner.c.C.InitDeclaratorList");
	        afterParserOrEnumRuleCall();
	    }

)
)?


(
(
		lv_semi_3_0=RULE_SEMI
		{
			newLeafNode(lv_semi_3_0, grammarAccess.getDeclarationAccess().getSemiSEMITerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"semi",
        		lv_semi_3_0, 
        		"at.jku.weiner.c.C.SEMI");
	    }

)
)

)

)


;





// Entry rule entryRuleDeclarationSpecifiers
entryRuleDeclarationSpecifiers returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclarationSpecifiersRule()); }
	 iv_ruleDeclarationSpecifiers=ruleDeclarationSpecifiers 
	 { $current=$iv_ruleDeclarationSpecifiers.current; } 
	 EOF 
;

// Rule DeclarationSpecifiers
ruleDeclarationSpecifiers returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Log.log("DeclarationSpecifiers-enter");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.log("DeclarationSpecifiers-leave");
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifiersAction_0(),
            $current);
    }
)


(
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierStorageClassSpecifierParserRuleCall_1_0_0()); 
	    }
		lv_declarationSpecifier_1_0=ruleStorageClassSpecifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationSpecifiersRule());
	        }
       		add(
       			$current, 
       			"declarationSpecifier",
        		lv_declarationSpecifier_1_0, 
        		"at.jku.weiner.c.C.StorageClassSpecifier");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierTypeSpecifierParserRuleCall_1_1_0()); 
	    }
		lv_declarationSpecifier_2_0=ruleTypeSpecifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationSpecifiersRule());
	        }
       		add(
       			$current, 
       			"declarationSpecifier",
        		lv_declarationSpecifier_2_0, 
        		"at.jku.weiner.c.C.TypeSpecifier");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationSpecifiersAccess().getDeclarationSpecifierTypeQualifierParserRuleCall_1_2_0()); 
	    }
		lv_declarationSpecifier_3_0=ruleTypeQualifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationSpecifiersRule());
	        }
       		add(
       			$current, 
       			"declarationSpecifier",
        		lv_declarationSpecifier_3_0, 
        		"at.jku.weiner.c.C.TypeQualifier");
	        afterParserOrEnumRuleCall();
	    }

)
)

)+

)


;





// Entry rule entryRuleInitDeclaratorList
entryRuleInitDeclaratorList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInitDeclaratorListRule()); }
	 iv_ruleInitDeclaratorList=ruleInitDeclaratorList 
	 { $current=$iv_ruleInitDeclaratorList.current; } 
	 EOF 
;

// Rule InitDeclaratorList
ruleInitDeclaratorList returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Log.log("InitDeclaratorList-enter");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.log("InitDeclaratorList-leave");
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getInitDeclaratorListAccess().getInitDeclaratorListAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getInitDeclaratorListAccess().getInitDeclaratorInitDeclaratorParserRuleCall_1_0()); 
	    }
		lv_initDeclarator_1_0=ruleInitDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitDeclaratorListRule());
	        }
       		add(
       			$current, 
       			"initDeclarator",
        		lv_initDeclarator_1_0, 
        		"at.jku.weiner.c.C.InitDeclarator");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_COMMA_2=RULE_COMMA
    { 
    newLeafNode(this_COMMA_2, grammarAccess.getInitDeclaratorListAccess().getCOMMATerminalRuleCall_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getInitDeclaratorListAccess().getInitDeclarator2InitDeclaratorParserRuleCall_2_1_0()); 
	    }
		lv_initDeclarator2_3_0=ruleInitDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitDeclaratorListRule());
	        }
       		add(
       			$current, 
       			"initDeclarator2",
        		lv_initDeclarator2_3_0, 
        		"at.jku.weiner.c.C.InitDeclarator");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;





// Entry rule entryRuleInitDeclarator
entryRuleInitDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInitDeclaratorRule()); }
	 iv_ruleInitDeclarator=ruleInitDeclarator 
	 { $current=$iv_ruleInitDeclarator.current; } 
	 EOF 
;

// Rule InitDeclarator
ruleInitDeclarator returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Log.log("InitDeclarator-enter");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.log("InitDeclarator-leave");
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getInitDeclaratorAccess().getInitDeclaratorAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getInitDeclaratorAccess().getDeclaratorDeclaratorParserRuleCall_1_0()); 
	    }
		lv_declarator_1_0=ruleDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitDeclaratorRule());
	        }
       		set(
       			$current, 
       			"declarator",
        		lv_declarator_1_0, 
        		"at.jku.weiner.c.C.Declarator");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_ASSIGN_2=RULE_ASSIGN
    { 
    newLeafNode(this_ASSIGN_2, grammarAccess.getInitDeclaratorAccess().getASSIGNTerminalRuleCall_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getInitDeclaratorAccess().getInitializerInitializerParserRuleCall_2_1_0()); 
	    }
		lv_initializer_3_0=ruleInitializer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitDeclaratorRule());
	        }
       		set(
       			$current, 
       			"initializer",
        		lv_initializer_3_0, 
        		"at.jku.weiner.c.C.Initializer");
	        afterParserOrEnumRuleCall();
	    }

)
)

)?

)


;





// Entry rule entryRuleStorageClassSpecifier
entryRuleStorageClassSpecifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStorageClassSpecifierRule()); }
	 iv_ruleStorageClassSpecifier=ruleStorageClassSpecifier 
	 { $current=$iv_ruleStorageClassSpecifier.current; } 
	 EOF 
;

// Rule StorageClassSpecifier
ruleStorageClassSpecifier returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Log.log("StorageClassSpecifier-enter");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.log("StorageClassSpecifier-leave");
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStorageClassSpecifierAccess().getStorageClassSpecifierAction_0(),
            $current);
    }
)


(
(
(
		lv_name_1_0=RULE_KW_TYPEDEF
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStorageClassSpecifierAccess().getNameKW_TYPEDEFTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStorageClassSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"at.jku.weiner.c.C.KW_TYPEDEF");
	    }

)
)
{at.jku.weiner.c.Scope.setTypedef(true);}


    |
(
(
		lv_name_2_0=RULE_KW_EXTERN
		{
			newLeafNode(lv_name_2_0, grammarAccess.getStorageClassSpecifierAccess().getNameKW_EXTERNTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStorageClassSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"at.jku.weiner.c.C.KW_EXTERN");
	    }

)
)


    |
(
(
		lv_name_3_0=RULE_KW_STATIC
		{
			newLeafNode(lv_name_3_0, grammarAccess.getStorageClassSpecifierAccess().getNameKW_STATICTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStorageClassSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"at.jku.weiner.c.C.KW_STATIC");
	    }

)
)


    |
(
(
		lv_name_4_0=RULE_KW_THREADLOCAL
		{
			newLeafNode(lv_name_4_0, grammarAccess.getStorageClassSpecifierAccess().getNameKW_THREADLOCALTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStorageClassSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"at.jku.weiner.c.C.KW_THREADLOCAL");
	    }

)
)


    |
(
(
		lv_name_5_0=RULE_KW_AUTO
		{
			newLeafNode(lv_name_5_0, grammarAccess.getStorageClassSpecifierAccess().getNameKW_AUTOTerminalRuleCall_1_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStorageClassSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"at.jku.weiner.c.C.KW_AUTO");
	    }

)
)


    |
(
(
		lv_name_6_0=RULE_KW_REGISTER
		{
			newLeafNode(lv_name_6_0, grammarAccess.getStorageClassSpecifierAccess().getNameKW_REGISTERTerminalRuleCall_1_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStorageClassSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"at.jku.weiner.c.C.KW_REGISTER");
	    }

)
)

)

)


;





// Entry rule entryRuleTypeSpecifier
entryRuleTypeSpecifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeSpecifierRule()); }
	 iv_ruleTypeSpecifier=ruleTypeSpecifier 
	 { $current=$iv_ruleTypeSpecifier.current; } 
	 EOF 
;

// Rule TypeSpecifier
ruleTypeSpecifier returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Log.log("TypeSpecifier-enter");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.log("TypeSpecifier-leave");
     }:

(
(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeSpecifierAccess().getTypeSpecifierAction_0_0(),
            $current);
    }
)


(
(
		lv_name_1_0=RULE_KW_VOID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTypeSpecifierAccess().getNameKW_VOIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"at.jku.weiner.c.C.KW_VOID");
	    }

)
)

)


    |
(
(
		lv_name_2_0=RULE_KW_CHAR
		{
			newLeafNode(lv_name_2_0, grammarAccess.getTypeSpecifierAccess().getNameKW_CHARTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"at.jku.weiner.c.C.KW_CHAR");
	    }

)
)


    |
(
(
		lv_name_3_0=RULE_KW_SHORT
		{
			newLeafNode(lv_name_3_0, grammarAccess.getTypeSpecifierAccess().getNameKW_SHORTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"at.jku.weiner.c.C.KW_SHORT");
	    }

)
)


    |
(
(
		lv_name_4_0=RULE_KW_INT
		{
			newLeafNode(lv_name_4_0, grammarAccess.getTypeSpecifierAccess().getNameKW_INTTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"at.jku.weiner.c.C.KW_INT");
	    }

)
)
{at.jku.weiner.c.Log.log("found kw_int");}


    |
(
(
		lv_name_5_0=RULE_KW_LONG
		{
			newLeafNode(lv_name_5_0, grammarAccess.getTypeSpecifierAccess().getNameKW_LONGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"at.jku.weiner.c.C.KW_LONG");
	    }

)
)


    |
(
(
		lv_name_6_0=RULE_KW_FLOAT
		{
			newLeafNode(lv_name_6_0, grammarAccess.getTypeSpecifierAccess().getNameKW_FLOATTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"at.jku.weiner.c.C.KW_FLOAT");
	    }

)
)


    |
(
(
		lv_name_7_0=RULE_KW_DOUBLE
		{
			newLeafNode(lv_name_7_0, grammarAccess.getTypeSpecifierAccess().getNameKW_DOUBLETerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"at.jku.weiner.c.C.KW_DOUBLE");
	    }

)
)
{at.jku.weiner.c.Log.log("found kw_double");}


    |
(
(
		lv_name_8_0=RULE_KW_SIGNED
		{
			newLeafNode(lv_name_8_0, grammarAccess.getTypeSpecifierAccess().getNameKW_SIGNEDTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_8_0, 
        		"at.jku.weiner.c.C.KW_SIGNED");
	    }

)
)


    |
(
(
		lv_name_9_0=RULE_KW_UNSIGNED
		{
			newLeafNode(lv_name_9_0, grammarAccess.getTypeSpecifierAccess().getNameKW_UNSIGNEDTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_9_0, 
        		"at.jku.weiner.c.C.KW_UNSIGNED");
	    }

)
)


    |
(
(
		lv_name_10_0=RULE_KW_BOOL
		{
			newLeafNode(lv_name_10_0, grammarAccess.getTypeSpecifierAccess().getNameKW_BOOLTerminalRuleCall_9_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_10_0, 
        		"at.jku.weiner.c.C.KW_BOOL");
	    }

)
)


    |
(
(
		lv_name_11_0=RULE_KW_COMPLEX
		{
			newLeafNode(lv_name_11_0, grammarAccess.getTypeSpecifierAccess().getNameKW_COMPLEXTerminalRuleCall_10_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_11_0, 
        		"at.jku.weiner.c.C.KW_COMPLEX");
	    }

)
)


    |
(
(
		lv_name_12_0=
	'__m128' 
    {
        newLeafNode(lv_name_12_0, grammarAccess.getTypeSpecifierAccess().getName__m128Keyword_11_0());
    }


 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_12_0, "__m128");
	    }

)
)


    |
(
(
		lv_name_13_0=
	'__m128d' 
    {
        newLeafNode(lv_name_13_0, grammarAccess.getTypeSpecifierAccess().getName__m128dKeyword_12_0());
    }


 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_13_0, "__m128d");
	    }

)
)


    |
(
(
		lv_name_14_0=
	'__m128i' 
    {
        newLeafNode(lv_name_14_0, grammarAccess.getTypeSpecifierAccess().getName__m128iKeyword_13_0());
    }


 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSpecifierRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_14_0, "__m128i");
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeSpecifierAccess().getTypeTypedefNameParserRuleCall_14_0()); 
	    }
		lv_type_15_0=ruleTypedefName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeSpecifierRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_15_0, 
        		"at.jku.weiner.c.C.TypedefName");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


;





// Entry rule entryRuleTypedefName
entryRuleTypedefName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypedefNameRule()); }
	 iv_ruleTypedefName=ruleTypedefName 
	 { $current=$iv_ruleTypedefName.current; } 
	 EOF 
;

// Rule TypedefName
ruleTypedefName returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Log.log("TypedefName-enter");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.log("TypedefName-leave");
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypedefNameAccess().getTypedefNameAction_0(),
            $current);
    }
)

{at.jku.weiner.c.Scope.isTypeName(input.LT(1).getText())}?

(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getTypedefNameAccess().getIdIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypedefNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"at.jku.weiner.c.C.ID");
	    }

)
)

)


;





// Entry rule entryRuleSpecifierQualifierList
entryRuleSpecifierQualifierList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecifierQualifierListRule()); }
	 iv_ruleSpecifierQualifierList=ruleSpecifierQualifierList 
	 { $current=$iv_ruleSpecifierQualifierList.current; } 
	 EOF 
;

// Rule SpecifierQualifierList
ruleSpecifierQualifierList returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSpecifierQualifierListAccess().getSpecifierQualifierListAction_0(),
            $current);
    }
)


(
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecifierQualifierListAccess().getTypeSpecifierTypeSpecifierParserRuleCall_1_0_0()); 
	    }
		lv_typeSpecifier_1_0=ruleTypeSpecifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecifierQualifierListRule());
	        }
       		add(
       			$current, 
       			"typeSpecifier",
        		lv_typeSpecifier_1_0, 
        		"at.jku.weiner.c.C.TypeSpecifier");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecifierQualifierListAccess().getTypeQualifierTypeQualifierParserRuleCall_1_1_0()); 
	    }
		lv_typeQualifier_2_0=ruleTypeQualifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecifierQualifierListRule());
	        }
       		add(
       			$current, 
       			"typeQualifier",
        		lv_typeQualifier_2_0, 
        		"at.jku.weiner.c.C.TypeQualifier");
	        afterParserOrEnumRuleCall();
	    }

)
)

)+

)


;





// Entry rule entryRuleTypeQualifier
entryRuleTypeQualifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeQualifierRule()); }
	 iv_ruleTypeQualifier=ruleTypeQualifier 
	 { $current=$iv_ruleTypeQualifier.current; } 
	 EOF 
;

// Rule TypeQualifier
ruleTypeQualifier returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Log.log("TypeQualifier-enter");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.log("TypeQualifier-leave");
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeQualifierAccess().getTypeQualifierAction_0(),
            $current);
    }
)


(
(
(
		lv_type_1_0=RULE_KW_CONST
		{
			newLeafNode(lv_type_1_0, grammarAccess.getTypeQualifierAccess().getTypeKW_CONSTTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeQualifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"at.jku.weiner.c.C.KW_CONST");
	    }

)
)


    |
(
(
		lv_type_2_0=RULE_KW_RESTRICT
		{
			newLeafNode(lv_type_2_0, grammarAccess.getTypeQualifierAccess().getTypeKW_RESTRICTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeQualifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"at.jku.weiner.c.C.KW_RESTRICT");
	    }

)
)


    |
(
(
		lv_type_3_0=RULE_KW_VOLATILE
		{
			newLeafNode(lv_type_3_0, grammarAccess.getTypeQualifierAccess().getTypeKW_VOLATILETerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeQualifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"at.jku.weiner.c.C.KW_VOLATILE");
	    }

)
)


    |
(
(
		lv_type_4_0=RULE_KW_ATOMIC
		{
			newLeafNode(lv_type_4_0, grammarAccess.getTypeQualifierAccess().getTypeKW_ATOMICTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeQualifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"at.jku.weiner.c.C.KW_ATOMIC");
	    }

)
)

)

)


;





// Entry rule entryRuleDeclarator
entryRuleDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclaratorRule()); }
	 iv_ruleDeclarator=ruleDeclarator 
	 { $current=$iv_ruleDeclarator.current; } 
	 EOF 
;

// Rule Declarator
ruleDeclarator returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Log.log("Declarator-enter");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.log("Declarator-leave");
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclaratorAccess().getDeclaratorAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaratorAccess().getPointerPointerParserRuleCall_1_0()); 
	    }
		lv_pointer_1_0=rulePointer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaratorRule());
	        }
       		set(
       			$current, 
       			"pointer",
        		lv_pointer_1_0, 
        		"at.jku.weiner.c.C.Pointer");
	        afterParserOrEnumRuleCall();
	    }

)
)?


(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaratorAccess().getDeclaratorDirectDeclaratorParserRuleCall_2_0()); 
	    }
		lv_declarator_2_0=ruleDirectDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaratorRule());
	        }
       		set(
       			$current, 
       			"declarator",
        		lv_declarator_2_0, 
        		"at.jku.weiner.c.C.DirectDeclarator");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


;





// Entry rule entryRuleDirectDeclarator
entryRuleDirectDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDirectDeclaratorRule()); }
	 iv_ruleDirectDeclarator=ruleDirectDeclarator 
	 { $current=$iv_ruleDirectDeclarator.current; } 
	 EOF 
;

// Rule DirectDeclarator
ruleDirectDeclarator returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Log.log("DirectDeclarator-enter");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.log("DirectDeclarator-leave");
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDirectDeclaratorAccess().getDirectDeclaratorAction_0(),
            $current);
    }
)


({at.jku.weiner.c.Scope.setTemp(input);}

(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getDirectDeclaratorAccess().getIdIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDirectDeclaratorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"at.jku.weiner.c.C.ID");
	    }

)
)
{at.jku.weiner.c.Scope.addTypedefIfIsTypedef();}


    |
(
this_LEFTPAREN_2=RULE_LEFTPAREN
    { 
    newLeafNode(this_LEFTPAREN_2, grammarAccess.getDirectDeclaratorAccess().getLEFTPARENTerminalRuleCall_1_1_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getDirectDeclaratorAccess().getDeclaratorDeclaratorParserRuleCall_1_1_1_0()); 
	    }
		lv_declarator_3_0=ruleDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirectDeclaratorRule());
	        }
       		set(
       			$current, 
       			"declarator",
        		lv_declarator_3_0, 
        		"at.jku.weiner.c.C.Declarator");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_RIGHTPAREN_4=RULE_RIGHTPAREN
    { 
    newLeafNode(this_RIGHTPAREN_4, grammarAccess.getDirectDeclaratorAccess().getRIGHTPARENTerminalRuleCall_1_1_2()); 
    }


)

)


(
(
		{ 
	        newCompositeNode(grammarAccess.getDirectDeclaratorAccess().getDeclaratorSuffixDeclaratorSuffixParserRuleCall_2_0()); 
	    }
		lv_declaratorSuffix_5_0=ruleDeclaratorSuffix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirectDeclaratorRule());
	        }
       		add(
       			$current, 
       			"declaratorSuffix",
        		lv_declaratorSuffix_5_0, 
        		"at.jku.weiner.c.C.DeclaratorSuffix");
	        afterParserOrEnumRuleCall();
	    }

)
)*

)


;





// Entry rule entryRuleDeclaratorSuffix
entryRuleDeclaratorSuffix returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclaratorSuffixRule()); }
	 iv_ruleDeclaratorSuffix=ruleDeclaratorSuffix 
	 { $current=$iv_ruleDeclaratorSuffix.current; } 
	 EOF 
;

// Rule DeclaratorSuffix
ruleDeclaratorSuffix returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeclaratorSuffixAccess().getDeclaratorSuffixAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaratorSuffixAccess().getLastSuffixDirectDeclaratorLastSuffixParserRuleCall_1_0()); 
	    }
		lv_lastSuffix_1_0=ruleDirectDeclaratorLastSuffix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaratorSuffixRule());
	        }
       		set(
       			$current, 
       			"lastSuffix",
        		lv_lastSuffix_1_0, 
        		"at.jku.weiner.c.C.DirectDeclaratorLastSuffix");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


;





// Entry rule entryRuleDirectDeclaratorLastSuffix
entryRuleDirectDeclaratorLastSuffix returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDirectDeclaratorLastSuffixRule()); }
	 iv_ruleDirectDeclaratorLastSuffix=ruleDirectDeclaratorLastSuffix 
	 { $current=$iv_ruleDirectDeclaratorLastSuffix.current; } 
	 EOF 
;

// Rule DirectDeclaratorLastSuffix
ruleDirectDeclaratorLastSuffix returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDirectDeclaratorLastSuffixAccess().getDirectDeclaratorLastSuffixAction_0(),
            $current);
    }
)


this_LEFTPAREN_1=RULE_LEFTPAREN
    { 
    newLeafNode(this_LEFTPAREN_1, grammarAccess.getDirectDeclaratorLastSuffixAccess().getLEFTPARENTerminalRuleCall_1()); 
    }



(
(
(
		{ 
	        newCompositeNode(grammarAccess.getDirectDeclaratorLastSuffixAccess().getParameterTypeListParameterTypeListParserRuleCall_2_0_0()); 
	    }
		lv_parameterTypeList_2_0=ruleParameterTypeList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirectDeclaratorLastSuffixRule());
	        }
       		add(
       			$current, 
       			"parameterTypeList",
        		lv_parameterTypeList_2_0, 
        		"at.jku.weiner.c.C.ParameterTypeList");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getDirectDeclaratorLastSuffixAccess().getIdentifierListIdentifierListParserRuleCall_2_1_0()); 
	    }
		lv_identifierList_3_0=ruleIdentifierList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirectDeclaratorLastSuffixRule());
	        }
       		set(
       			$current, 
       			"identifierList",
        		lv_identifierList_3_0, 
        		"at.jku.weiner.c.C.IdentifierList");
	        afterParserOrEnumRuleCall();
	    }

)
)?

)


this_RIGHTPAREN_4=RULE_RIGHTPAREN
    { 
    newLeafNode(this_RIGHTPAREN_4, grammarAccess.getDirectDeclaratorLastSuffixAccess().getRIGHTPARENTerminalRuleCall_3()); 
    }


)


;





// Entry rule entryRulePointer
entryRulePointer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPointerRule()); }
	 iv_rulePointer=rulePointer 
	 { $current=$iv_rulePointer.current; } 
	 EOF 
;

// Rule Pointer
rulePointer returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPointerAccess().getPointerAction_0(),
            $current);
    }
)


(
(
(
(
		lv_star_1_0=RULE_STAR
		{
			newLeafNode(lv_star_1_0, grammarAccess.getPointerAccess().getStarSTARTerminalRuleCall_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPointerRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"star",
        		lv_star_1_0, 
        		"at.jku.weiner.c.C.STAR");
	    }

)
)


    |
(
(
		lv_caret_2_0=RULE_CARET
		{
			newLeafNode(lv_caret_2_0, grammarAccess.getPointerAccess().getCaretCARETTerminalRuleCall_1_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPointerRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"caret",
        		lv_caret_2_0, 
        		"at.jku.weiner.c.C.CARET");
	    }

)
)

)


(
(
		{ 
	        newCompositeNode(grammarAccess.getPointerAccess().getTypeQualifierListTypeQualifierListParserRuleCall_1_1_0()); 
	    }
		lv_typeQualifierList_3_0=ruleTypeQualifierList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPointerRule());
	        }
       		add(
       			$current, 
       			"typeQualifierList",
        		lv_typeQualifierList_3_0, 
        		"at.jku.weiner.c.C.TypeQualifierList");
	        afterParserOrEnumRuleCall();
	    }

)
)?

)*

)


;





// Entry rule entryRuleTypeQualifierList
entryRuleTypeQualifierList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeQualifierListRule()); }
	 iv_ruleTypeQualifierList=ruleTypeQualifierList 
	 { $current=$iv_ruleTypeQualifierList.current; } 
	 EOF 
;

// Rule TypeQualifierList
ruleTypeQualifierList returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeQualifierListAccess().getTypeQualifierListAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeQualifierListAccess().getTypeQualifierTypeQualifierParserRuleCall_1_0()); 
	    }
		lv_typeQualifier_1_0=ruleTypeQualifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeQualifierListRule());
	        }
       		add(
       			$current, 
       			"typeQualifier",
        		lv_typeQualifier_1_0, 
        		"at.jku.weiner.c.C.TypeQualifier");
	        afterParserOrEnumRuleCall();
	    }

)
)+

)


;





// Entry rule entryRuleParameterTypeList
entryRuleParameterTypeList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterTypeListRule()); }
	 iv_ruleParameterTypeList=ruleParameterTypeList 
	 { $current=$iv_ruleParameterTypeList.current; } 
	 EOF 
;

// Rule ParameterTypeList
ruleParameterTypeList returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getParameterTypeListAccess().getParameterTypeListAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterTypeListAccess().getListParameterListParserRuleCall_1_0()); 
	    }
		lv_list_1_0=ruleParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterTypeListRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_1_0, 
        		"at.jku.weiner.c.C.ParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_COMMA_2=RULE_COMMA
    { 
    newLeafNode(this_COMMA_2, grammarAccess.getParameterTypeListAccess().getCOMMATerminalRuleCall_2_0()); 
    }



this_ELLIPSIS_3=RULE_ELLIPSIS
    { 
    newLeafNode(this_ELLIPSIS_3, grammarAccess.getParameterTypeListAccess().getELLIPSISTerminalRuleCall_2_1()); 
    }


)?

)


;





// Entry rule entryRuleParameterList
entryRuleParameterList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterListRule()); }
	 iv_ruleParameterList=ruleParameterList 
	 { $current=$iv_ruleParameterList.current; } 
	 EOF 
;

// Rule ParameterList
ruleParameterList returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getParameterListAccess().getParameterListAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterListAccess().getParameterDeclarationParameterDeclarationParserRuleCall_1_0()); 
	    }
		lv_parameterDeclaration_1_0=ruleParameterDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterListRule());
	        }
       		add(
       			$current, 
       			"parameterDeclaration",
        		lv_parameterDeclaration_1_0, 
        		"at.jku.weiner.c.C.ParameterDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_COMMA_2=RULE_COMMA
    { 
    newLeafNode(this_COMMA_2, grammarAccess.getParameterListAccess().getCOMMATerminalRuleCall_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterListAccess().getParameterDeclarationParameterDeclarationParserRuleCall_2_1_0()); 
	    }
		lv_parameterDeclaration_3_0=ruleParameterDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterListRule());
	        }
       		add(
       			$current, 
       			"parameterDeclaration",
        		lv_parameterDeclaration_3_0, 
        		"at.jku.weiner.c.C.ParameterDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;





// Entry rule entryRuleParameterDeclaration
entryRuleParameterDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterDeclarationRule()); }
	 iv_ruleParameterDeclaration=ruleParameterDeclaration 
	 { $current=$iv_ruleParameterDeclaration.current; } 
	 EOF 
;

// Rule ParameterDeclaration
ruleParameterDeclaration returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getParameterDeclarationAccess().getParameterDeclarationAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterDeclarationAccess().getDeclSpecifiersDeclarationSpecifiersParserRuleCall_1_0()); 
	    }
		lv_declSpecifiers_1_0=ruleDeclarationSpecifiers		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterDeclarationRule());
	        }
       		set(
       			$current, 
       			"declSpecifiers",
        		lv_declSpecifiers_1_0, 
        		"at.jku.weiner.c.C.DeclarationSpecifiers");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterDeclarationAccess().getDeclaratorDeclaratorParserRuleCall_2_0()); 
	    }
		lv_declarator_2_0=ruleDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterDeclarationRule());
	        }
       		set(
       			$current, 
       			"declarator",
        		lv_declarator_2_0, 
        		"at.jku.weiner.c.C.Declarator");
	        afterParserOrEnumRuleCall();
	    }

)
)?

)


;





// Entry rule entryRuleIdentifierList
entryRuleIdentifierList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdentifierListRule()); }
	 iv_ruleIdentifierList=ruleIdentifierList 
	 { $current=$iv_ruleIdentifierList.current; } 
	 EOF 
;

// Rule IdentifierList
ruleIdentifierList returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getIdentifierListAccess().getIdentifierListAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getIdentifierListAccess().getIdMyIdentifierParserRuleCall_1_0()); 
	    }
		lv_id_1_0=ruleMyIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIdentifierListRule());
	        }
       		add(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"at.jku.weiner.c.C.MyIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_COMMA_2=RULE_COMMA
    { 
    newLeafNode(this_COMMA_2, grammarAccess.getIdentifierListAccess().getCOMMATerminalRuleCall_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIdentifierListAccess().getIdMyIdentifierParserRuleCall_2_1_0()); 
	    }
		lv_id_3_0=ruleMyIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIdentifierListRule());
	        }
       		add(
       			$current, 
       			"id",
        		lv_id_3_0, 
        		"at.jku.weiner.c.C.MyIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;





// Entry rule entryRuleMyIdentifier
entryRuleMyIdentifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMyIdentifierRule()); }
	 iv_ruleMyIdentifier=ruleMyIdentifier 
	 { $current=$iv_ruleMyIdentifier.current; } 
	 EOF 
;

// Rule MyIdentifier
ruleMyIdentifier returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMyIdentifierAccess().getMyIdentifierAction_0(),
            $current);
    }
)


(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getMyIdentifierAccess().getIdIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMyIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"at.jku.weiner.c.C.ID");
	    }

)
)

)


;





// Entry rule entryRuleTypeName
entryRuleTypeName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeNameRule()); }
	 iv_ruleTypeName=ruleTypeName 
	 { $current=$iv_ruleTypeName.current; } 
	 EOF 
;

// Rule TypeName
ruleTypeName returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeNameAccess().getTypeNameAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeNameAccess().getListSpecifierQualifierListParserRuleCall_1_0()); 
	    }
		lv_list_1_0=ruleSpecifierQualifierList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeNameRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_1_0, 
        		"at.jku.weiner.c.C.SpecifierQualifierList");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


;





// Entry rule entryRuleInitializer
entryRuleInitializer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInitializerRule()); }
	 iv_ruleInitializer=ruleInitializer 
	 { $current=$iv_ruleInitializer.current; } 
	 EOF 
;

// Rule Initializer
ruleInitializer returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getInitializerAccess().getInitializerAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getInitializerAccess().getExprAssignmentExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleAssignmentExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitializerRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"at.jku.weiner.c.C.AssignmentExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


;





// Entry rule entryRuleBlockList
entryRuleBlockList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlockListRule()); }
	 iv_ruleBlockList=ruleBlockList 
	 { $current=$iv_ruleBlockList.current; } 
	 EOF 
;

// Rule BlockList
ruleBlockList returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Log.log("BlockList-enter");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.log("BlockList-enter");
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getBlockListAccess().getBlockListAction_0(),
            $current);
    }
)


(
(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockListAccess().getDeclarationDeclarationParserRuleCall_1_0_0()); 
	    }
		lv_declaration_1_0=ruleDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockListRule());
	        }
       		add(
       			$current, 
       			"declaration",
        		lv_declaration_1_0, 
        		"at.jku.weiner.c.C.Declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockListAccess().getStatementStatementParserRuleCall_1_1_0()); 
	    }
		lv_statement_2_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockListRule());
	        }
       		add(
       			$current, 
       			"statement",
        		lv_statement_2_0, 
        		"at.jku.weiner.c.C.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)+

)


;





// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	 iv_ruleStatement=ruleStatement 
	 { $current=$iv_ruleStatement.current; } 
	 EOF 
;

// Rule Statement
ruleStatement returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStatementAccess().getStatementAction_0(),
            $current);
    }
)


(
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getStmtLabeledStatementParserRuleCall_1_0_0()); 
	    }
		lv_stmt_1_0=ruleLabeledStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"stmt",
        		lv_stmt_1_0, 
        		"at.jku.weiner.c.C.LabeledStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getStmtCompoundStatementParserRuleCall_1_1_0()); 
	    }
		lv_stmt_2_0=ruleCompoundStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"stmt",
        		lv_stmt_2_0, 
        		"at.jku.weiner.c.C.CompoundStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getStmtExpressionStatementParserRuleCall_1_2_0()); 
	    }
		lv_stmt_3_0=ruleExpressionStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"stmt",
        		lv_stmt_3_0, 
        		"at.jku.weiner.c.C.ExpressionStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getStmtSelectionStatementParserRuleCall_1_3_0()); 
	    }
		lv_stmt_4_0=ruleSelectionStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"stmt",
        		lv_stmt_4_0, 
        		"at.jku.weiner.c.C.SelectionStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getStmtIterationStatementParserRuleCall_1_4_0()); 
	    }
		lv_stmt_5_0=ruleIterationStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"stmt",
        		lv_stmt_5_0, 
        		"at.jku.weiner.c.C.IterationStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getStmtJumpStatementParserRuleCall_1_5_0()); 
	    }
		lv_stmt_6_0=ruleJumpStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"stmt",
        		lv_stmt_6_0, 
        		"at.jku.weiner.c.C.JumpStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getStmtAsmStatementParserRuleCall_1_6_0()); 
	    }
		lv_stmt_7_0=ruleAsmStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"stmt",
        		lv_stmt_7_0, 
        		"at.jku.weiner.c.C.AsmStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)

)


;





// Entry rule entryRuleLabeledStatement
entryRuleLabeledStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLabeledStatementRule()); }
	 iv_ruleLabeledStatement=ruleLabeledStatement 
	 { $current=$iv_ruleLabeledStatement.current; } 
	 EOF 
;

// Rule LabeledStatement
ruleLabeledStatement returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getLabeledStatementAccess().getLabeledStatementAction_0(),
            $current);
    }
)


(
(
(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getLabeledStatementAccess().getIdIDTerminalRuleCall_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabeledStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"at.jku.weiner.c.C.ID");
	    }

)
)


this_COLON_2=RULE_COLON
    { 
    newLeafNode(this_COLON_2, grammarAccess.getLabeledStatementAccess().getCOLONTerminalRuleCall_1_0_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getLabeledStatementAccess().getLStmtStatementParserRuleCall_1_0_2_0()); 
	    }
		lv_lStmt_3_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabeledStatementRule());
	        }
       		set(
       			$current, 
       			"lStmt",
        		lv_lStmt_3_0, 
        		"at.jku.weiner.c.C.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


    |
(
(
(
		lv_case_4_0=RULE_KW_CASE
		{
			newLeafNode(lv_case_4_0, grammarAccess.getLabeledStatementAccess().getCaseKW_CASETerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabeledStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"case",
        		lv_case_4_0, 
        		"at.jku.weiner.c.C.KW_CASE");
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getLabeledStatementAccess().getExprConstantExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_expr_5_0=ruleConstantExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabeledStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_5_0, 
        		"at.jku.weiner.c.C.ConstantExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_COLON_6=RULE_COLON
    { 
    newLeafNode(this_COLON_6, grammarAccess.getLabeledStatementAccess().getCOLONTerminalRuleCall_1_1_2()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getLabeledStatementAccess().getLStmtStatementParserRuleCall_1_1_3_0()); 
	    }
		lv_lStmt_7_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabeledStatementRule());
	        }
       		set(
       			$current, 
       			"lStmt",
        		lv_lStmt_7_0, 
        		"at.jku.weiner.c.C.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


    |
(
(
(
		lv_default_8_0=RULE_KW_DEFAULT
		{
			newLeafNode(lv_default_8_0, grammarAccess.getLabeledStatementAccess().getDefaultKW_DEFAULTTerminalRuleCall_1_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabeledStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"default",
        		lv_default_8_0, 
        		"at.jku.weiner.c.C.KW_DEFAULT");
	    }

)
)


this_COLON_9=RULE_COLON
    { 
    newLeafNode(this_COLON_9, grammarAccess.getLabeledStatementAccess().getCOLONTerminalRuleCall_1_2_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getLabeledStatementAccess().getLStmtStatementParserRuleCall_1_2_2_0()); 
	    }
		lv_lStmt_10_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabeledStatementRule());
	        }
       		set(
       			$current, 
       			"lStmt",
        		lv_lStmt_10_0, 
        		"at.jku.weiner.c.C.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)

)

)


;





// Entry rule entryRuleCompoundStatement
entryRuleCompoundStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompoundStatementRule()); }
	 iv_ruleCompoundStatement=ruleCompoundStatement 
	 { $current=$iv_ruleCompoundStatement.current; } 
	 EOF 
;

// Rule CompoundStatement
ruleCompoundStatement returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getCompoundStatementAccess().getCompoundStatementAction_0(),
            $current);
    }
)


this_LEFTBRACE_1=RULE_LEFTBRACE
    { 
    newLeafNode(this_LEFTBRACE_1, grammarAccess.getCompoundStatementAccess().getLEFTBRACETerminalRuleCall_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getCompoundStatementAccess().getBodyBodyStatementParserRuleCall_2_0()); 
	    }
		lv_body_2_0=ruleBodyStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompoundStatementRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_2_0, 
        		"at.jku.weiner.c.C.BodyStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_RIGHTBRACE_3=RULE_RIGHTBRACE
    { 
    newLeafNode(this_RIGHTBRACE_3, grammarAccess.getCompoundStatementAccess().getRIGHTBRACETerminalRuleCall_3()); 
    }


)


;





// Entry rule entryRuleBodyStatement
entryRuleBodyStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBodyStatementRule()); }
	 iv_ruleBodyStatement=ruleBodyStatement 
	 { $current=$iv_ruleBodyStatement.current; } 
	 EOF 
;

// Rule BodyStatement
ruleBodyStatement returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Log.log("BodyStatement-enter");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.log("BodyStatement-leave");
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getBodyStatementAccess().getBodyStatementAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getBodyStatementAccess().getBlockListBlockListParserRuleCall_1_0()); 
	    }
		lv_blockList_1_0=ruleBlockList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBodyStatementRule());
	        }
       		add(
       			$current, 
       			"blockList",
        		lv_blockList_1_0, 
        		"at.jku.weiner.c.C.BlockList");
	        afterParserOrEnumRuleCall();
	    }

)
)?

)


;





// Entry rule entryRuleExpressionStatement
entryRuleExpressionStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionStatementRule()); }
	 iv_ruleExpressionStatement=ruleExpressionStatement 
	 { $current=$iv_ruleExpressionStatement.current; } 
	 EOF 
;

// Rule ExpressionStatement
ruleExpressionStatement returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Log.log("ExpressionStatement-enter");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.log("ExpressionStatement-enter");
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpressionStatementAccess().getExpressionStatementAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_1_0, 
        		"at.jku.weiner.c.C.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?


(
(
		lv_semi_2_0=RULE_SEMI
		{
			newLeafNode(lv_semi_2_0, grammarAccess.getExpressionStatementAccess().getSemiSEMITerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpressionStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"semi",
        		lv_semi_2_0, 
        		"at.jku.weiner.c.C.SEMI");
	    }

)
)

)


;





// Entry rule entryRuleSelectionStatement
entryRuleSelectionStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectionStatementRule()); }
	 iv_ruleSelectionStatement=ruleSelectionStatement 
	 { $current=$iv_ruleSelectionStatement.current; } 
	 EOF 
;

// Rule SelectionStatement
ruleSelectionStatement returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSelectionStatementAccess().getSelectionStatementAction_0(),
            $current);
    }
)


(
(
(
(
		lv_if_1_0=RULE_KW_IF
		{
			newLeafNode(lv_if_1_0, grammarAccess.getSelectionStatementAccess().getIfKW_IFTerminalRuleCall_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSelectionStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"if",
        		lv_if_1_0, 
        		"at.jku.weiner.c.C.KW_IF");
	    }

)
)


this_LEFTPAREN_2=RULE_LEFTPAREN
    { 
    newLeafNode(this_LEFTPAREN_2, grammarAccess.getSelectionStatementAccess().getLEFTPARENTerminalRuleCall_1_0_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionStatementAccess().getExprExpressionParserRuleCall_1_0_2_0()); 
	    }
		lv_expr_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_3_0, 
        		"at.jku.weiner.c.C.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_RIGHTPAREN_4=RULE_RIGHTPAREN
    { 
    newLeafNode(this_RIGHTPAREN_4, grammarAccess.getSelectionStatementAccess().getRIGHTPARENTerminalRuleCall_1_0_3()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionStatementAccess().getIfStatementStatementParserRuleCall_1_0_4_0()); 
	    }
		lv_ifStatement_5_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionStatementRule());
	        }
       		set(
       			$current, 
       			"ifStatement",
        		lv_ifStatement_5_0, 
        		"at.jku.weiner.c.C.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
((
(
RULE_KW_ELSE

)
)=>
(
		lv_else_6_0=RULE_KW_ELSE
		{
			newLeafNode(lv_else_6_0, grammarAccess.getSelectionStatementAccess().getElseKW_ELSETerminalRuleCall_1_0_5_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSelectionStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"else",
        		lv_else_6_0, 
        		"at.jku.weiner.c.C.KW_ELSE");
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionStatementAccess().getElseStatementStatementParserRuleCall_1_0_5_1_0()); 
	    }
		lv_elseStatement_7_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionStatementRule());
	        }
       		set(
       			$current, 
       			"elseStatement",
        		lv_elseStatement_7_0, 
        		"at.jku.weiner.c.C.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)?

)


    |
(
(
(
		lv_switch_8_0=RULE_KW_SWITCH
		{
			newLeafNode(lv_switch_8_0, grammarAccess.getSelectionStatementAccess().getSwitchKW_SWITCHTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSelectionStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"switch",
        		lv_switch_8_0, 
        		"at.jku.weiner.c.C.KW_SWITCH");
	    }

)
)


this_LEFTPAREN_9=RULE_LEFTPAREN
    { 
    newLeafNode(this_LEFTPAREN_9, grammarAccess.getSelectionStatementAccess().getLEFTPARENTerminalRuleCall_1_1_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionStatementAccess().getExprExpressionParserRuleCall_1_1_2_0()); 
	    }
		lv_expr_10_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_10_0, 
        		"at.jku.weiner.c.C.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_RIGHTPAREN_11=RULE_RIGHTPAREN
    { 
    newLeafNode(this_RIGHTPAREN_11, grammarAccess.getSelectionStatementAccess().getRIGHTPARENTerminalRuleCall_1_1_3()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionStatementAccess().getSwitchStatementStatementParserRuleCall_1_1_4_0()); 
	    }
		lv_switchStatement_12_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionStatementRule());
	        }
       		set(
       			$current, 
       			"switchStatement",
        		lv_switchStatement_12_0, 
        		"at.jku.weiner.c.C.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)

)

)


;





// Entry rule entryRuleIterationStatement
entryRuleIterationStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIterationStatementRule()); }
	 iv_ruleIterationStatement=ruleIterationStatement 
	 { $current=$iv_ruleIterationStatement.current; } 
	 EOF 
;

// Rule IterationStatement
ruleIterationStatement returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getIterationStatementAccess().getIterationStatementAction_0(),
            $current);
    }
)


(
(
(
(
		lv_while_1_0=RULE_KW_WHILE
		{
			newLeafNode(lv_while_1_0, grammarAccess.getIterationStatementAccess().getWhileKW_WHILETerminalRuleCall_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIterationStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"while",
        		lv_while_1_0, 
        		"at.jku.weiner.c.C.KW_WHILE");
	    }

)
)


this_LEFTPAREN_2=RULE_LEFTPAREN
    { 
    newLeafNode(this_LEFTPAREN_2, grammarAccess.getIterationStatementAccess().getLEFTPARENTerminalRuleCall_1_0_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getExprExpressionParserRuleCall_1_0_2_0()); 
	    }
		lv_expr_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_3_0, 
        		"at.jku.weiner.c.C.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_RIGHTPAREN_4=RULE_RIGHTPAREN
    { 
    newLeafNode(this_RIGHTPAREN_4, grammarAccess.getIterationStatementAccess().getRIGHTPARENTerminalRuleCall_1_0_3()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getStatementStatementParserRuleCall_1_0_4_0()); 
	    }
		lv_statement_5_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"statement",
        		lv_statement_5_0, 
        		"at.jku.weiner.c.C.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


    |
(
(
(
		lv_do_6_0=RULE_KW_DO
		{
			newLeafNode(lv_do_6_0, grammarAccess.getIterationStatementAccess().getDoKW_DOTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIterationStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"do",
        		lv_do_6_0, 
        		"at.jku.weiner.c.C.KW_DO");
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getStatementStatementParserRuleCall_1_1_1_0()); 
	    }
		lv_statement_7_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"statement",
        		lv_statement_7_0, 
        		"at.jku.weiner.c.C.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_KW_WHILE_8=RULE_KW_WHILE
    { 
    newLeafNode(this_KW_WHILE_8, grammarAccess.getIterationStatementAccess().getKW_WHILETerminalRuleCall_1_1_2()); 
    }



this_LEFTPAREN_9=RULE_LEFTPAREN
    { 
    newLeafNode(this_LEFTPAREN_9, grammarAccess.getIterationStatementAccess().getLEFTPARENTerminalRuleCall_1_1_3()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getExprExpressionParserRuleCall_1_1_4_0()); 
	    }
		lv_expr_10_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_10_0, 
        		"at.jku.weiner.c.C.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_RIGHTPAREN_11=RULE_RIGHTPAREN
    { 
    newLeafNode(this_RIGHTPAREN_11, grammarAccess.getIterationStatementAccess().getRIGHTPARENTerminalRuleCall_1_1_5()); 
    }



(
(
		lv_semi_12_0=RULE_SEMI
		{
			newLeafNode(lv_semi_12_0, grammarAccess.getIterationStatementAccess().getSemiSEMITerminalRuleCall_1_1_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIterationStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"semi",
        		lv_semi_12_0, 
        		"at.jku.weiner.c.C.SEMI");
	    }

)
)

)


    |
(
(
(
		lv_for_13_0=RULE_KW_FOR
		{
			newLeafNode(lv_for_13_0, grammarAccess.getIterationStatementAccess().getForKW_FORTerminalRuleCall_1_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIterationStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"for",
        		lv_for_13_0, 
        		"at.jku.weiner.c.C.KW_FOR");
	    }

)
)


this_LEFTPAREN_14=RULE_LEFTPAREN
    { 
    newLeafNode(this_LEFTPAREN_14, grammarAccess.getIterationStatementAccess().getLEFTPARENTerminalRuleCall_1_2_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getInitExprExpressionParserRuleCall_1_2_2_0()); 
	    }
		lv_initExpr_15_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"initExpr",
        		lv_initExpr_15_0, 
        		"at.jku.weiner.c.C.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_SEMI_16=RULE_SEMI
    { 
    newLeafNode(this_SEMI_16, grammarAccess.getIterationStatementAccess().getSEMITerminalRuleCall_1_2_3()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getExprExpressionParserRuleCall_1_2_4_0()); 
	    }
		lv_expr_17_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_17_0, 
        		"at.jku.weiner.c.C.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_SEMI_18=RULE_SEMI
    { 
    newLeafNode(this_SEMI_18, grammarAccess.getIterationStatementAccess().getSEMITerminalRuleCall_1_2_5()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getIncExprExpressionParserRuleCall_1_2_6_0()); 
	    }
		lv_incExpr_19_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"incExpr",
        		lv_incExpr_19_0, 
        		"at.jku.weiner.c.C.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_RIGHTPAREN_20=RULE_RIGHTPAREN
    { 
    newLeafNode(this_RIGHTPAREN_20, grammarAccess.getIterationStatementAccess().getRIGHTPARENTerminalRuleCall_1_2_7()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getStatementStatementParserRuleCall_1_2_8_0()); 
	    }
		lv_statement_21_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"statement",
        		lv_statement_21_0, 
        		"at.jku.weiner.c.C.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


    |
(
(
(
		lv_for_22_0=RULE_KW_FOR
		{
			newLeafNode(lv_for_22_0, grammarAccess.getIterationStatementAccess().getForKW_FORTerminalRuleCall_1_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIterationStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"for",
        		lv_for_22_0, 
        		"at.jku.weiner.c.C.KW_FOR");
	    }

)
)


this_LEFTPAREN_23=RULE_LEFTPAREN
    { 
    newLeafNode(this_LEFTPAREN_23, grammarAccess.getIterationStatementAccess().getLEFTPARENTerminalRuleCall_1_3_1()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getInitDeclDeclarationParserRuleCall_1_3_2_0()); 
	    }
		lv_initDecl_24_0=ruleDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"initDecl",
        		lv_initDecl_24_0, 
        		"at.jku.weiner.c.C.Declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getExprExpressionParserRuleCall_1_3_3_0()); 
	    }
		lv_expr_25_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_25_0, 
        		"at.jku.weiner.c.C.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_SEMI_26=RULE_SEMI
    { 
    newLeafNode(this_SEMI_26, grammarAccess.getIterationStatementAccess().getSEMITerminalRuleCall_1_3_4()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getIncExprExpressionParserRuleCall_1_3_5_0()); 
	    }
		lv_incExpr_27_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"incExpr",
        		lv_incExpr_27_0, 
        		"at.jku.weiner.c.C.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_RIGHTPAREN_28=RULE_RIGHTPAREN
    { 
    newLeafNode(this_RIGHTPAREN_28, grammarAccess.getIterationStatementAccess().getRIGHTPARENTerminalRuleCall_1_3_6()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getIterationStatementAccess().getStatementStatementParserRuleCall_1_3_7_0()); 
	    }
		lv_statement_29_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIterationStatementRule());
	        }
       		set(
       			$current, 
       			"statement",
        		lv_statement_29_0, 
        		"at.jku.weiner.c.C.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)

)

)

)


;





// Entry rule entryRuleJumpStatement
entryRuleJumpStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJumpStatementRule()); }
	 iv_ruleJumpStatement=ruleJumpStatement 
	 { $current=$iv_ruleJumpStatement.current; } 
	 EOF 
;

// Rule JumpStatement
ruleJumpStatement returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getJumpStatementAccess().getJumpStatementAction_0(),
            $current);
    }
)


(
(
(
(
		lv_continue_1_0=RULE_KW_CONTINUE
		{
			newLeafNode(lv_continue_1_0, grammarAccess.getJumpStatementAccess().getContinueKW_CONTINUETerminalRuleCall_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJumpStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"continue",
        		lv_continue_1_0, 
        		"at.jku.weiner.c.C.KW_CONTINUE");
	    }

)
)


(
(
		lv_semi_2_0=RULE_SEMI
		{
			newLeafNode(lv_semi_2_0, grammarAccess.getJumpStatementAccess().getSemiSEMITerminalRuleCall_1_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJumpStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"semi",
        		lv_semi_2_0, 
        		"at.jku.weiner.c.C.SEMI");
	    }

)
)

)


    |
(
(
(
		lv_break_3_0=RULE_KW_BREAK
		{
			newLeafNode(lv_break_3_0, grammarAccess.getJumpStatementAccess().getBreakKW_BREAKTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJumpStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"break",
        		lv_break_3_0, 
        		"at.jku.weiner.c.C.KW_BREAK");
	    }

)
)


(
(
		lv_semi_4_0=RULE_SEMI
		{
			newLeafNode(lv_semi_4_0, grammarAccess.getJumpStatementAccess().getSemiSEMITerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJumpStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"semi",
        		lv_semi_4_0, 
        		"at.jku.weiner.c.C.SEMI");
	    }

)
)

)


    |
(
(
(
		lv_return_5_0=RULE_KW_RETURN
		{
			newLeafNode(lv_return_5_0, grammarAccess.getJumpStatementAccess().getReturnKW_RETURNTerminalRuleCall_1_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJumpStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"return",
        		lv_return_5_0, 
        		"at.jku.weiner.c.C.KW_RETURN");
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getJumpStatementAccess().getExprExpressionParserRuleCall_1_2_1_0()); 
	    }
		lv_expr_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJumpStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_6_0, 
        		"at.jku.weiner.c.C.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?


(
(
		lv_semi_7_0=RULE_SEMI
		{
			newLeafNode(lv_semi_7_0, grammarAccess.getJumpStatementAccess().getSemiSEMITerminalRuleCall_1_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJumpStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"semi",
        		lv_semi_7_0, 
        		"at.jku.weiner.c.C.SEMI");
	    }

)
)

)


    |
(
(
(
		lv_goto_8_0=RULE_KW_GOTO
		{
			newLeafNode(lv_goto_8_0, grammarAccess.getJumpStatementAccess().getGotoKW_GOTOTerminalRuleCall_1_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJumpStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"goto",
        		lv_goto_8_0, 
        		"at.jku.weiner.c.C.KW_GOTO");
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getJumpStatementAccess().getExprUnaryExpressionParserRuleCall_1_3_1_0()); 
	    }
		lv_expr_9_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJumpStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_9_0, 
        		"at.jku.weiner.c.C.UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
		lv_semi_10_0=RULE_SEMI
		{
			newLeafNode(lv_semi_10_0, grammarAccess.getJumpStatementAccess().getSemiSEMITerminalRuleCall_1_3_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJumpStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"semi",
        		lv_semi_10_0, 
        		"at.jku.weiner.c.C.SEMI");
	    }

)
)

)

)

)


;





// Entry rule entryRuleAsmStatement
entryRuleAsmStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAsmStatementRule()); }
	 iv_ruleAsmStatement=ruleAsmStatement 
	 { $current=$iv_ruleAsmStatement.current; } 
	 EOF 
;

// Rule AsmStatement
ruleAsmStatement returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAsmStatementAccess().getAsmStatementAction_0(),
            $current);
    }
)


(
this_KW_ASM1_1=RULE_KW_ASM1
    { 
    newLeafNode(this_KW_ASM1_1, grammarAccess.getAsmStatementAccess().getKW_ASM1TerminalRuleCall_1_0()); 
    }



    |
this_KW_ASM2_2=RULE_KW_ASM2
    { 
    newLeafNode(this_KW_ASM2_2, grammarAccess.getAsmStatementAccess().getKW_ASM2TerminalRuleCall_1_1()); 
    }


)


(
(
(
		lv_volatile_3_0=RULE_KW_VOLATILE
		{
			newLeafNode(lv_volatile_3_0, grammarAccess.getAsmStatementAccess().getVolatileKW_VOLATILETerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAsmStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"volatile",
        		lv_volatile_3_0, 
        		"at.jku.weiner.c.C.KW_VOLATILE");
	    }

)
)


    |
(
(
		lv_volatile_4_0=RULE_KW_VOLATILE2
		{
			newLeafNode(lv_volatile_4_0, grammarAccess.getAsmStatementAccess().getVolatileKW_VOLATILE2TerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAsmStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"volatile",
        		lv_volatile_4_0, 
        		"at.jku.weiner.c.C.KW_VOLATILE2");
	    }

)
)

)?


this_LEFTPAREN_5=RULE_LEFTPAREN
    { 
    newLeafNode(this_LEFTPAREN_5, grammarAccess.getAsmStatementAccess().getLEFTPARENTerminalRuleCall_3()); 
    }



(
(this_COLON_6=RULE_COLON
    { 
    newLeafNode(this_COLON_6, grammarAccess.getAsmStatementAccess().getCOLONTerminalRuleCall_4_0()); 
    }
)?


(
(
		{ 
	        newCompositeNode(grammarAccess.getAsmStatementAccess().getExprLogicalOrExpressionParserRuleCall_4_1_0()); 
	    }
		lv_expr_7_0=ruleLogicalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAsmStatementRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_7_0, 
        		"at.jku.weiner.c.C.LogicalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_COMMA_8=RULE_COMMA
    { 
    newLeafNode(this_COMMA_8, grammarAccess.getAsmStatementAccess().getCOMMATerminalRuleCall_4_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getAsmStatementAccess().getExprLogicalOrExpressionParserRuleCall_4_2_1_0()); 
	    }
		lv_expr_9_0=ruleLogicalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAsmStatementRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_9_0, 
        		"at.jku.weiner.c.C.LogicalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)+


this_RIGHTPAREN_10=RULE_RIGHTPAREN
    { 
    newLeafNode(this_RIGHTPAREN_10, grammarAccess.getAsmStatementAccess().getRIGHTPARENTerminalRuleCall_5()); 
    }



(
(
		lv_semi_11_0=RULE_SEMI
		{
			newLeafNode(lv_semi_11_0, grammarAccess.getAsmStatementAccess().getSemiSEMITerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAsmStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"semi",
        		lv_semi_11_0, 
        		"at.jku.weiner.c.C.SEMI");
	    }

)
)

)


;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Log.error("Expression-enter");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.error("Expression-leave");
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpressionAccess().getExpressionAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getExprExprAssignmentExpressionParserRuleCall_1_0()); 
	    }
		lv_exprExpr_1_0=ruleAssignmentExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		add(
       			$current, 
       			"exprExpr",
        		lv_exprExpr_1_0, 
        		"at.jku.weiner.c.C.AssignmentExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_COMMA_2=RULE_COMMA
    { 
    newLeafNode(this_COMMA_2, grammarAccess.getExpressionAccess().getCOMMATerminalRuleCall_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getExprExprAssignmentExpressionParserRuleCall_2_1_0()); 
	    }
		lv_exprExpr_3_0=ruleAssignmentExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		add(
       			$current, 
       			"exprExpr",
        		lv_exprExpr_3_0, 
        		"at.jku.weiner.c.C.AssignmentExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;





// Entry rule entryRuleAssignmentExpression
entryRuleAssignmentExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignmentExpressionRule()); }
	 iv_ruleAssignmentExpression=ruleAssignmentExpression 
	 { $current=$iv_ruleAssignmentExpression.current; } 
	 EOF 
;

// Rule AssignmentExpression
ruleAssignmentExpression returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Log.error("AssignmentExpression-enter");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.error("AssignmentExpression-leave");
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionAction_0(),
            $current);
    }
)


(
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getExprLvalueParserRuleCall_1_0_0_0()); 
	    }
		lv_expr_1_0=ruleLvalue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"at.jku.weiner.c.C.Lvalue");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getOpAssignmentOperatorParserRuleCall_1_0_1_0()); 
	    }
		lv_op_2_0=ruleAssignmentOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"at.jku.weiner.c.C.AssignmentOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAssignmentExprAssignmentExpressionParserRuleCall_1_0_2_0()); 
	    }
		lv_assignmentExpr_3_0=ruleAssignmentExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
	        }
       		set(
       			$current, 
       			"assignmentExpr",
        		lv_assignmentExpr_3_0, 
        		"at.jku.weiner.c.C.AssignmentExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getExprConditionalExpressionParserRuleCall_1_1_0()); 
	    }
		lv_expr_4_0=ruleConditionalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_4_0, 
        		"at.jku.weiner.c.C.ConditionalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)

)


;





// Entry rule entryRuleLvalue
entryRuleLvalue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLvalueRule()); }
	 iv_ruleLvalue=ruleLvalue 
	 { $current=$iv_ruleLvalue.current; } 
	 EOF 
;

// Rule Lvalue
ruleLvalue returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Log.error("Lvalue-enter");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.error("Lvalue-leave");
     }:


	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLvalueAccess().getUnaryExpressionParserRuleCall()); 
    }
    this_UnaryExpression_0=ruleUnaryExpression
    { 
        $current = $this_UnaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }



;





// Entry rule entryRuleAssignmentOperator
entryRuleAssignmentOperator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignmentOperatorRule()); }
	 iv_ruleAssignmentOperator=ruleAssignmentOperator 
	 { $current=$iv_ruleAssignmentOperator.current; } 
	 EOF 
;

// Rule AssignmentOperator
ruleAssignmentOperator returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAssignmentOperatorAccess().getAssignmentOperatorAction_0(),
            $current);
    }
)


(
(
(
		lv_op_1_0=RULE_ASSIGN
		{
			newLeafNode(lv_op_1_0, grammarAccess.getAssignmentOperatorAccess().getOpASSIGNTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignmentOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_1_0, 
        		"at.jku.weiner.c.C.ASSIGN");
	    }

)
)


    |
(
(
		lv_op_2_0=RULE_STARASSIGN
		{
			newLeafNode(lv_op_2_0, grammarAccess.getAssignmentOperatorAccess().getOpSTARASSIGNTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignmentOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"at.jku.weiner.c.C.STARASSIGN");
	    }

)
)


    |
(
(
		lv_op_3_0=RULE_DIVASSIGN
		{
			newLeafNode(lv_op_3_0, grammarAccess.getAssignmentOperatorAccess().getOpDIVASSIGNTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignmentOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"at.jku.weiner.c.C.DIVASSIGN");
	    }

)
)


    |
(
(
		lv_op_4_0=RULE_MODASSIGN
		{
			newLeafNode(lv_op_4_0, grammarAccess.getAssignmentOperatorAccess().getOpMODASSIGNTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignmentOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_4_0, 
        		"at.jku.weiner.c.C.MODASSIGN");
	    }

)
)


    |
(
(
		lv_op_5_0=RULE_PLUSASSIGN
		{
			newLeafNode(lv_op_5_0, grammarAccess.getAssignmentOperatorAccess().getOpPLUSASSIGNTerminalRuleCall_1_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignmentOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_5_0, 
        		"at.jku.weiner.c.C.PLUSASSIGN");
	    }

)
)


    |
(
(
		lv_op_6_0=RULE_MINUSASSIGN
		{
			newLeafNode(lv_op_6_0, grammarAccess.getAssignmentOperatorAccess().getOpMINUSASSIGNTerminalRuleCall_1_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignmentOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_6_0, 
        		"at.jku.weiner.c.C.MINUSASSIGN");
	    }

)
)


    |
(
(
		lv_op_7_0=RULE_LEFTSHIFTASSIGN
		{
			newLeafNode(lv_op_7_0, grammarAccess.getAssignmentOperatorAccess().getOpLEFTSHIFTASSIGNTerminalRuleCall_1_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignmentOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_7_0, 
        		"at.jku.weiner.c.C.LEFTSHIFTASSIGN");
	    }

)
)


    |
(
(
		lv_op_8_0=RULE_RIGHTSHIFTASSIGN
		{
			newLeafNode(lv_op_8_0, grammarAccess.getAssignmentOperatorAccess().getOpRIGHTSHIFTASSIGNTerminalRuleCall_1_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignmentOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_8_0, 
        		"at.jku.weiner.c.C.RIGHTSHIFTASSIGN");
	    }

)
)


    |
(
(
		lv_op_9_0=RULE_ANDASSIGN
		{
			newLeafNode(lv_op_9_0, grammarAccess.getAssignmentOperatorAccess().getOpANDASSIGNTerminalRuleCall_1_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignmentOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_9_0, 
        		"at.jku.weiner.c.C.ANDASSIGN");
	    }

)
)


    |
(
(
		lv_op_10_0=RULE_XORASSIGN
		{
			newLeafNode(lv_op_10_0, grammarAccess.getAssignmentOperatorAccess().getOpXORASSIGNTerminalRuleCall_1_9_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignmentOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_10_0, 
        		"at.jku.weiner.c.C.XORASSIGN");
	    }

)
)


    |
(
(
		lv_op_11_0=RULE_ORASSIGN
		{
			newLeafNode(lv_op_11_0, grammarAccess.getAssignmentOperatorAccess().getOpORASSIGNTerminalRuleCall_1_10_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignmentOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_11_0, 
        		"at.jku.weiner.c.C.ORASSIGN");
	    }

)
)

)

)


;





// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionalExpressionRule()); }
	 iv_ruleConditionalExpression=ruleConditionalExpression 
	 { $current=$iv_ruleConditionalExpression.current; } 
	 EOF 
;

// Rule ConditionalExpression
ruleConditionalExpression returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Log.error("ConditionalExpression-enter");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.error("ConditionalExpression-leave");
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getConditionalExpressionAccess().getConditionalExpressionAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getExprLogicalOrExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleLogicalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"at.jku.weiner.c.C.LogicalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_QUESTION_2=RULE_QUESTION
    { 
    newLeafNode(this_QUESTION_2, grammarAccess.getConditionalExpressionAccess().getQUESTIONTerminalRuleCall_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getQExprExpressionParserRuleCall_2_1_0()); 
	    }
		lv_qExpr_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
	        }
       		set(
       			$current, 
       			"qExpr",
        		lv_qExpr_3_0, 
        		"at.jku.weiner.c.C.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_COLON_4=RULE_COLON
    { 
    newLeafNode(this_COLON_4, grammarAccess.getConditionalExpressionAccess().getCOLONTerminalRuleCall_2_2()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getCExprConditionalExpressionParserRuleCall_2_3_0()); 
	    }
		lv_cExpr_5_0=ruleConditionalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
	        }
       		set(
       			$current, 
       			"cExpr",
        		lv_cExpr_5_0, 
        		"at.jku.weiner.c.C.ConditionalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)?

)


;





// Entry rule entryRuleLogicalOrExpression
entryRuleLogicalOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogicalOrExpressionRule()); }
	 iv_ruleLogicalOrExpression=ruleLogicalOrExpression 
	 { $current=$iv_ruleLogicalOrExpression.current; } 
	 EOF 
;

// Rule LogicalOrExpression
ruleLogicalOrExpression returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getLogicalOrExpressionAccess().getLogicalOrExpressionAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getExprLogicalAndExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleLogicalAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"at.jku.weiner.c.C.LogicalAndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_OROR_2=RULE_OROR
    { 
    newLeafNode(this_OROR_2, grammarAccess.getLogicalOrExpressionAccess().getORORTerminalRuleCall_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getExprLogicalAndExpressionParserRuleCall_2_1_0()); 
	    }
		lv_expr_3_0=ruleLogicalAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_3_0, 
        		"at.jku.weiner.c.C.LogicalAndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;





// Entry rule entryRuleLogicalAndExpression
entryRuleLogicalAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogicalAndExpressionRule()); }
	 iv_ruleLogicalAndExpression=ruleLogicalAndExpression 
	 { $current=$iv_ruleLogicalAndExpression.current; } 
	 EOF 
;

// Rule LogicalAndExpression
ruleLogicalAndExpression returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getLogicalAndExpressionAccess().getLogicalAndExpressionAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getExprInclusiveOrExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleInclusiveOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"at.jku.weiner.c.C.InclusiveOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_ANDAND_2=RULE_ANDAND
    { 
    newLeafNode(this_ANDAND_2, grammarAccess.getLogicalAndExpressionAccess().getANDANDTerminalRuleCall_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getExprInclusiveOrExpressionParserRuleCall_2_1_0()); 
	    }
		lv_expr_3_0=ruleInclusiveOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_3_0, 
        		"at.jku.weiner.c.C.InclusiveOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;





// Entry rule entryRuleInclusiveOrExpression
entryRuleInclusiveOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInclusiveOrExpressionRule()); }
	 iv_ruleInclusiveOrExpression=ruleInclusiveOrExpression 
	 { $current=$iv_ruleInclusiveOrExpression.current; } 
	 EOF 
;

// Rule InclusiveOrExpression
ruleInclusiveOrExpression returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getInclusiveOrExpressionAccess().getInclusiveOrExpressionAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getInclusiveOrExpressionAccess().getExprExclusiveOrExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleExclusiveOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInclusiveOrExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"at.jku.weiner.c.C.ExclusiveOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_OR_2=RULE_OR
    { 
    newLeafNode(this_OR_2, grammarAccess.getInclusiveOrExpressionAccess().getORTerminalRuleCall_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getInclusiveOrExpressionAccess().getExprExclusiveOrExpressionParserRuleCall_2_1_0()); 
	    }
		lv_expr_3_0=ruleExclusiveOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInclusiveOrExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_3_0, 
        		"at.jku.weiner.c.C.ExclusiveOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;





// Entry rule entryRuleExclusiveOrExpression
entryRuleExclusiveOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExclusiveOrExpressionRule()); }
	 iv_ruleExclusiveOrExpression=ruleExclusiveOrExpression 
	 { $current=$iv_ruleExclusiveOrExpression.current; } 
	 EOF 
;

// Rule ExclusiveOrExpression
ruleExclusiveOrExpression returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getExclusiveOrExpressionAccess().getExclusiveOrExpressionAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getExclusiveOrExpressionAccess().getExprAndExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExclusiveOrExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"at.jku.weiner.c.C.AndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_CARET_2=RULE_CARET
    { 
    newLeafNode(this_CARET_2, grammarAccess.getExclusiveOrExpressionAccess().getCARETTerminalRuleCall_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getExclusiveOrExpressionAccess().getExprAndExpressionParserRuleCall_2_1_0()); 
	    }
		lv_expr_3_0=ruleAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExclusiveOrExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_3_0, 
        		"at.jku.weiner.c.C.AndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;





// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	 iv_ruleAndExpression=ruleAndExpression 
	 { $current=$iv_ruleAndExpression.current; } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAndExpressionAccess().getAndExpressionAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getAndExpressionAccess().getExprEqualityExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleEqualityExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"at.jku.weiner.c.C.EqualityExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_AND_2=RULE_AND
    { 
    newLeafNode(this_AND_2, grammarAccess.getAndExpressionAccess().getANDTerminalRuleCall_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getAndExpressionAccess().getExprEqualityExpressionParserRuleCall_2_1_0()); 
	    }
		lv_expr_3_0=ruleEqualityExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_3_0, 
        		"at.jku.weiner.c.C.EqualityExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;





// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEqualityExpressionRule()); }
	 iv_ruleEqualityExpression=ruleEqualityExpression 
	 { $current=$iv_ruleEqualityExpression.current; } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getEqualityExpressionAccess().getEqualityExpressionAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getExprRelationalExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleRelationalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"at.jku.weiner.c.C.RelationalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
(
(
		lv_op_2_0=RULE_EQUAL
		{
			newLeafNode(lv_op_2_0, grammarAccess.getEqualityExpressionAccess().getOpEQUALTerminalRuleCall_2_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEqualityExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"at.jku.weiner.c.C.EQUAL");
	    }

)
)


    |
(
(
		lv_op_3_0=RULE_NOTEQUAL
		{
			newLeafNode(lv_op_3_0, grammarAccess.getEqualityExpressionAccess().getOpNOTEQUALTerminalRuleCall_2_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEqualityExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"at.jku.weiner.c.C.NOTEQUAL");
	    }

)
)

)


(
(
		{ 
	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getExprRelationalExpressionParserRuleCall_2_1_0()); 
	    }
		lv_expr_4_0=ruleRelationalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_4_0, 
        		"at.jku.weiner.c.C.RelationalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;





// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationalExpressionRule()); }
	 iv_ruleRelationalExpression=ruleRelationalExpression 
	 { $current=$iv_ruleRelationalExpression.current; } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getRelationalExpressionAccess().getRelationalExpressionAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getExprShiftExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleShiftExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"at.jku.weiner.c.C.ShiftExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
(
(
		lv_op_2_0=RULE_LESS
		{
			newLeafNode(lv_op_2_0, grammarAccess.getRelationalExpressionAccess().getOpLESSTerminalRuleCall_2_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"at.jku.weiner.c.C.LESS");
	    }

)
)


    |
(
(
		lv_op_3_0=RULE_GREATER
		{
			newLeafNode(lv_op_3_0, grammarAccess.getRelationalExpressionAccess().getOpGREATERTerminalRuleCall_2_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"at.jku.weiner.c.C.GREATER");
	    }

)
)


    |
(
(
		lv_op_4_0=RULE_LESSEQUAL
		{
			newLeafNode(lv_op_4_0, grammarAccess.getRelationalExpressionAccess().getOpLESSEQUALTerminalRuleCall_2_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_4_0, 
        		"at.jku.weiner.c.C.LESSEQUAL");
	    }

)
)


    |
(
(
		lv_op_5_0=RULE_GREATEREQUAL
		{
			newLeafNode(lv_op_5_0, grammarAccess.getRelationalExpressionAccess().getOpGREATEREQUALTerminalRuleCall_2_0_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_5_0, 
        		"at.jku.weiner.c.C.GREATEREQUAL");
	    }

)
)

)


(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getExprShiftExpressionParserRuleCall_2_1_0()); 
	    }
		lv_expr_6_0=ruleShiftExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_6_0, 
        		"at.jku.weiner.c.C.ShiftExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;





// Entry rule entryRuleShiftExpression
entryRuleShiftExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShiftExpressionRule()); }
	 iv_ruleShiftExpression=ruleShiftExpression 
	 { $current=$iv_ruleShiftExpression.current; } 
	 EOF 
;

// Rule ShiftExpression
ruleShiftExpression returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getShiftExpressionAccess().getShiftExpressionAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getShiftExpressionAccess().getExprAdditiveExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"at.jku.weiner.c.C.AdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
(
(
		lv_op_2_0=RULE_LEFTSHIFT
		{
			newLeafNode(lv_op_2_0, grammarAccess.getShiftExpressionAccess().getOpLEFTSHIFTTerminalRuleCall_2_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShiftExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"at.jku.weiner.c.C.LEFTSHIFT");
	    }

)
)


    |
(
(
		lv_op_3_0=RULE_RIGHTSHIFT
		{
			newLeafNode(lv_op_3_0, grammarAccess.getShiftExpressionAccess().getOpRIGHTSHIFTTerminalRuleCall_2_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShiftExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"at.jku.weiner.c.C.RIGHTSHIFT");
	    }

)
)

)


(
(
		{ 
	        newCompositeNode(grammarAccess.getShiftExpressionAccess().getExprAdditiveExpressionParserRuleCall_2_1_0()); 
	    }
		lv_expr_4_0=ruleAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_4_0, 
        		"at.jku.weiner.c.C.AdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;





// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdditiveExpressionRule()); }
	 iv_ruleAdditiveExpression=ruleAdditiveExpression 
	 { $current=$iv_ruleAdditiveExpression.current; } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getExprMultiplicativeExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"at.jku.weiner.c.C.MultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
(
(
		lv_op_2_0=RULE_PLUS
		{
			newLeafNode(lv_op_2_0, grammarAccess.getAdditiveExpressionAccess().getOpPLUSTerminalRuleCall_2_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAdditiveExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"at.jku.weiner.c.C.PLUS");
	    }

)
)


    |
(
(
		lv_op_3_0=RULE_MINUS
		{
			newLeafNode(lv_op_3_0, grammarAccess.getAdditiveExpressionAccess().getOpMINUSTerminalRuleCall_2_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAdditiveExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"at.jku.weiner.c.C.MINUS");
	    }

)
)

)


(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getExprMultiplicativeExpressionParserRuleCall_2_1_0()); 
	    }
		lv_expr_4_0=ruleMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_4_0, 
        		"at.jku.weiner.c.C.MultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;





// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); }
	 iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression 
	 { $current=$iv_ruleMultiplicativeExpression.current; } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getExprCastExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleCastExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"at.jku.weiner.c.C.CastExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
(
(
		lv_op_2_0=RULE_STAR
		{
			newLeafNode(lv_op_2_0, grammarAccess.getMultiplicativeExpressionAccess().getOpSTARTerminalRuleCall_2_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"at.jku.weiner.c.C.STAR");
	    }

)
)


    |
(
(
		lv_op_3_0=RULE_DIV
		{
			newLeafNode(lv_op_3_0, grammarAccess.getMultiplicativeExpressionAccess().getOpDIVTerminalRuleCall_2_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"at.jku.weiner.c.C.DIV");
	    }

)
)


    |
(
(
		lv_op_4_0=RULE_MOD
		{
			newLeafNode(lv_op_4_0, grammarAccess.getMultiplicativeExpressionAccess().getOpMODTerminalRuleCall_2_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_4_0, 
        		"at.jku.weiner.c.C.MOD");
	    }

)
)

)


(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getExprCastExpressionParserRuleCall_2_1_0()); 
	    }
		lv_expr_5_0=ruleCastExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_5_0, 
        		"at.jku.weiner.c.C.CastExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;





// Entry rule entryRuleCastExpression
entryRuleCastExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCastExpressionRule()); }
	 iv_ruleCastExpression=ruleCastExpression 
	 { $current=$iv_ruleCastExpression.current; } 
	 EOF 
;

// Rule CastExpression
ruleCastExpression returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getCastExpressionAccess().getCastExpressionAction_0(),
            $current);
    }
)


(
(
(
		{ 
	        newCompositeNode(grammarAccess.getCastExpressionAccess().getExprUnaryExpressionParserRuleCall_1_0_0()); 
	    }
		lv_expr_1_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCastExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"at.jku.weiner.c.C.UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
this_LEFTPAREN_2=RULE_LEFTPAREN
    { 
    newLeafNode(this_LEFTPAREN_2, grammarAccess.getCastExpressionAccess().getLEFTPARENTerminalRuleCall_1_1_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getCastExpressionAccess().getTypeTypeNameParserRuleCall_1_1_1_0()); 
	    }
		lv_type_3_0=ruleTypeName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCastExpressionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"at.jku.weiner.c.C.TypeName");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_RIGHTPAREN_4=RULE_RIGHTPAREN
    { 
    newLeafNode(this_RIGHTPAREN_4, grammarAccess.getCastExpressionAccess().getRIGHTPARENTerminalRuleCall_1_1_2()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getCastExpressionAccess().getExprCastExpressionParserRuleCall_1_1_3_0()); 
	    }
		lv_expr_5_0=ruleCastExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCastExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_5_0, 
        		"at.jku.weiner.c.C.CastExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)

)

)


;





// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); }
	 iv_ruleUnaryExpression=ruleUnaryExpression 
	 { $current=$iv_ruleUnaryExpression.current; } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Log.error("UnaryExpression-enter");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.error("UnaryExpression-leave");
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_0(),
            $current);
    }
)


(
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPostfixExpressionParserRuleCall_1_0_0()); 
	    }
		lv_expr_1_0=rulePostfixExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"at.jku.weiner.c.C.PostfixExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
this_ANDAND_2=RULE_ANDAND
    { 
    newLeafNode(this_ANDAND_2, grammarAccess.getUnaryExpressionAccess().getANDANDTerminalRuleCall_1_1_0()); 
    }



this_ID_3=RULE_ID
    { 
    newLeafNode(this_ID_3, grammarAccess.getUnaryExpressionAccess().getIDTerminalRuleCall_1_1_1()); 
    }


)


    |
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpUnaryOperatorParserRuleCall_1_2_0_0()); 
	    }
		lv_op_4_0=ruleUnaryOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_4_0, 
        		"at.jku.weiner.c.C.UnaryOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprCastExpressionParserRuleCall_1_2_1_0()); 
	    }
		lv_expr_5_0=ruleCastExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_5_0, 
        		"at.jku.weiner.c.C.CastExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)

)

)


;





// Entry rule entryRuleUnaryOperator
entryRuleUnaryOperator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnaryOperatorRule()); }
	 iv_ruleUnaryOperator=ruleUnaryOperator 
	 { $current=$iv_ruleUnaryOperator.current; } 
	 EOF 
;

// Rule UnaryOperator
ruleUnaryOperator returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnaryOperatorAccess().getUnaryOperatorAction_0(),
            $current);
    }
)


(
(
(
		lv_op_1_0=RULE_AND
		{
			newLeafNode(lv_op_1_0, grammarAccess.getUnaryOperatorAccess().getOpANDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_1_0, 
        		"at.jku.weiner.c.C.AND");
	    }

)
)


    |
(
(
		lv_op_2_0=RULE_STAR
		{
			newLeafNode(lv_op_2_0, grammarAccess.getUnaryOperatorAccess().getOpSTARTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"at.jku.weiner.c.C.STAR");
	    }

)
)


    |
(
(
		lv_op_3_0=RULE_PLUS
		{
			newLeafNode(lv_op_3_0, grammarAccess.getUnaryOperatorAccess().getOpPLUSTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"at.jku.weiner.c.C.PLUS");
	    }

)
)


    |
(
(
		lv_op_4_0=RULE_MINUS
		{
			newLeafNode(lv_op_4_0, grammarAccess.getUnaryOperatorAccess().getOpMINUSTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_4_0, 
        		"at.jku.weiner.c.C.MINUS");
	    }

)
)


    |
(
(
		lv_op_5_0=RULE_TILDE
		{
			newLeafNode(lv_op_5_0, grammarAccess.getUnaryOperatorAccess().getOpTILDETerminalRuleCall_1_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_5_0, 
        		"at.jku.weiner.c.C.TILDE");
	    }

)
)


    |
(
(
		lv_op_6_0=RULE_NOT
		{
			newLeafNode(lv_op_6_0, grammarAccess.getUnaryOperatorAccess().getOpNOTTerminalRuleCall_1_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_6_0, 
        		"at.jku.weiner.c.C.NOT");
	    }

)
)

)

)


;





// Entry rule entryRulePostfixExpression
entryRulePostfixExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPostfixExpressionRule()); }
	 iv_rulePostfixExpression=rulePostfixExpression 
	 { $current=$iv_rulePostfixExpression.current; } 
	 EOF 
;

// Rule PostfixExpression
rulePostfixExpression returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Log.error("PostfixExpression-enter");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.error("PostfixExpression-leave");
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPostfixExpressionAccess().getPostfixExpressionAction_0(),
            $current);
    }
)


(
(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_0_0()); 
	    }
		lv_expr_1_0=rulePrimaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"at.jku.weiner.c.C.PrimaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
(
this_LEFTBRACKET_2=RULE_LEFTBRACKET
    { 
    newLeafNode(this_LEFTBRACKET_2, grammarAccess.getPostfixExpressionAccess().getLEFTBRACKETTerminalRuleCall_1_1_0_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixExpressionAccess().getArrayExprExpressionParserRuleCall_1_1_0_1_0()); 
	    }
		lv_arrayExpr_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
	        }
       		add(
       			$current, 
       			"arrayExpr",
        		lv_arrayExpr_3_0, 
        		"at.jku.weiner.c.C.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_RIGHTBRACKET_4=RULE_RIGHTBRACKET
    { 
    newLeafNode(this_RIGHTBRACKET_4, grammarAccess.getPostfixExpressionAccess().getRIGHTBRACKETTerminalRuleCall_1_1_0_2()); 
    }


)


    |
(
this_LEFTPAREN_5=RULE_LEFTPAREN
    { 
    newLeafNode(this_LEFTPAREN_5, grammarAccess.getPostfixExpressionAccess().getLEFTPARENTerminalRuleCall_1_1_1_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixExpressionAccess().getArgumentExpressionListArgumentExpressionListParserRuleCall_1_1_1_1_0()); 
	    }
		lv_argumentExpressionList_6_0=ruleArgumentExpressionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
	        }
       		add(
       			$current, 
       			"argumentExpressionList",
        		lv_argumentExpressionList_6_0, 
        		"at.jku.weiner.c.C.ArgumentExpressionList");
	        afterParserOrEnumRuleCall();
	    }

)
)?


this_RIGHTPAREN_7=RULE_RIGHTPAREN
    { 
    newLeafNode(this_RIGHTPAREN_7, grammarAccess.getPostfixExpressionAccess().getRIGHTPARENTerminalRuleCall_1_1_1_2()); 
    }


)


    |
(
(
		lv_plusplus_8_0=RULE_PLUSPLUS
		{
			newLeafNode(lv_plusplus_8_0, grammarAccess.getPostfixExpressionAccess().getPlusplusPLUSPLUSTerminalRuleCall_1_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPostfixExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"plusplus",
        		lv_plusplus_8_0, 
        		"at.jku.weiner.c.C.PLUSPLUS");
	    }

)
)


    |
(
(
		lv_minusminus_9_0=RULE_MINUSMINUS
		{
			newLeafNode(lv_minusminus_9_0, grammarAccess.getPostfixExpressionAccess().getMinusminusMINUSMINUSTerminalRuleCall_1_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPostfixExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"minusminus",
        		lv_minusminus_9_0, 
        		"at.jku.weiner.c.C.MINUSMINUS");
	    }

)
)

)*

)

)


;





// Entry rule entryRuleArgumentExpressionList
entryRuleArgumentExpressionList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgumentExpressionListRule()); }
	 iv_ruleArgumentExpressionList=ruleArgumentExpressionList 
	 { $current=$iv_ruleArgumentExpressionList.current; } 
	 EOF 
;

// Rule ArgumentExpressionList
ruleArgumentExpressionList returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentExpressionListAccess().getExprAssignmentExpressionParserRuleCall_0_0()); 
	    }
		lv_expr_0_0=ruleAssignmentExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentExpressionListRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_0_0, 
        		"at.jku.weiner.c.C.AssignmentExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)


(
this_COMMA_1=RULE_COMMA
    { 
    newLeafNode(this_COMMA_1, grammarAccess.getArgumentExpressionListAccess().getCOMMATerminalRuleCall_1_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentExpressionListAccess().getExprAssignmentExpressionParserRuleCall_1_1_0()); 
	    }
		lv_expr_2_0=ruleAssignmentExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentExpressionListRule());
	        }
       		add(
       			$current, 
       			"expr",
        		lv_expr_2_0, 
        		"at.jku.weiner.c.C.AssignmentExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)*

)


;





// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	 iv_rulePrimaryExpression=rulePrimaryExpression 
	 { $current=$iv_rulePrimaryExpression.current; } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null] 
    @init { enterRule();
   		at.jku.weiner.c.Log.error("PrimaryExpression-enter");
    }
    @after { leaveRule();
    		at.jku.weiner.c.Log.error("PrimaryExpression-leave");
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_0(),
            $current);
    }
)


(
(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getPrimaryExpressionAccess().getIdIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"at.jku.weiner.c.C.ID");
	    }

)
)


    |
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstConstantParserRuleCall_1_1_0()); 
	    }
		lv_const_2_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"const",
        		lv_const_2_0, 
        		"at.jku.weiner.c.C.Constant");
	        afterParserOrEnumRuleCall();
	    }

)
)


    |
(
this_LEFTPAREN_3=RULE_LEFTPAREN
    { 
    newLeafNode(this_LEFTPAREN_3, grammarAccess.getPrimaryExpressionAccess().getLEFTPARENTerminalRuleCall_1_2_0()); 
    }



(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getExprExpressionParserRuleCall_1_2_1_0()); 
	    }
		lv_expr_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_4_0, 
        		"at.jku.weiner.c.C.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)


this_RIGHTPAREN_5=RULE_RIGHTPAREN
    { 
    newLeafNode(this_RIGHTPAREN_5, grammarAccess.getPrimaryExpressionAccess().getRIGHTPARENTerminalRuleCall_1_2_2()); 
    }


)

)

)


;





// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	 iv_ruleConstant=ruleConstant 
	 { $current=$iv_ruleConstant.current; } 
	 EOF 
;

// Rule Constant
ruleConstant returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getConstantAccess().getConstantAction_0(),
            $current);
    }
)


(
(
(
		lv_hex_1_0=RULE_HEX_LITERAL
		{
			newLeafNode(lv_hex_1_0, grammarAccess.getConstantAccess().getHexHEX_LITERALTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"hex",
        		lv_hex_1_0, 
        		"at.jku.weiner.c.C.HEX_LITERAL");
	    }

)
)


    |
(
(
		lv_oct_2_0=RULE_OCTAL_LITERAL
		{
			newLeafNode(lv_oct_2_0, grammarAccess.getConstantAccess().getOctOCTAL_LITERALTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"oct",
        		lv_oct_2_0, 
        		"at.jku.weiner.c.C.OCTAL_LITERAL");
	    }

)
)


    |
(
(
		lv_dec_3_0=RULE_DECIMAL_LITERAL
		{
			newLeafNode(lv_dec_3_0, grammarAccess.getConstantAccess().getDecDECIMAL_LITERALTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dec",
        		lv_dec_3_0, 
        		"at.jku.weiner.c.C.DECIMAL_LITERAL");
	    }

)
)


    |
(
(
		lv_ch_4_0=RULE_CHAR_LITERAL
		{
			newLeafNode(lv_ch_4_0, grammarAccess.getConstantAccess().getChCHAR_LITERALTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ch",
        		lv_ch_4_0, 
        		"at.jku.weiner.c.C.CHAR_LITERAL");
	    }

)
)


    |
(
(
		lv_str_5_0=RULE_STRING_LITERAL
		{
			newLeafNode(lv_str_5_0, grammarAccess.getConstantAccess().getStrSTRING_LITERALTerminalRuleCall_1_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"str",
        		lv_str_5_0, 
        		"at.jku.weiner.c.C.STRING_LITERAL");
	    }

)
)


    |
(
(
		lv_float_6_0=RULE_FLOAT_LITERAL
		{
			newLeafNode(lv_float_6_0, grammarAccess.getConstantAccess().getFloatFLOAT_LITERALTerminalRuleCall_1_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"float",
        		lv_float_6_0, 
        		"at.jku.weiner.c.C.FLOAT_LITERAL");
	    }

)
)


    |
(
(
		lv_bin_7_0=RULE_BIN_LITERAL
		{
			newLeafNode(lv_bin_7_0, grammarAccess.getConstantAccess().getBinBIN_LITERALTerminalRuleCall_1_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"bin",
        		lv_bin_7_0, 
        		"at.jku.weiner.c.C.BIN_LITERAL");
	    }

)
)

)

)


;





// Entry rule entryRuleConstantExpression
entryRuleConstantExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantExpressionRule()); }
	 iv_ruleConstantExpression=ruleConstantExpression 
	 { $current=$iv_ruleConstantExpression.current; } 
	 EOF 
;

// Rule ConstantExpression
ruleConstantExpression returns [EObject current=null] 
    @init { enterRule();
   		
    }
    @after { leaveRule();
    		
     }:

(
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getConstantExpressionAccess().getConstantExpressionAction_0(),
            $current);
    }
)


(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpressionAccess().getExprConditionalExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleConditionalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"at.jku.weiner.c.C.ConditionalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)

)


;





fragment RULE_KW_UNDERSCORE : '_';

RULE_KW_AUTO : 'auto';

RULE_KW_BREAK : 'break';

RULE_KW_CASE : 'case';

RULE_KW_CHAR : 'char';

RULE_KW_CONST : 'const';

RULE_KW_CONTINUE : 'continue';

RULE_KW_DEFAULT : 'default';

RULE_KW_DO : 'do';

RULE_KW_DOUBLE : 'double';

RULE_KW_ELSE : 'else';

RULE_KW_ENUM : 'enum';

RULE_KW_EXTERN : 'extern';

RULE_KW_FLOAT : 'float';

RULE_KW_FOR : 'for';

RULE_KW_GOTO : 'goto';

RULE_KW_IF : 'if';

RULE_KW_INLINE : 'inline';

RULE_KW_INT : 'int';

RULE_KW_LONG : 'long';

RULE_KW_REGISTER : 'register';

RULE_KW_RESTRICT : 'restrict';

RULE_KW_RETURN : 'return';

RULE_KW_SHORT : 'short';

RULE_KW_SIGNED : 'signed';

RULE_KW_SIZEOF : 'sizeof';

RULE_KW_STATIC : 'static';

RULE_KW_STRUCT : 'struct';

RULE_KW_SWITCH : 'switch';

RULE_KW_TYPEDEF : 'typedef';

RULE_KW_UNION : 'union';

RULE_KW_UNSIGNED : 'unsigned';

RULE_KW_VOID : 'void';

RULE_KW_VOLATILE : 'volatile';

RULE_KW_WHILE : 'while';

RULE_KW_ALIGNAS : '_Alignas';

RULE_KW_ALIGNOF : '_Alignof';

RULE_KW_ASM1 : RULE_KW_UNDERSCORE RULE_KW_UNDERSCORE 'asm';

RULE_KW_ASM2 : RULE_KW_ASM1 RULE_KW_UNDERSCORE RULE_KW_UNDERSCORE;

RULE_KW_ATOMIC : '_Atomic';

RULE_KW_BOOL : '_Bool';

RULE_KW_COMPLEX : '_Complex';

RULE_KW_GENERIC : '_Generic';

RULE_KW_IMAGINARY : '_Imaginary';

RULE_KW_NORETURN : '_Noreturn';

RULE_KW_STATICASSERT : '_Static_assert';

RULE_KW_THREADLOCAL : '_Thread_local';

RULE_KW_PRAGMA : 'pragma';

RULE_KW_VOLATILE2 : RULE_KW_UNDERSCORE RULE_KW_UNDERSCORE RULE_KW_VOLATILE RULE_KW_UNDERSCORE RULE_KW_UNDERSCORE;

RULE_LEFTPAREN : '(';

RULE_RIGHTPAREN : ')';

RULE_LEFTBRACKET : '[';

RULE_RIGHTBRACKET : ']';

RULE_LEFTBRACE : '{';

RULE_RIGHTBRACE : '}';

RULE_LESS : '<';

RULE_LESSEQUAL : RULE_LESS RULE_ASSIGN;

RULE_GREATER : '>';

RULE_GREATEREQUAL : RULE_GREATER RULE_ASSIGN;

RULE_LEFTSHIFT : RULE_LESS RULE_LESS;

RULE_RIGHTSHIFT : RULE_GREATER RULE_GREATER;

RULE_PLUS : '+';

RULE_PLUSPLUS : RULE_PLUS RULE_PLUS;

RULE_MINUS : '-';

RULE_MINUSMINUS : RULE_MINUS RULE_MINUS;

RULE_STAR : '*';

RULE_DIV : '/';

RULE_MOD : '%';

RULE_AND : '&';

RULE_ANDAND : RULE_AND RULE_AND;

RULE_OR : '|';

RULE_OROR : RULE_OR RULE_OR;

RULE_CARET : '^';

RULE_NOT : '!';

RULE_TILDE : '~';

RULE_QUESTION : '?';

RULE_COLON : ':';

RULE_SEMI : ';';

RULE_COMMA : ',';

RULE_ASSIGN : '=';

RULE_STARASSIGN : RULE_STAR RULE_ASSIGN;

RULE_DIVASSIGN : RULE_DIV RULE_ASSIGN;

RULE_MODASSIGN : RULE_MOD RULE_ASSIGN;

RULE_PLUSASSIGN : RULE_PLUS RULE_ASSIGN;

RULE_MINUSASSIGN : RULE_MINUS RULE_ASSIGN;

RULE_LEFTSHIFTASSIGN : RULE_LEFTSHIFT RULE_ASSIGN;

RULE_RIGHTSHIFTASSIGN : RULE_RIGHTSHIFT RULE_ASSIGN;

RULE_ANDASSIGN : RULE_AND RULE_ASSIGN;

RULE_XORASSIGN : RULE_CARET RULE_ASSIGN;

RULE_ORASSIGN : RULE_OR RULE_ASSIGN;

RULE_EQUAL : RULE_ASSIGN RULE_ASSIGN;

RULE_NOTEQUAL : RULE_NOT RULE_ASSIGN;

RULE_ARROW : RULE_MINUS RULE_GREATER;

fragment RULE_DOT : '.';

RULE_ELLIPSIS : RULE_DOT RULE_DOT RULE_DOT;

fragment RULE_SINGLEQUOTE : '\'';

fragment RULE_DOUBLEQUOTE : '"';

fragment RULE_BACKSLASH : '\\';

RULE_ID : RULE_IDENTIFIER;

fragment RULE_IDENTIFIER : RULE_LETTER (RULE_LETTER|'0'..'9')*;

fragment RULE_LETTER : ('$'|'A'..'Z'|'a'..'z'|RULE_KW_UNDERSCORE);

RULE_CHAR_LITERAL : RULE_SINGLEQUOTE (RULE_ESCAPE_SEQUENCE|~((RULE_SINGLEQUOTE|RULE_BACKSLASH))) RULE_SINGLEQUOTE;

RULE_STRING_LITERAL : RULE_DOUBLEQUOTE (RULE_ESCAPE_SEQUENCE|~((RULE_BACKSLASH|RULE_DOUBLEQUOTE)))* RULE_DOUBLEQUOTE;

RULE_HEX_LITERAL : '0' ('x'|'X') RULE_HEX_DIGIT+ RULE_INTEGER_TYPE_SUFFIX?;

RULE_DECIMAL_LITERAL : ('0'|'1'..'9' ('0'..'9')*) RULE_INTEGER_TYPE_SUFFIX?;

RULE_OCTAL_LITERAL : '0' ('0'..'7')+ RULE_INTEGER_TYPE_SUFFIX?;

RULE_BIN_LITERAL : ('0b'|'0B') ('0'..'1')+;

fragment RULE_HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F');

fragment RULE_INTEGER_TYPE_SUFFIX : (('u'|'U')? ('l'|'L')|('u'|'U') ('l'|'L')?);

RULE_FLOAT_LITERAL : (('0'..'9')+ '.' ('0'..'9')* RULE_EXPONENT? RULE_FLOAT_TYPE_SUFFIX?|'.' ('0'..'9')+ RULE_EXPONENT? RULE_FLOAT_TYPE_SUFFIX?|('0'..'9')+ RULE_EXPONENT RULE_FLOAT_TYPE_SUFFIX?|('0'..'9')+ RULE_EXPONENT? RULE_FLOAT_TYPE_SUFFIX);

fragment RULE_EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+;

fragment RULE_FLOAT_TYPE_SUFFIX : ('f'|'F'|'d'|'D');

fragment RULE_ESCAPE_SEQUENCE : (RULE_BACKSLASH ('b'|'t'|'n'|'f'|'r'|'"'|RULE_SINGLEQUOTE|RULE_BACKSLASH)|RULE_OCTAL_ESCAPE);

fragment RULE_OCTAL_ESCAPE : (RULE_BACKSLASH '0'..'3' '0'..'7' '0'..'7'|RULE_BACKSLASH '0'..'7' '0'..'7'|RULE_BACKSLASH '0'..'7');

fragment RULE_UNICODE_ESCAPE : RULE_BACKSLASH 'u' RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT;

RULE_LINEDIRECTIVE : '#' ~(RULE_NEWLINE)*;

RULE_WHITESPACE : (' '|'\t')+;

RULE_BLOCK_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_LINE_COMMENT : '//' ~(RULE_NEWLINE)*;

RULE_NEWLINE : ('\r'|'\n');


