/*
 * generated by Xtext 2.9.0-SNAPSHOT
 */
package at.jku.weiner.c.formatting2

import at.jku.weiner.c.c.Declaration
import at.jku.weiner.c.c.DeclarationSpecifiers
import at.jku.weiner.c.c.Declarator
import at.jku.weiner.c.c.DirectDeclarator
import at.jku.weiner.c.c.ExternalDeclaration
import at.jku.weiner.c.c.InitDeclarator
import at.jku.weiner.c.c.InitDeclaratorList
import at.jku.weiner.c.c.TranslationUnit
import at.jku.weiner.c.services.CGrammarAccess
import com.google.inject.Inject
import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class CFormatter extends AbstractFormatter2 {
	
	@Inject extension CGrammarAccess

	def dispatch void format(TranslationUnit translationUnit, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (ExternalDeclaration external : translationUnit.getExternal()) {
			format(external, document);
		}
	}

	def dispatch void format(ExternalDeclaration externalDeclaration, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		format(externalDeclaration.getDeclaration(), document);
	}

	def dispatch void format(Declaration declaration, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		format(declaration.getSpecifiers(), document);
		for (InitDeclaratorList initDeclaratorList : declaration.getInitDeclaratorList()) {
			format(initDeclaratorList, document);
		}
	}

	def dispatch void format(DeclarationSpecifiers declarationSpecifiers, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (EObject declarationSpecifier : declarationSpecifiers.getDeclarationSpecifier()) {
			format(declarationSpecifier, document);
		}
	}

	def dispatch void format(InitDeclaratorList initDeclaratorList, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (InitDeclarator initDeclarator : initDeclaratorList.getInitDeclarator()) {
			format(initDeclarator, document);
		}
		for (InitDeclarator initDeclarator2 : initDeclaratorList.getInitDeclarator2()) {
			format(initDeclarator2, document);
		}
	}

	def dispatch void format(InitDeclarator initDeclarator, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		format(initDeclarator.getDeclarator(), document);
	}

	def dispatch void format(Declarator declarator, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		format(declarator.getDeclarator(), document);
	}

	def dispatch void format(DirectDeclarator directDeclarator, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		format(directDeclarator.getDeclarator(), document);
	}
}
