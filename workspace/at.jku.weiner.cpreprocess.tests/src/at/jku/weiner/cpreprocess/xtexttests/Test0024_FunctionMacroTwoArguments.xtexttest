//----------------------------------------------------------------------
//----------------------------------------------------------------------
package at.jku.weiner.cpreprocess
language cPreprocess
//----------------------------------------------------------------------
split-lexer=true
source file="res/Test0024_FunctionMacroTwoArguments.c"
//----------------------------------------------------------------------
lexer-tokens
	HASH DEFINE WS ID LPAREN ID COMMA WS ID RPAREN WS
		LPAREN LPAREN ID RPAREN WS SPECIAL WS
		LPAREN ID RPAREN WS SPECIAL WS
		LPAREN ID RPAREN WS SPECIAL WS
		LPAREN ID RPAREN RPAREN 
		NEWLINE
	ID WS ID WS SPECIAL WS ID LPAREN SPECIAL COMMA SPECIAL RPAREN SPECIAL NEWLINE
	ID WS ID WS SPECIAL WS ID LPAREN SPECIAL COMMA WS SPECIAL RPAREN SPECIAL NEWLINE
	ID WS ID WS SPECIAL WS ID LPAREN LPAREN SPECIAL RPAREN COMMA WS SPECIAL RPAREN SPECIAL NEWLINE
	ID WS ID WS SPECIAL WS ID LPAREN ID WS SPECIAL WS SPECIAL COMMA WS SPECIAL +*2 RPAREN SPECIAL NEWLINE
	ID WS ID WS SPECIAL WS ID LPAREN SPECIAL +*2 COMMA WS 
		LPAREN ID SPECIAL SPECIAL WS SPECIAL WS
		LPAREN SPECIAL ID RPAREN 
		RPAREN RPAREN SPECIAL NEWLINE
//----------------------------------------------------------------------
(Model
	units+=
	(TranslationUnit
		group=
		(GroupOpt
			lines+=
			(PreprocessorDirectives
				directive=
				(DefineFunctionLikeMacro
					id++"MIN",
					list=
					(IdentifierList
						id+*"[X, Y]"
					),
					string++"((X) < (Y) ? (X) : (Y))"
				)
			),
			(Code
				code++"int a = MIN(5,8);"
			),
			(Code
				code++"int b = MIN(8, 5);"
			),
			(Code
				code++"int c = MIN((5), 5);"
			),
			(Code
				code++"int d = MIN(a + 1, 18);"
			),
			(Code
				code++"int e = MIN(18, (b*2 + (*c)));"
			)
		)
	)
)
//----------------------------------------------------------------------
output file="bin/Test0024_FunctionMacroTwoArguments.c.i"
expected file="expected/Test0024_FunctionMacroTwoArguments.c"
//replacePatterns file="res/Patterns.txt"
//----------------------------------------------------------------------
//----------------------------------------------------------------------
