/*
 * generated by Xtext 2.9.0-SNAPSHOT
 */
package at.jku.weiner.cpreprocess.formatting2

import at.jku.weiner.cpreprocess.cPreprocess.GroupOpt
import at.jku.weiner.cpreprocess.cPreprocess.Model
import at.jku.weiner.cpreprocess.cPreprocess.PreprocessorDirectives
import at.jku.weiner.cpreprocess.cPreprocess.SourceCodeLine
import at.jku.weiner.cpreprocess.cPreprocess.TranslationUnit
import at.jku.weiner.cpreprocess.services.CPreprocessGrammarAccess
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class CPreprocessFormatter extends AbstractFormatter2 {
	
	@Inject extension CPreprocessGrammarAccess

	def dispatch void format(Model model, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (TranslationUnit units : model.getUnits()) {
			format(units, document);
		}
	}

	def dispatch void format(TranslationUnit translationUnit, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		format(translationUnit.getGroup(), document);
	}

	def dispatch void format(GroupOpt groupOpt, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (SourceCodeLine lines : groupOpt.getLines()) {
			format(lines, document);
		}
	}

	def dispatch void format(PreprocessorDirectives preprocessorDirectives, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		format(preprocessorDirectives.getDirective(), document);
	}
}
