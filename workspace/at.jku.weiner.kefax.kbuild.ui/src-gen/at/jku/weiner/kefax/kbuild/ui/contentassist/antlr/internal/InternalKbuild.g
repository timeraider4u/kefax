/*
 * generated by Xtext 2.9.0-SNAPSHOT
 */
grammar InternalKbuild;

options {
	superClass=AbstractInternalContentAssistParser;
	
	
}

@lexer::header {
package at.jku.weiner.kefax.kbuild.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package at.jku.weiner.kefax.kbuild.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import at.jku.weiner.kefax.kbuild.services.KbuildGrammarAccess;

}

@parser::members {
 
 	private KbuildGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(KbuildGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}





// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleBuildEntry
entryRuleBuildEntry 
:
{ before(grammarAccess.getBuildEntryRule()); }
	 ruleBuildEntry
{ after(grammarAccess.getBuildEntryRule()); } 
	 EOF 
;

// Rule BuildEntry
ruleBuildEntry
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getBuildEntryAccess().getAlternatives()); }
(rule__BuildEntry__Alternatives)
{ after(grammarAccess.getBuildEntryAccess().getAlternatives()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleEntry
entryRuleEntry 
:
{ before(grammarAccess.getEntryRule()); }
	 ruleEntry
{ after(grammarAccess.getEntryRule()); } 
	 EOF 
;

// Rule Entry
ruleEntry
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getEntryAccess().getGroup()); }
(rule__Entry__Group__0)
{ after(grammarAccess.getEntryAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleIf
entryRuleIf 
:
{ before(grammarAccess.getIfRule()); }
	 ruleIf
{ after(grammarAccess.getIfRule()); } 
	 EOF 
;

// Rule If
ruleIf
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getIfAccess().getGroup()); }
(rule__If__Group__0)
{ after(grammarAccess.getIfAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleObject_Y
entryRuleObject_Y 
:
{ before(grammarAccess.getObject_YRule()); }
	 ruleObject_Y
{ after(grammarAccess.getObject_YRule()); } 
	 EOF 
;

// Rule Object_Y
ruleObject_Y
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getObject_YAccess().getGroup()); }
(rule__Object_Y__Group__0)
{ after(grammarAccess.getObject_YAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleObject_M
entryRuleObject_M 
:
{ before(grammarAccess.getObject_MRule()); }
	 ruleObject_M
{ after(grammarAccess.getObject_MRule()); } 
	 EOF 
;

// Rule Object_M
ruleObject_M
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getObject_MAccess().getGroup()); }
(rule__Object_M__Group__0)
{ after(grammarAccess.getObject_MAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleAssign
entryRuleAssign 
:
{ before(grammarAccess.getAssignRule()); }
	 ruleAssign
{ after(grammarAccess.getAssignRule()); } 
	 EOF 
;

// Rule Assign
ruleAssign
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getAssignAccess().getGroup()); }
(rule__Assign__Group__0)
{ after(grammarAccess.getAssignAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleAssignExtra
entryRuleAssignExtra 
:
{ before(grammarAccess.getAssignExtraRule()); }
	 ruleAssignExtra
{ after(grammarAccess.getAssignExtraRule()); } 
	 EOF 
;

// Rule AssignExtra
ruleAssignExtra
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getAssignExtraAccess().getGroup()); }
(rule__AssignExtra__Group__0)
{ after(grammarAccess.getAssignExtraAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleValues
entryRuleValues 
:
{ before(grammarAccess.getValuesRule()); }
	 ruleValues
{ after(grammarAccess.getValuesRule()); } 
	 EOF 
;

// Rule Values
ruleValues
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getValuesAccess().getGroup()); }
(rule__Values__Group__0)
{ after(grammarAccess.getValuesAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getVariableAccess().getAlternatives()); }
(rule__Variable__Alternatives)
{ after(grammarAccess.getVariableAccess().getAlternatives()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleShellCmd
entryRuleShellCmd 
:
{ before(grammarAccess.getShellCmdRule()); }
	 ruleShellCmd
{ after(grammarAccess.getShellCmdRule()); } 
	 EOF 
;

// Rule ShellCmd
ruleShellCmd
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getShellCmdAccess().getAlternatives()); }
(rule__ShellCmd__Alternatives)
{ after(grammarAccess.getShellCmdAccess().getAlternatives()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleShellPart
entryRuleShellPart 
:
{ before(grammarAccess.getShellPartRule()); }
	 ruleShellPart
{ after(grammarAccess.getShellPartRule()); } 
	 EOF 
;

// Rule ShellPart
ruleShellPart
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getShellPartAccess().getGroup()); }
(rule__ShellPart__Group__0)
{ after(grammarAccess.getShellPartAccess().getGroup()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleVarSlashSym
entryRuleVarSlashSym 
:
{ before(grammarAccess.getVarSlashSymRule()); }
	 ruleVarSlashSym
{ after(grammarAccess.getVarSlashSymRule()); } 
	 EOF 
;

// Rule VarSlashSym
ruleVarSlashSym
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
{ before(grammarAccess.getVarSlashSymAccess().getAlternatives()); }
(rule__VarSlashSym__Alternatives)
{ after(grammarAccess.getVarSlashSymAccess().getAlternatives()); }
)



;
finally {
	restoreStackSize(stackSize);
}




// Entry rule entryRuleEol
entryRuleEol 
:
{ before(grammarAccess.getEolRule()); }
	 ruleEol
{ after(grammarAccess.getEolRule()); } 
	 EOF 
;

// Rule Eol
ruleEol
    @init {
		int stackSize = keepStackSize();
		/*no init found*/
    }
	@after {
    		/*no after found*/
     }:

(
(
{ before(grammarAccess.getEolAccess().getNLITerminalRuleCall()); }
(	RULE_NLI)
{ after(grammarAccess.getEolAccess().getNLITerminalRuleCall()); }
)
(
{ before(grammarAccess.getEolAccess().getNLITerminalRuleCall()); }
(	RULE_NLI)*
{ after(grammarAccess.getEolAccess().getNLITerminalRuleCall()); }
)
)



;
finally {
	restoreStackSize(stackSize);
}




rule__BuildEntry__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getGroup_0()); }
(rule__BuildEntry__Group_0__0)
{ after(grammarAccess.getBuildEntryAccess().getGroup_0()); }
)



    |
(
{ before(grammarAccess.getBuildEntryAccess().getGroup_1()); }
(rule__BuildEntry__Group_1__0)
{ after(grammarAccess.getBuildEntryAccess().getGroup_1()); }
)



    |
(
{ before(grammarAccess.getBuildEntryAccess().getGroup_2()); }
(rule__BuildEntry__Group_2__0)
{ after(grammarAccess.getBuildEntryAccess().getGroup_2()); }
)



    |
(
{ before(grammarAccess.getBuildEntryAccess().getGroup_3()); }
(rule__BuildEntry__Group_3__0)
{ after(grammarAccess.getBuildEntryAccess().getGroup_3()); }
)



    |
(
{ before(grammarAccess.getBuildEntryAccess().getGroup_4()); }
(rule__BuildEntry__Group_4__0)
{ after(grammarAccess.getBuildEntryAccess().getGroup_4()); }
)



    |
(
{ before(grammarAccess.getBuildEntryAccess().getGroup_5()); }
(rule__BuildEntry__Group_5__0)
{ after(grammarAccess.getBuildEntryAccess().getGroup_5()); }
)



    |
(
{ before(grammarAccess.getBuildEntryAccess().getGroup_6()); }
(rule__BuildEntry__Group_6__0)
{ after(grammarAccess.getBuildEntryAccess().getGroup_6()); }
)



    |
(
{ before(grammarAccess.getBuildEntryAccess().getGroup_7()); }
(rule__BuildEntry__Group_7__0)
{ after(grammarAccess.getBuildEntryAccess().getGroup_7()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Alternatives_3_4
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getValueAssignment_3_4_0()); }
(rule__BuildEntry__ValueAssignment_3_4_0)
{ after(grammarAccess.getBuildEntryAccess().getValueAssignment_3_4_0()); }
)



    |
(
{ before(grammarAccess.getBuildEntryAccess().getValueAssignment_3_4_1()); }
(rule__BuildEntry__ValueAssignment_3_4_1)
{ after(grammarAccess.getBuildEntryAccess().getValueAssignment_3_4_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Alternatives_5_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getValueAssignment_5_1_0()); }
(rule__BuildEntry__ValueAssignment_5_1_0)
{ after(grammarAccess.getBuildEntryAccess().getValueAssignment_5_1_0()); }
)



    |
(
{ before(grammarAccess.getBuildEntryAccess().getValueAssignment_5_1_1()); }
(rule__BuildEntry__ValueAssignment_5_1_1)
{ after(grammarAccess.getBuildEntryAccess().getValueAssignment_5_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Alternatives_6_3
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getSEMICOLONTerminalRuleCall_6_3_0()); }
	RULE_SEMICOLON
{ after(grammarAccess.getBuildEntryAccess().getSEMICOLONTerminalRuleCall_6_3_0()); }
)



    |
(
{ before(grammarAccess.getBuildEntryAccess().getGroup_6_3_1()); }
(rule__BuildEntry__Group_6_3_1__0)
{ after(grammarAccess.getBuildEntryAccess().getGroup_6_3_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__If__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getGroup_1_0()); }
(rule__If__Group_1_0__0)
{ after(grammarAccess.getIfAccess().getGroup_1_0()); }
)



    |
(
{ before(grammarAccess.getIfAccess().getGroup_1_1()); }
(rule__If__Group_1_1__0)
{ after(grammarAccess.getIfAccess().getGroup_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__If__Alternatives_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getYTerminalRuleCall_1_0_2_0()); }
	RULE_Y
{ after(grammarAccess.getIfAccess().getYTerminalRuleCall_1_0_2_0()); }
)



    |
(
{ before(grammarAccess.getIfAccess().getMTerminalRuleCall_1_0_2_1()); }
	RULE_M
{ after(grammarAccess.getIfAccess().getMTerminalRuleCall_1_0_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__If__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getValueAssignment_5_0()); }
(rule__If__ValueAssignment_5_0)
{ after(grammarAccess.getIfAccess().getValueAssignment_5_0()); }
)



    |
(
{ before(grammarAccess.getIfAccess().getValueAssignment_5_1()); }
(rule__If__ValueAssignment_5_1)
{ after(grammarAccess.getIfAccess().getValueAssignment_5_1()); }
)



    |
(
{ before(grammarAccess.getIfAccess().getValueAssignment_5_2()); }
(rule__If__ValueAssignment_5_2)
{ after(grammarAccess.getIfAccess().getValueAssignment_5_2()); }
)



    |
(
{ before(grammarAccess.getIfAccess().getValueAssignment_5_3()); }
(rule__If__ValueAssignment_5_3)
{ after(grammarAccess.getIfAccess().getValueAssignment_5_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__If__Alternatives_7_3
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getElsevalueAssignment_7_3_0()); }
(rule__If__ElsevalueAssignment_7_3_0)
{ after(grammarAccess.getIfAccess().getElsevalueAssignment_7_3_0()); }
)



    |
(
{ before(grammarAccess.getIfAccess().getElsevalueAssignment_7_3_1()); }
(rule__If__ElsevalueAssignment_7_3_1)
{ after(grammarAccess.getIfAccess().getElsevalueAssignment_7_3_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__AssignExtra__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAssignExtraAccess().getPLUSTerminalRuleCall_1_0()); }
	RULE_PLUS
{ after(grammarAccess.getAssignExtraAccess().getPLUSTerminalRuleCall_1_0()); }
)



    |
(
{ before(grammarAccess.getAssignExtraAccess().getDPOINTTerminalRuleCall_1_1()); }
	RULE_DPOINT
{ after(grammarAccess.getAssignExtraAccess().getDPOINTTerminalRuleCall_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValueAccess().getGroup_0()); }
(rule__Value__Group_0__0)
{ after(grammarAccess.getValueAccess().getGroup_0()); }
)



    |
(
{ before(grammarAccess.getValueAccess().getGroup_1()); }
(rule__Value__Group_1__0)
{ after(grammarAccess.getValueAccess().getGroup_1()); }
)



    |
(
{ before(grammarAccess.getValueAccess().getGroup_2()); }
(rule__Value__Group_2__0)
{ after(grammarAccess.getValueAccess().getGroup_2()); }
)



    |
(
{ before(grammarAccess.getValueAccess().getGroup_3()); }
(rule__Value__Group_3__0)
{ after(grammarAccess.getValueAccess().getGroup_3()); }
)



    |
(
{ before(grammarAccess.getValueAccess().getGroup_4()); }
(rule__Value__Group_4__0)
{ after(grammarAccess.getValueAccess().getGroup_4()); }
)



    |
(
{ before(grammarAccess.getValueAccess().getGroup_5()); }
(rule__Value__Group_5__0)
{ after(grammarAccess.getValueAccess().getGroup_5()); }
)



    |
(
{ before(grammarAccess.getValueAccess().getGroup_6()); }
(rule__Value__Group_6__0)
{ after(grammarAccess.getValueAccess().getGroup_6()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getVariableAccess().getGroup_0()); }
(rule__Variable__Group_0__0)
{ after(grammarAccess.getVariableAccess().getGroup_0()); }
)



    |
(
{ before(grammarAccess.getVariableAccess().getGroup_1()); }
(rule__Variable__Group_1__0)
{ after(grammarAccess.getVariableAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__ShellCmd__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShellCmdAccess().getGroup_0()); }
(rule__ShellCmd__Group_0__0)
{ after(grammarAccess.getShellCmdAccess().getGroup_0()); }
)



    |
(
{ before(grammarAccess.getShellCmdAccess().getGroup_1()); }
(rule__ShellCmd__Group_1__0)
{ after(grammarAccess.getShellCmdAccess().getGroup_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__ShellPart__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShellPartAccess().getValAssignment_1_0()); }
(rule__ShellPart__ValAssignment_1_0)
{ after(grammarAccess.getShellPartAccess().getValAssignment_1_0()); }
)



    |
(
{ before(grammarAccess.getShellPartAccess().getCmdAssignment_1_1()); }
(rule__ShellPart__CmdAssignment_1_1)
{ after(grammarAccess.getShellPartAccess().getCmdAssignment_1_1()); }
)



    |
(
{ before(grammarAccess.getShellPartAccess().getSTRINGTerminalRuleCall_1_2()); }
	RULE_STRING
{ after(grammarAccess.getShellPartAccess().getSTRINGTerminalRuleCall_1_2()); }
)



    |
(
{ before(grammarAccess.getShellPartAccess().getCOMMATerminalRuleCall_1_3()); }
	RULE_COMMA
{ after(grammarAccess.getShellPartAccess().getCOMMATerminalRuleCall_1_3()); }
)



    |
(
{ before(grammarAccess.getShellPartAccess().getSHELL_CHARTerminalRuleCall_1_4()); }
	RULE_SHELL_CHAR
{ after(grammarAccess.getShellPartAccess().getSHELL_CHARTerminalRuleCall_1_4()); }
)



    |
(
{ before(grammarAccess.getShellPartAccess().getGroup_1_5()); }
(rule__ShellPart__Group_1_5__0)
{ after(grammarAccess.getShellPartAccess().getGroup_1_5()); }
)



;
finally {
	restoreStackSize(stackSize);
}

rule__VarSlashSym__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getVarSlashSymAccess().getVariableParserRuleCall_0()); }
	ruleVariable
{ after(grammarAccess.getVarSlashSymAccess().getVariableParserRuleCall_0()); }
)



    |
(
{ before(grammarAccess.getVarSlashSymAccess().getNameAssignment_1()); }
(rule__VarSlashSym__NameAssignment_1)
{ after(grammarAccess.getVarSlashSymAccess().getNameAssignment_1()); }
)



    |
(
{ before(grammarAccess.getVarSlashSymAccess().getNameAssignment_2()); }
(rule__VarSlashSym__NameAssignment_2)
{ after(grammarAccess.getVarSlashSymAccess().getNameAssignment_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getModelAccess().getModelAction_0()); }
(

)
{ after(grammarAccess.getModelAccess().getModelAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getModelAccess().getBuildEntryAssignment_1()); }
(rule__Model__BuildEntryAssignment_1)?
{ after(grammarAccess.getModelAccess().getBuildEntryAssignment_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getModelAccess().getGroup_2()); }
(rule__Model__Group_2__0)*
{ after(grammarAccess.getModelAccess().getGroup_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getModelAccess().getEolParserRuleCall_3()); }
	ruleEol
{ after(grammarAccess.getModelAccess().getEolParserRuleCall_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__Model__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_2__0__Impl
	rule__Model__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getModelAccess().getEolParserRuleCall_2_0()); }
	ruleEol
{ after(grammarAccess.getModelAccess().getEolParserRuleCall_2_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getModelAccess().getBuildEntryAssignment_2_1()); }
(rule__Model__BuildEntryAssignment_2_1)
{ after(grammarAccess.getModelAccess().getBuildEntryAssignment_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__BuildEntry__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_0__0__Impl
	rule__BuildEntry__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getBuildEntryAction_0_0()); }
(

)
{ after(grammarAccess.getBuildEntryAccess().getBuildEntryAction_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getValueAssignment_0_1()); }
(rule__BuildEntry__ValueAssignment_0_1)
{ after(grammarAccess.getBuildEntryAccess().getValueAssignment_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__BuildEntry__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_1__0__Impl
	rule__BuildEntry__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getIfEqAction_1_0()); }
(

)
{ after(grammarAccess.getBuildEntryAccess().getIfEqAction_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_1__1__Impl
	rule__BuildEntry__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getIFEQTerminalRuleCall_1_1()); }
	RULE_IFEQ
{ after(grammarAccess.getBuildEntryAccess().getIFEQTerminalRuleCall_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getValueAssignment_1_2()); }
(rule__BuildEntry__ValueAssignment_1_2)
{ after(grammarAccess.getBuildEntryAccess().getValueAssignment_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__BuildEntry__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_2__0__Impl
	rule__BuildEntry__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getIfNEqAction_2_0()); }
(

)
{ after(grammarAccess.getBuildEntryAccess().getIfNEqAction_2_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_2__1__Impl
	rule__BuildEntry__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getIFNEQTerminalRuleCall_2_1()); }
	RULE_IFNEQ
{ after(grammarAccess.getBuildEntryAccess().getIFNEQTerminalRuleCall_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getValueAssignment_2_2()); }
(rule__BuildEntry__ValueAssignment_2_2)
{ after(grammarAccess.getBuildEntryAccess().getValueAssignment_2_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__BuildEntry__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_3__0__Impl
	rule__BuildEntry__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getIfndefAction_3_0()); }
(

)
{ after(grammarAccess.getBuildEntryAccess().getIfndefAction_3_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_3__1__Impl
	rule__BuildEntry__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getIFNDEFTerminalRuleCall_3_1()); }
	RULE_IFNDEF
{ after(grammarAccess.getBuildEntryAccess().getIFNDEFTerminalRuleCall_3_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_3__2__Impl
	rule__BuildEntry__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getNameAssignment_3_2()); }
(rule__BuildEntry__NameAssignment_3_2)
{ after(grammarAccess.getBuildEntryAccess().getNameAssignment_3_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_3__3__Impl
	rule__BuildEntry__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getEolParserRuleCall_3_3()); }
	ruleEol
{ after(grammarAccess.getBuildEntryAccess().getEolParserRuleCall_3_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_3__4__Impl
	rule__BuildEntry__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getAlternatives_3_4()); }
(rule__BuildEntry__Alternatives_3_4)
{ after(grammarAccess.getBuildEntryAccess().getAlternatives_3_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_3__5__Impl
	rule__BuildEntry__Group_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getEolParserRuleCall_3_5()); }
	ruleEol
{ after(grammarAccess.getBuildEntryAccess().getEolParserRuleCall_3_5()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_3__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_3__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_3__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getENDIFTerminalRuleCall_3_6()); }
	RULE_ENDIF
{ after(grammarAccess.getBuildEntryAccess().getENDIFTerminalRuleCall_3_6()); }
)



;
finally {
	restoreStackSize(stackSize);
}
















rule__BuildEntry__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_4__0__Impl
	rule__BuildEntry__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getHostProgramAction_4_0()); }
(

)
{ after(grammarAccess.getBuildEntryAccess().getHostProgramAction_4_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_4__1__Impl
	rule__BuildEntry__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getNameAssignment_4_1()); }
(rule__BuildEntry__NameAssignment_4_1)
{ after(grammarAccess.getBuildEntryAccess().getNameAssignment_4_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_4__2__Impl
	rule__BuildEntry__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getVariableAssignment_4_2()); }
(rule__BuildEntry__VariableAssignment_4_2)?
{ after(grammarAccess.getBuildEntryAccess().getVariableAssignment_4_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_4__3__Impl
	rule__BuildEntry__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getValueAssignment_4_3()); }
(rule__BuildEntry__ValueAssignment_4_3)
{ after(grammarAccess.getBuildEntryAccess().getValueAssignment_4_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getInnerAssignment_4_4()); }
(rule__BuildEntry__InnerAssignment_4_4)?
{ after(grammarAccess.getBuildEntryAccess().getInnerAssignment_4_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}












rule__BuildEntry__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_5__0__Impl
	rule__BuildEntry__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getObjectAction_5_0()); }
(

)
{ after(grammarAccess.getBuildEntryAccess().getObjectAction_5_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getAlternatives_5_1()); }
(rule__BuildEntry__Alternatives_5_1)
{ after(grammarAccess.getBuildEntryAccess().getAlternatives_5_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__BuildEntry__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_6__0__Impl
	rule__BuildEntry__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getTargetAction_6_0()); }
(

)
{ after(grammarAccess.getBuildEntryAccess().getTargetAction_6_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_6__1__Impl
	rule__BuildEntry__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getTargetAssignment_6_1()); }
(rule__BuildEntry__TargetAssignment_6_1)
{ after(grammarAccess.getBuildEntryAccess().getTargetAssignment_6_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_6__2__Impl
	rule__BuildEntry__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getDPOINTTerminalRuleCall_6_2()); }
	RULE_DPOINT
{ after(grammarAccess.getBuildEntryAccess().getDPOINTTerminalRuleCall_6_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getAlternatives_6_3()); }
(rule__BuildEntry__Alternatives_6_3)
{ after(grammarAccess.getBuildEntryAccess().getAlternatives_6_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__BuildEntry__Group_6_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_6_3_1__0__Impl
	rule__BuildEntry__Group_6_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_6_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getValuesAssignment_6_3_1_0()); }
(rule__BuildEntry__ValuesAssignment_6_3_1_0)
{ after(grammarAccess.getBuildEntryAccess().getValuesAssignment_6_3_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_6_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_6_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_6_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getGroup_6_3_1_1()); }
(rule__BuildEntry__Group_6_3_1_1__0)*
{ after(grammarAccess.getBuildEntryAccess().getGroup_6_3_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__BuildEntry__Group_6_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_6_3_1_1__0__Impl
	rule__BuildEntry__Group_6_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_6_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getEolParserRuleCall_6_3_1_1_0()); }
	ruleEol
{ after(grammarAccess.getBuildEntryAccess().getEolParserRuleCall_6_3_1_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_6_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_6_3_1_1__1__Impl
	rule__BuildEntry__Group_6_3_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_6_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
(
{ before(grammarAccess.getBuildEntryAccess().getTABTerminalRuleCall_6_3_1_1_1()); }
(	RULE_TAB)
{ after(grammarAccess.getBuildEntryAccess().getTABTerminalRuleCall_6_3_1_1_1()); }
)
(
{ before(grammarAccess.getBuildEntryAccess().getTABTerminalRuleCall_6_3_1_1_1()); }
(	RULE_TAB)*
{ after(grammarAccess.getBuildEntryAccess().getTABTerminalRuleCall_6_3_1_1_1()); }
)
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_6_3_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_6_3_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_6_3_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getValuesAssignment_6_3_1_1_2()); }
(rule__BuildEntry__ValuesAssignment_6_3_1_1_2)
{ after(grammarAccess.getBuildEntryAccess().getValuesAssignment_6_3_1_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__BuildEntry__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_7__0__Impl
	rule__BuildEntry__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getMyVariableAction_7_0()); }
(

)
{ after(grammarAccess.getBuildEntryAccess().getMyVariableAction_7_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_7__1__Impl
	rule__BuildEntry__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getNameAssignment_7_1()); }
(rule__BuildEntry__NameAssignment_7_1)
{ after(grammarAccess.getBuildEntryAccess().getNameAssignment_7_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_7__2__Impl
	rule__BuildEntry__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getVariableAssignment_7_2()); }
(rule__BuildEntry__VariableAssignment_7_2)?
{ after(grammarAccess.getBuildEntryAccess().getVariableAssignment_7_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__BuildEntry__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuildEntry__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getBuildEntryAccess().getValueAssignment_7_3()); }
(rule__BuildEntry__ValueAssignment_7_3)
{ after(grammarAccess.getBuildEntryAccess().getValueAssignment_7_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__Entry__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entry__Group__0__Impl
	rule__Entry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEntryAccess().getEntryAction_0()); }
(

)
{ after(grammarAccess.getEntryAccess().getEntryAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Entry__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entry__Group__1__Impl
	rule__Entry__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEntryAccess().getOBJ_STARTTerminalRuleCall_1()); }
	RULE_OBJ_START
{ after(grammarAccess.getEntryAccess().getOBJ_STARTTerminalRuleCall_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Entry__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entry__Group__2__Impl
	rule__Entry__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEntryAccess().getVariableAssignment_2()); }
(rule__Entry__VariableAssignment_2)
{ after(grammarAccess.getEntryAccess().getVariableAssignment_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Entry__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entry__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getEntryAccess().getValueAssignment_3()); }
(rule__Entry__ValueAssignment_3)
{ after(grammarAccess.getEntryAccess().getValueAssignment_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__If__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__0__Impl
	rule__If__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getBRACE_STARTTerminalRuleCall_0()); }
	RULE_BRACE_START
{ after(grammarAccess.getIfAccess().getBRACE_STARTTerminalRuleCall_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__1__Impl
	rule__If__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getAlternatives_1()); }
(rule__If__Alternatives_1)
{ after(grammarAccess.getIfAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__2__Impl
	rule__If__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getBRACE_ENDTerminalRuleCall_2()); }
	RULE_BRACE_END
{ after(grammarAccess.getIfAccess().getBRACE_ENDTerminalRuleCall_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__3__Impl
	rule__If__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getEolParserRuleCall_3()); }
	ruleEol
{ after(grammarAccess.getIfAccess().getEolParserRuleCall_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__4__Impl
	rule__If__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getTABTerminalRuleCall_4()); }
(	RULE_TAB)*
{ after(grammarAccess.getIfAccess().getTABTerminalRuleCall_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__5__Impl
	rule__If__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getAlternatives_5()); }
(rule__If__Alternatives_5)
{ after(grammarAccess.getIfAccess().getAlternatives_5()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__6__Impl
	rule__If__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getEolParserRuleCall_6()); }
	ruleEol
{ after(grammarAccess.getIfAccess().getEolParserRuleCall_6()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__7__Impl
	rule__If__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getGroup_7()); }
(rule__If__Group_7__0)?
{ after(grammarAccess.getIfAccess().getGroup_7()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getENDIFTerminalRuleCall_8()); }
	RULE_ENDIF
{ after(grammarAccess.getIfAccess().getENDIFTerminalRuleCall_8()); }
)



;
finally {
	restoreStackSize(stackSize);
}




















rule__If__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_1_0__0__Impl
	rule__If__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getVariableParserRuleCall_1_0_0()); }
	ruleVariable
{ after(grammarAccess.getIfAccess().getVariableParserRuleCall_1_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_1_0__1__Impl
	rule__If__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getCOMMATerminalRuleCall_1_0_1()); }
	RULE_COMMA
{ after(grammarAccess.getIfAccess().getCOMMATerminalRuleCall_1_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getAlternatives_1_0_2()); }
(rule__If__Alternatives_1_0_2)
{ after(grammarAccess.getIfAccess().getAlternatives_1_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__If__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_1_1__0__Impl
	rule__If__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getShellAssignment_1_1_0()); }
(rule__If__ShellAssignment_1_1_0)
{ after(grammarAccess.getIfAccess().getShellAssignment_1_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getCOMMATerminalRuleCall_1_1_1()); }
(	RULE_COMMA)?
{ after(grammarAccess.getIfAccess().getCOMMATerminalRuleCall_1_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__If__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_7__0__Impl
	rule__If__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getELSETerminalRuleCall_7_0()); }
	RULE_ELSE
{ after(grammarAccess.getIfAccess().getELSETerminalRuleCall_7_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_7__1__Impl
	rule__If__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getEolParserRuleCall_7_1()); }
	ruleEol
{ after(grammarAccess.getIfAccess().getEolParserRuleCall_7_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_7__2__Impl
	rule__If__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getTABTerminalRuleCall_7_2()); }
(	RULE_TAB)*
{ after(grammarAccess.getIfAccess().getTABTerminalRuleCall_7_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_7__3__Impl
	rule__If__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getAlternatives_7_3()); }
(rule__If__Alternatives_7_3)
{ after(grammarAccess.getIfAccess().getAlternatives_7_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_7__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_7__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_7__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getIfAccess().getEolParserRuleCall_7_4()); }
	ruleEol
{ after(grammarAccess.getIfAccess().getEolParserRuleCall_7_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}












rule__Object_Y__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object_Y__Group__0__Impl
	rule__Object_Y__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object_Y__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getObject_YAccess().getObj_yAction_0()); }
(

)
{ after(grammarAccess.getObject_YAccess().getObj_yAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Object_Y__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object_Y__Group__1__Impl
	rule__Object_Y__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Object_Y__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getObject_YAccess().getOBJ_YTerminalRuleCall_1()); }
	RULE_OBJ_Y
{ after(grammarAccess.getObject_YAccess().getOBJ_YTerminalRuleCall_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Object_Y__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object_Y__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object_Y__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getObject_YAccess().getValueAssignment_2()); }
(rule__Object_Y__ValueAssignment_2)
{ after(grammarAccess.getObject_YAccess().getValueAssignment_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__Object_M__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object_M__Group__0__Impl
	rule__Object_M__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object_M__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getObject_MAccess().getObj_mAction_0()); }
(

)
{ after(grammarAccess.getObject_MAccess().getObj_mAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Object_M__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object_M__Group__1__Impl
	rule__Object_M__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Object_M__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getObject_MAccess().getOBJ_MTerminalRuleCall_1()); }
	RULE_OBJ_M
{ after(grammarAccess.getObject_MAccess().getOBJ_MTerminalRuleCall_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Object_M__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object_M__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object_M__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getObject_MAccess().getValueAssignment_2()); }
(rule__Object_M__ValueAssignment_2)
{ after(grammarAccess.getObject_MAccess().getValueAssignment_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__Assign__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assign__Group__0__Impl
	rule__Assign__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAssignAccess().getEQTerminalRuleCall_0()); }
	RULE_EQ
{ after(grammarAccess.getAssignAccess().getEQTerminalRuleCall_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Assign__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assign__Group__1__Impl
	rule__Assign__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAssignAccess().getTABTerminalRuleCall_1()); }
(	RULE_TAB)*
{ after(grammarAccess.getAssignAccess().getTABTerminalRuleCall_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Assign__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assign__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAssignAccess().getValuesParserRuleCall_2()); }
	ruleValues
{ after(grammarAccess.getAssignAccess().getValuesParserRuleCall_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__AssignExtra__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignExtra__Group__0__Impl
	rule__AssignExtra__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignExtra__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAssignExtraAccess().getTABTerminalRuleCall_0()); }
(	RULE_TAB)*
{ after(grammarAccess.getAssignExtraAccess().getTABTerminalRuleCall_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AssignExtra__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignExtra__Group__1__Impl
	rule__AssignExtra__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignExtra__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAssignExtraAccess().getAlternatives_1()); }
(rule__AssignExtra__Alternatives_1)
{ after(grammarAccess.getAssignExtraAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__AssignExtra__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignExtra__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignExtra__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getAssignExtraAccess().getAssignParserRuleCall_2()); }
	ruleAssign
{ after(grammarAccess.getAssignExtraAccess().getAssignParserRuleCall_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__Values__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Values__Group__0__Impl
	rule__Values__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValuesAccess().getGroup_0()); }
(rule__Values__Group_0__0)?
{ after(grammarAccess.getValuesAccess().getGroup_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Values__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Values__Group__1__Impl
	rule__Values__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
(
{ before(grammarAccess.getValuesAccess().getItemsAssignment_1()); }
(rule__Values__ItemsAssignment_1)
{ after(grammarAccess.getValuesAccess().getItemsAssignment_1()); }
)
(
{ before(grammarAccess.getValuesAccess().getItemsAssignment_1()); }
(rule__Values__ItemsAssignment_1)*
{ after(grammarAccess.getValuesAccess().getItemsAssignment_1()); }
)
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Values__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Values__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValuesAccess().getGroup_2()); }
(rule__Values__Group_2__0)*
{ after(grammarAccess.getValuesAccess().getGroup_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__Values__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Values__Group_0__0__Impl
	rule__Values__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValuesAccess().getBACKSLASHTerminalRuleCall_0_0()); }
	RULE_BACKSLASH
{ after(grammarAccess.getValuesAccess().getBACKSLASHTerminalRuleCall_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Values__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Values__Group_0__1__Impl
	rule__Values__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValuesAccess().getEolParserRuleCall_0_1()); }
	ruleEol
{ after(grammarAccess.getValuesAccess().getEolParserRuleCall_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Values__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Values__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValuesAccess().getTABTerminalRuleCall_0_2()); }
(	RULE_TAB)*
{ after(grammarAccess.getValuesAccess().getTABTerminalRuleCall_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__Values__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Values__Group_2__0__Impl
	rule__Values__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValuesAccess().getBACKSLASHTerminalRuleCall_2_0()); }
	RULE_BACKSLASH
{ after(grammarAccess.getValuesAccess().getBACKSLASHTerminalRuleCall_2_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Values__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Values__Group_2__1__Impl
	rule__Values__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValuesAccess().getEolParserRuleCall_2_1()); }
	ruleEol
{ after(grammarAccess.getValuesAccess().getEolParserRuleCall_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Values__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Values__Group_2__2__Impl
	rule__Values__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValuesAccess().getTABTerminalRuleCall_2_2()); }
(	RULE_TAB)*
{ after(grammarAccess.getValuesAccess().getTABTerminalRuleCall_2_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Values__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Values__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
(
{ before(grammarAccess.getValuesAccess().getItemsAssignment_2_3()); }
(rule__Values__ItemsAssignment_2_3)
{ after(grammarAccess.getValuesAccess().getItemsAssignment_2_3()); }
)
(
{ before(grammarAccess.getValuesAccess().getItemsAssignment_2_3()); }
(rule__Values__ItemsAssignment_2_3)*
{ after(grammarAccess.getValuesAccess().getItemsAssignment_2_3()); }
)
)



;
finally {
	restoreStackSize(stackSize);
}










rule__Value__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_0__0__Impl
	rule__Value__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValueAccess().getObjectFileAction_0_0()); }
(

)
{ after(grammarAccess.getValueAccess().getObjectFileAction_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_0__1__Impl
	rule__Value__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValueAccess().getSYMBOLTerminalRuleCall_0_1()); }
	RULE_SYMBOL
{ after(grammarAccess.getValueAccess().getSYMBOLTerminalRuleCall_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValueAccess().getOBJ_FILETerminalRuleCall_0_2()); }
	RULE_OBJ_FILE
{ after(grammarAccess.getValueAccess().getOBJ_FILETerminalRuleCall_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__Value__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_1__0__Impl
	rule__Value__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValueAccess().getObjectSingleFileAction_1_0()); }
(

)
{ after(grammarAccess.getValueAccess().getObjectSingleFileAction_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValueAccess().getNameAssignment_1_1()); }
(rule__Value__NameAssignment_1_1)
{ after(grammarAccess.getValueAccess().getNameAssignment_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__Value__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_2__0__Impl
	rule__Value__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValueAccess().getObjectVariableAction_2_0()); }
(

)
{ after(grammarAccess.getValueAccess().getObjectVariableAction_2_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_2__1__Impl
	rule__Value__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValueAccess().getValueAssignment_2_1()); }
(rule__Value__ValueAssignment_2_1)
{ after(grammarAccess.getValueAccess().getValueAssignment_2_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValueAccess().getAdditionalAssignment_2_2()); }
(rule__Value__AdditionalAssignment_2_2)?
{ after(grammarAccess.getValueAccess().getAdditionalAssignment_2_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__Value__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_3__0__Impl
	rule__Value__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValueAccess().getObjectShellCmdAction_3_0()); }
(

)
{ after(grammarAccess.getValueAccess().getObjectShellCmdAction_3_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValueAccess().getValueAssignment_3_1()); }
(rule__Value__ValueAssignment_3_1)
{ after(grammarAccess.getValueAccess().getValueAssignment_3_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__Value__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_4__0__Impl
	rule__Value__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValueAccess().getObjectStringAction_4_0()); }
(

)
{ after(grammarAccess.getValueAccess().getObjectStringAction_4_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_4_1()); }
	RULE_STRING
{ after(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_4_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__Value__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_5__0__Impl
	rule__Value__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValueAccess().getObjectShellCharAction_5_0()); }
(

)
{ after(grammarAccess.getValueAccess().getObjectShellCharAction_5_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValueAccess().getValueAssignment_5_1()); }
(rule__Value__ValueAssignment_5_1)
{ after(grammarAccess.getValueAccess().getValueAssignment_5_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__Value__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_6__0__Impl
	rule__Value__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValueAccess().getObjectDirAction_6_0()); }
(

)
{ after(grammarAccess.getValueAccess().getObjectDirAction_6_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_6__1__Impl
	rule__Value__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValueAccess().getSYMBOLTerminalRuleCall_6_1()); }
	RULE_SYMBOL
{ after(grammarAccess.getValueAccess().getSYMBOLTerminalRuleCall_6_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getValueAccess().getSLASHTerminalRuleCall_6_2()); }
	RULE_SLASH
{ after(grammarAccess.getValueAccess().getSLASHTerminalRuleCall_6_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__Variable__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_0__0__Impl
	rule__Variable__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getVariableAccess().getVariableAction_0_0()); }
(

)
{ after(grammarAccess.getVariableAccess().getVariableAction_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_0__1__Impl
	rule__Variable__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getVariableAccess().getDOLLARTerminalRuleCall_0_1()); }
	RULE_DOLLAR
{ after(grammarAccess.getVariableAccess().getDOLLARTerminalRuleCall_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getVariableAccess().getNameAssignment_0_2()); }
(rule__Variable__NameAssignment_0_2)
{ after(grammarAccess.getVariableAccess().getNameAssignment_0_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}








rule__Variable__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__0__Impl
	rule__Variable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getVariableAccess().getDOLLARTerminalRuleCall_1_0()); }
	RULE_DOLLAR
{ after(grammarAccess.getVariableAccess().getDOLLARTerminalRuleCall_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__1__Impl
	rule__Variable__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getVariableAccess().getBRACE_STARTTerminalRuleCall_1_1()); }
	RULE_BRACE_START
{ after(grammarAccess.getVariableAccess().getBRACE_STARTTerminalRuleCall_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__2__Impl
	rule__Variable__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getVariableAccess().getNameAssignment_1_2()); }
(rule__Variable__NameAssignment_1_2)
{ after(grammarAccess.getVariableAccess().getNameAssignment_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getVariableAccess().getBRACE_ENDTerminalRuleCall_1_3()); }
	RULE_BRACE_END
{ after(grammarAccess.getVariableAccess().getBRACE_ENDTerminalRuleCall_1_3()); }
)



;
finally {
	restoreStackSize(stackSize);
}










rule__ShellCmd__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShellCmd__Group_0__0__Impl
	rule__ShellCmd__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShellCmd__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShellCmdAccess().getShellCmdAction_0_0()); }
(

)
{ after(grammarAccess.getShellCmdAccess().getShellCmdAction_0_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ShellCmd__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShellCmd__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShellCmd__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShellCmdAccess().getGroup_0_1()); }
(rule__ShellCmd__Group_0_1__0)
{ after(grammarAccess.getShellCmdAccess().getGroup_0_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__ShellCmd__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShellCmd__Group_0_1__0__Impl
	rule__ShellCmd__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShellCmd__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShellCmdAccess().getDOLLARTerminalRuleCall_0_1_0()); }
	RULE_DOLLAR
{ after(grammarAccess.getShellCmdAccess().getDOLLARTerminalRuleCall_0_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ShellCmd__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShellCmd__Group_0_1__1__Impl
	rule__ShellCmd__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShellCmd__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShellCmdAccess().getBRACE_STARTTerminalRuleCall_0_1_1()); }
	RULE_BRACE_START
{ after(grammarAccess.getShellCmdAccess().getBRACE_STARTTerminalRuleCall_0_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ShellCmd__Group_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShellCmd__Group_0_1__2__Impl
	rule__ShellCmd__Group_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ShellCmd__Group_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShellCmdAccess().getNameAssignment_0_1_2()); }
(rule__ShellCmd__NameAssignment_0_1_2)
{ after(grammarAccess.getShellCmdAccess().getNameAssignment_0_1_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ShellCmd__Group_0_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShellCmd__Group_0_1__3__Impl
	rule__ShellCmd__Group_0_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ShellCmd__Group_0_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
(
{ before(grammarAccess.getShellCmdAccess().getShellPartAssignment_0_1_3()); }
(rule__ShellCmd__ShellPartAssignment_0_1_3)
{ after(grammarAccess.getShellCmdAccess().getShellPartAssignment_0_1_3()); }
)
(
{ before(grammarAccess.getShellCmdAccess().getShellPartAssignment_0_1_3()); }
(rule__ShellCmd__ShellPartAssignment_0_1_3)*
{ after(grammarAccess.getShellCmdAccess().getShellPartAssignment_0_1_3()); }
)
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ShellCmd__Group_0_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShellCmd__Group_0_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShellCmd__Group_0_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShellCmdAccess().getBRACE_ENDTerminalRuleCall_0_1_4()); }
	RULE_BRACE_END
{ after(grammarAccess.getShellCmdAccess().getBRACE_ENDTerminalRuleCall_0_1_4()); }
)



;
finally {
	restoreStackSize(stackSize);
}












rule__ShellCmd__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShellCmd__Group_1__0__Impl
	rule__ShellCmd__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShellCmd__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShellCmdAccess().getIncludeAction_1_0()); }
(

)
{ after(grammarAccess.getShellCmdAccess().getIncludeAction_1_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ShellCmd__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShellCmd__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShellCmd__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShellCmdAccess().getINCLUDETerminalRuleCall_1_1()); }
	RULE_INCLUDE
{ after(grammarAccess.getShellCmdAccess().getINCLUDETerminalRuleCall_1_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__ShellPart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShellPart__Group__0__Impl
	rule__ShellPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShellPart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShellPartAccess().getShellPartAction_0()); }
(

)
{ after(grammarAccess.getShellPartAccess().getShellPartAction_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ShellPart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShellPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShellPart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShellPartAccess().getAlternatives_1()); }
(rule__ShellPart__Alternatives_1)
{ after(grammarAccess.getShellPartAccess().getAlternatives_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}






rule__ShellPart__Group_1_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShellPart__Group_1_5__0__Impl
	rule__ShellPart__Group_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShellPart__Group_1_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShellPartAccess().getBACKSLASHTerminalRuleCall_1_5_0()); }
	RULE_BACKSLASH
{ after(grammarAccess.getShellPartAccess().getBACKSLASHTerminalRuleCall_1_5_0()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ShellPart__Group_1_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShellPart__Group_1_5__1__Impl
	rule__ShellPart__Group_1_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShellPart__Group_1_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShellPartAccess().getEolParserRuleCall_1_5_1()); }
	ruleEol
{ after(grammarAccess.getShellPartAccess().getEolParserRuleCall_1_5_1()); }
)



;
finally {
	restoreStackSize(stackSize);
}


rule__ShellPart__Group_1_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShellPart__Group_1_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShellPart__Group_1_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:

(
{ before(grammarAccess.getShellPartAccess().getTABTerminalRuleCall_1_5_2()); }
(	RULE_TAB)*
{ after(grammarAccess.getShellPartAccess().getTABTerminalRuleCall_1_5_2()); }
)



;
finally {
	restoreStackSize(stackSize);
}









rule__Model__BuildEntryAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getBuildEntryBuildEntryParserRuleCall_1_0()); }
	ruleBuildEntry{ after(grammarAccess.getModelAccess().getBuildEntryBuildEntryParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__BuildEntryAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getBuildEntryBuildEntryParserRuleCall_2_1_0()); }
	ruleBuildEntry{ after(grammarAccess.getModelAccess().getBuildEntryBuildEntryParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__ValueAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildEntryAccess().getValueEntryParserRuleCall_0_1_0()); }
	ruleEntry{ after(grammarAccess.getBuildEntryAccess().getValueEntryParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__ValueAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildEntryAccess().getValueIfParserRuleCall_1_2_0()); }
	ruleIf{ after(grammarAccess.getBuildEntryAccess().getValueIfParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__ValueAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildEntryAccess().getValueIfParserRuleCall_2_2_0()); }
	ruleIf{ after(grammarAccess.getBuildEntryAccess().getValueIfParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__NameAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildEntryAccess().getNameSYMBOLTerminalRuleCall_3_2_0()); }
	RULE_SYMBOL{ after(grammarAccess.getBuildEntryAccess().getNameSYMBOLTerminalRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__ValueAssignment_3_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildEntryAccess().getValueObject_YParserRuleCall_3_4_0_0()); }
	ruleObject_Y{ after(grammarAccess.getBuildEntryAccess().getValueObject_YParserRuleCall_3_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__ValueAssignment_3_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildEntryAccess().getValueObject_MParserRuleCall_3_4_1_0()); }
	ruleObject_M{ after(grammarAccess.getBuildEntryAccess().getValueObject_MParserRuleCall_3_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__NameAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildEntryAccess().getNameSYMBOLTerminalRuleCall_4_1_0()); }
	RULE_SYMBOL{ after(grammarAccess.getBuildEntryAccess().getNameSYMBOLTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__VariableAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildEntryAccess().getVariableVariableParserRuleCall_4_2_0()); }
	ruleVariable{ after(grammarAccess.getBuildEntryAccess().getVariableVariableParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__ValueAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildEntryAccess().getValueAssignExtraParserRuleCall_4_3_0()); }
	ruleAssignExtra{ after(grammarAccess.getBuildEntryAccess().getValueAssignExtraParserRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__InnerAssignment_4_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildEntryAccess().getInnerAssignParserRuleCall_4_4_0()); }
	ruleAssign{ after(grammarAccess.getBuildEntryAccess().getInnerAssignParserRuleCall_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__ValueAssignment_5_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildEntryAccess().getValueObject_YParserRuleCall_5_1_0_0()); }
	ruleObject_Y{ after(grammarAccess.getBuildEntryAccess().getValueObject_YParserRuleCall_5_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__ValueAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildEntryAccess().getValueObject_MParserRuleCall_5_1_1_0()); }
	ruleObject_M{ after(grammarAccess.getBuildEntryAccess().getValueObject_MParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__TargetAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildEntryAccess().getTargetValuesParserRuleCall_6_1_0()); }
	ruleValues{ after(grammarAccess.getBuildEntryAccess().getTargetValuesParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__ValuesAssignment_6_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildEntryAccess().getValuesValuesParserRuleCall_6_3_1_0_0()); }
	ruleValues{ after(grammarAccess.getBuildEntryAccess().getValuesValuesParserRuleCall_6_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__ValuesAssignment_6_3_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildEntryAccess().getValuesValuesParserRuleCall_6_3_1_1_2_0()); }
	ruleValues{ after(grammarAccess.getBuildEntryAccess().getValuesValuesParserRuleCall_6_3_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__NameAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildEntryAccess().getNameSYMBOLTerminalRuleCall_7_1_0()); }
	RULE_SYMBOL{ after(grammarAccess.getBuildEntryAccess().getNameSYMBOLTerminalRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__VariableAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildEntryAccess().getVariableVariableParserRuleCall_7_2_0()); }
	ruleVariable{ after(grammarAccess.getBuildEntryAccess().getVariableVariableParserRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildEntry__ValueAssignment_7_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildEntryAccess().getValueAssignParserRuleCall_7_3_0()); }
	ruleAssign{ after(grammarAccess.getBuildEntryAccess().getValueAssignParserRuleCall_7_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__VariableAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryAccess().getVariableVariableParserRuleCall_2_0()); }
	ruleVariable{ after(grammarAccess.getEntryAccess().getVariableVariableParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryAccess().getValueAssignExtraParserRuleCall_3_0()); }
	ruleAssignExtra{ after(grammarAccess.getEntryAccess().getValueAssignExtraParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__ShellAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getShellShellCmdParserRuleCall_1_1_0_0()); }
	ruleShellCmd{ after(grammarAccess.getIfAccess().getShellShellCmdParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__ValueAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getValueObject_YParserRuleCall_5_0_0()); }
	ruleObject_Y{ after(grammarAccess.getIfAccess().getValueObject_YParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__ValueAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getValueObject_MParserRuleCall_5_1_0()); }
	ruleObject_M{ after(grammarAccess.getIfAccess().getValueObject_MParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__ValueAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getValueEntryParserRuleCall_5_2_0()); }
	ruleEntry{ after(grammarAccess.getIfAccess().getValueEntryParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__ValueAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getValueShellCmdParserRuleCall_5_3_0()); }
	ruleShellCmd{ after(grammarAccess.getIfAccess().getValueShellCmdParserRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__ElsevalueAssignment_7_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getElsevalueObject_YParserRuleCall_7_3_0_0()); }
	ruleObject_Y{ after(grammarAccess.getIfAccess().getElsevalueObject_YParserRuleCall_7_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__ElsevalueAssignment_7_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getElsevalueObject_MParserRuleCall_7_3_1_0()); }
	ruleObject_M{ after(grammarAccess.getIfAccess().getElsevalueObject_MParserRuleCall_7_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Object_Y__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObject_YAccess().getValueAssignExtraParserRuleCall_2_0()); }
	ruleAssignExtra{ after(grammarAccess.getObject_YAccess().getValueAssignExtraParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Object_M__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObject_MAccess().getValueAssignExtraParserRuleCall_2_0()); }
	ruleAssignExtra{ after(grammarAccess.getObject_MAccess().getValueAssignExtraParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Values__ItemsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesAccess().getItemsValueParserRuleCall_1_0()); }
	ruleValue{ after(grammarAccess.getValuesAccess().getItemsValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Values__ItemsAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesAccess().getItemsValueParserRuleCall_2_3_0()); }
	ruleValue{ after(grammarAccess.getValuesAccess().getItemsValueParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getNameSYMBOLTerminalRuleCall_1_1_0()); }
	RULE_SYMBOL{ after(grammarAccess.getValueAccess().getNameSYMBOLTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getValueVariableParserRuleCall_2_1_0()); }
	ruleVariable{ after(grammarAccess.getValueAccess().getValueVariableParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__AdditionalAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getAdditionalSLASHTerminalRuleCall_2_2_0()); }
	RULE_SLASH{ after(grammarAccess.getValueAccess().getAdditionalSLASHTerminalRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getValueShellCmdParserRuleCall_3_1_0()); }
	ruleShellCmd{ after(grammarAccess.getValueAccess().getValueShellCmdParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ValueAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getValueSHELL_CHARTerminalRuleCall_5_1_0()); }
	RULE_SHELL_CHAR{ after(grammarAccess.getValueAccess().getValueSHELL_CHARTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameSYMBOLTerminalRuleCall_0_2_0()); }
	RULE_SYMBOL{ after(grammarAccess.getVariableAccess().getNameSYMBOLTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameSYMBOLTerminalRuleCall_1_2_0()); }
	RULE_SYMBOL{ after(grammarAccess.getVariableAccess().getNameSYMBOLTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShellCmd__NameAssignment_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShellCmdAccess().getNameSYMBOLTerminalRuleCall_0_1_2_0()); }
	RULE_SYMBOL{ after(grammarAccess.getShellCmdAccess().getNameSYMBOLTerminalRuleCall_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShellCmd__ShellPartAssignment_0_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShellCmdAccess().getShellPartShellPartParserRuleCall_0_1_3_0()); }
	ruleShellPart{ after(grammarAccess.getShellCmdAccess().getShellPartShellPartParserRuleCall_0_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShellPart__ValAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShellPartAccess().getValVarSlashSymParserRuleCall_1_0_0()); }
	ruleVarSlashSym{ after(grammarAccess.getShellPartAccess().getValVarSlashSymParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShellPart__CmdAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShellPartAccess().getCmdShellCmdParserRuleCall_1_1_0()); }
	ruleShellCmd{ after(grammarAccess.getShellPartAccess().getCmdShellCmdParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarSlashSym__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarSlashSymAccess().getNameSLASHTerminalRuleCall_1_0()); }
	RULE_SLASH{ after(grammarAccess.getVarSlashSymAccess().getNameSLASHTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarSlashSym__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarSlashSymAccess().getNameSYMBOLTerminalRuleCall_2_0()); }
	RULE_SYMBOL{ after(grammarAccess.getVarSlashSymAccess().getNameSYMBOLTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_NLI : '\n';

RULE_TAB : '\t';

RULE_WSS : ' '+;

RULE_SL_COMMENT : '#' ~('\n')*;

RULE_OBJ_START : 'obj-';

RULE_OBJ_Y : 'obj-y';

RULE_OBJ_M : 'obj-m';

RULE_IFEQ : 'ifeq';

RULE_IFNEQ : 'ifneq';

RULE_IFNDEF : 'ifndef';

RULE_ELSE : 'else';

RULE_ENDIF : 'endif';

RULE_Y : 'y';

RULE_M : 'm';

RULE_OBJ_FILE : '.o';

RULE_INCLUDE : 'include' ~(RULE_NLI)+;

RULE_SYMBOL : ('A'..'Z'|'a'..'z'|'0'..'9'|'_'|'-'|'.'|'@')+;

RULE_SHELL_CHAR : ('>'|'<'|'|'|'&');

RULE_DOLLAR : '$';

RULE_BRACE_START : '(';

RULE_BRACE_END : ')';

RULE_QUOTE : '"';

RULE_PLUS : '+';

RULE_DPOINT : ':';

RULE_EQ : '=';

RULE_SLASH : '/';

RULE_BACKSLASH : '\\';

RULE_COMMA : ',';

RULE_SEMICOLON : ';';

fragment RULE_STR_ESC : '\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\\'|'$');

RULE_STRING : '"' (RULE_STR_ESC|~(('"'|'\r'|'\n'|'\\')))* '"';


