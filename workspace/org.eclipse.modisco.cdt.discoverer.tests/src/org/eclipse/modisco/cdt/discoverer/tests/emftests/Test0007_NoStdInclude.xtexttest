emftest
package org.eclipse.modisco.cdt.discoverer.tests
default at.jku.weiner.c.common.common
imports at.jku.weiner.c.preprocess.preprocess as preprocess
imports at.jku.weiner.c.parser.parser as parser

class=EMFTest method=emfTest()
options class=EMFTest method=getOptions()

source file="res/Test0007_NoStdInclude"

(Model
	units+=
	// Another predefined is loaded with -nostdinc
	(TranslationUnit
		path++"platform:/plugin/at.jku.weiner.c.preprocess/res/predefined/gcc_4.8.4_nostdinc.h",
		preprocess=
		(preprocess::Preprocess
			
		)
	),
	// Empty.c
	(TranslationUnit
		preprocess=
		(preprocess::Preprocess
			
		),
		parser=
		(parser::Parser
			external+=
			(parser::ExternalDeclaration 
				declaration=
				(parser::Declaration
					specifiers=
					(parser::DeclarationSpecifiers
						declarationSpecifier+=
						(parser::TypeSpecifier
							name++"int"
						)
					),
					initDeclaratorList+=
					(parser::InitDeclaratorList
						initDeclarator+=
						(parser::InitDeclarator
							declarator=
							(parser::Declarator
								declarator=
								(parser::DirectDeclarator
									id++"i",
									declaratorSuffix isEmpty
								)
							),
							initializer=
							(parser::Initializer
								expr=
								(parser::AssignmentExpression
									expr=
									(parser::ConditionalExpression
										expr=
										(parser::LogicalOrExpression
											expr+=
											(parser::LogicalAndExpression
												expr+=
												(parser::InclusiveOrExpression
													expr+=
													(parser::ExclusiveOrExpression
														expr+=
														(parser::AndExpression
															expr+=
															(parser::EqualityExpression
																expr+=
																(parser::RelationalExpression
																	expr+=
																	(parser::ShiftExpression
																		expr+=
																		(parser::AdditiveExpression
																			expr+=
																			(parser::MultiplicativeExpression
																				expr+=
																				(parser::CastExpression
																					expr=
																					(parser::UnaryExpression
																						expr=
																						(parser::PostfixExpression
																							expr+=
																							(parser::PrimaryExpression
																								const=
																								(Constant2
																									dec++"1"
																								)
																							)
																						)
																					)
																				)
																			)
																		)
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								) // end assignment expression
							)
						)
					),
					semi++";"
				)	
			),
			(parser::ExternalDeclaration 
				declaration=
				(parser::Declaration
					specifiers=
					(parser::DeclarationSpecifiers
						declarationSpecifier+=
						(parser::TypeSpecifier
							name++"int"
						)
					),
					initDeclaratorList+=
					(parser::InitDeclaratorList
						initDeclarator+=
						(parser::InitDeclarator
							declarator=
							(parser::Declarator
								declarator=
								(parser::DirectDeclarator
									id++"_STDC_PREDEF_H",
									declaratorSuffix isEmpty
								)
							)
						)
					),
					semi++";"
				)	
			)
		),
		path++"${{path}}/${{plugin_id}}/${{sourceFile}}/Empty.c"
	)
)

before class=org.eclipse.modisco.cdt.discoverer.tests.EMFTest method=setNoStdInclude()
after class=org.eclipse.modisco.cdt.discoverer.tests.EMFTest method=includeDirsIsEmpty()
