/*
 * generated by Xtext 2.9.0-SNAPSHOT
 */
package org.xtext.example.mydsl1.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.example.mydsl1.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {
	
	@Inject
	private MyDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.example.mydsl1.ui.contentassist.antlr.internal.InternalMyDslParser createParser() {
		org.xtext.example.mydsl1.ui.contentassist.antlr.internal.InternalMyDslParser result = new org.xtext.example.mydsl1.ui.contentassist.antlr.internal.InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getDynamicAccess().getAlternatives(), "rule__Dynamic__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getGreetingAccess().getGroup(), "rule__Greeting__Group__0");
					put(grammarAccess.getTestAccess().getGroup(), "rule__Test__Group__0");
					put(grammarAccess.getModelAccess().getGreetingsAssignment_1(), "rule__Model__GreetingsAssignment_1");
					put(grammarAccess.getGreetingAccess().getNameAssignment_2(), "rule__Greeting__NameAssignment_2");
					put(grammarAccess.getGreetingAccess().getTestAssignment_4(), "rule__Greeting__TestAssignment_4");
					put(grammarAccess.getGreetingAccess().getResetAssignment_6(), "rule__Greeting__ResetAssignment_6");
					put(grammarAccess.getGreetingAccess().getIncAssignment_7(), "rule__Greeting__IncAssignment_7");
					put(grammarAccess.getGreetingAccess().getDynamicAssignment_8(), "rule__Greeting__DynamicAssignment_8");
					put(grammarAccess.getTestAccess().getNameAssignment_1(), "rule__Test__NameAssignment_1");
					put(grammarAccess.getResetAccess().getResetAssignment(), "rule__Reset__ResetAssignment");
					put(grammarAccess.getIncAccess().getIncAssignment(), "rule__Inc__IncAssignment");
					put(grammarAccess.getDynamicAccess().getTypeAssignment_0(), "rule__Dynamic__TypeAssignment_0");
					put(grammarAccess.getDynamicAccess().getTypeAssignment_1(), "rule__Dynamic__TypeAssignment_1");
					put(grammarAccess.getTypeAAccess().getTypeAssignment(), "rule__TypeA__TypeAssignment");
					put(grammarAccess.getTypeBAccess().getTypeAssignment(), "rule__TypeB__TypeAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.example.mydsl1.ui.contentassist.antlr.internal.InternalMyDslParser typedParser = (org.xtext.example.mydsl1.ui.contentassist.antlr.internal.InternalMyDslParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS" };
	}
	
	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
