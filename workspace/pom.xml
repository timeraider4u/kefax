<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
	http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>at.jku.weiner.kefax</groupId>
		<artifactId>parent</artifactId>
		<version>0.1.0-SNAPSHOT</version>
	</parent>
	
	<artifactId>workspace</artifactId>
	<packaging>pom</packaging>
	
	<properties>
		<my.version>${project.parent.version}</my.version>
		<tycho.version>0.24.0</tycho.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<eclipse.name>luna</eclipse.name>
		<xtext.version>2.9.0-SNAPSHOT</xtext.version>
		<xtext.other.version>3.0.0-SNAPSHOT</xtext.other.version>
		<!--
		<antlr.version>3.2.1-SNAPSHOT</antlr.version>
		-->
		<antlr.generator.version>3.2.1-SNAPSHOT</antlr.generator.version>

		<mwe2.version>${xtext.version}</mwe2.version>
		
		<lang.emf-gen>${basedir}/emf-gen</lang.emf-gen>
		<lang.src-gen>${basedir}/src-gen</lang.src-gen>
		<lang.xtend-gen>${basedir}/xtend-gen</lang.xtend-gen>
		<lang.tests.src-gen>${basedir}/../${project.artifactId}.tests/src-gen</lang.tests.src-gen>
		<lang.tests.xtend-gen>${basedir}/../${project.artifactId}.tests/xtend-gen</lang.tests.xtend-gen>
		<lang.ui.src-gen>${basedir}/../${project.artifactId}.ui/src-gen</lang.ui.src-gen>
		<lang.ui.xtend-gen>${basedir}/../${project.artifactId}.ui/xtend-gen</lang.ui.xtend-gen>
		<lang.ui.tests.src-gen>${basedir}/../${project.artifactId}.ui.tests/src-gen</lang.ui.tests.src-gen>
		<lang.ui.tests.xtend-gen>${basedir}/../${project.artifactId}.ui.tests/xtend-gen</lang.ui.tests.xtend-gen>

	</properties>
	
	<repositories>
		<repository>
			<id>NeoEMF</id>
			<name>NeoEMF</name>
			<layout>p2</layout>
			<url>http://timeraider4u.github.io/NeoEMF/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</releases>
		</repository>
		<repository>
			<id>org.xtext.antlr.generator.eclipse</id>
			<name>org.xtext.antlr.generator eclipse-repo</name>
			<layout>p2</layout>
			<url>https://timeraider4u.github.io/org.xtext.antlr.generator/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</releases>
		</repository>
		<repository>
			<id>Xtext</id>
			<name>Xtext</name>
			<layout>p2</layout>
			<url>http://timeraider4u.github.io/xtext/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</releases>
		</repository>
		<repository>
			<id>Eclipse</id>
			<name>Eclipse Repository</name>
			<layout>p2</layout>
			<url>http://download.eclipse.org/releases/${eclipse.name}</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</releases>
		</repository>
		<repository>
			<id>EclipseEMF</id>
			<name>Eclipse EMF Releases</name>
			<layout>p2</layout>
			<url>http://download.eclipse.org/modeling/emf/updates/releases/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</releases>
		</repository>
		<repository>
			<id>EclipseEMFMilestones</id>
			<name>Eclipse EMF Milestones</name>
			<layout>p2</layout>
			<url>http://download.eclipse.org/modeling/emf/updates/milestones/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</releases>
		</repository>
	</repositories>
	
	<pluginRepositories>
		<pluginRepository>
			<id>org.xtext.antlr.generator</id>
			<name>org.xtext.antlr.generator mvn-repo</name>
			<layout>default</layout>
			<url>https://raw.github.com/timeraider4u/org.xtext.antlr.generator/mvn-repo/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</releases>
		</pluginRepository>
		<pluginRepository>
			<id>Xtext2</id>
			<name>Xtext2 mvn-repo</name>
			<layout>default</layout>
			<url>https://raw.github.com/timeraider4u/xtext/mvn-repo/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</releases>
		</pluginRepository>
		<pluginRepository>
			<id>OSSSonatype</id>
			<name>OSS Sonatype</name>
			<layout>default</layout>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</releases>
		</pluginRepository>
	</pluginRepositories>
	
	<modules>
		<!--
		<module>at.jku.weiner.c.cmdarguments</module>
		<module>at.jku.weiner.c.cmdarguments.tests</module>
		<module>at.jku.weiner.c.cmdarguments.ui</module>
		<module>at.jku.weiner.c.cmdarguments.ui.tests</module>
		<module>at.jku.weiner.c.common</module>
		<module>at.jku.weiner.c.common.tests</module>
		<module>at.jku.weiner.c.common.ui</module>
		<module>at.jku.weiner.c.common.ui.tests</module>
		<module>at.jku.weiner.c.parser</module>
		<module>at.jku.weiner.c.parser.tests</module>
		<module>at.jku.weiner.c.parser.ui</module>
		<module>at.jku.weiner.c.parser.ui.tests</module>
		<module>at.jku.weiner.kefax.dotconfig</module>
		<module>at.jku.weiner.kefax.dotconfig.tests</module>
		<module>at.jku.weiner.kefax.dotconfig.ui</module>
		<module>at.jku.weiner.kefax.dotconfig.ui.tests</module>
		-->
		
		<module>at.jku.weiner.log</module>
		<module>at.jku.weiner.log.eclipselog</module>
		
		<module>at.jku.weiner.xtexttest</module>
		<module>at.jku.weiner.xtexttest.feature</module>
		<module>at.jku.weiner.xtexttest.tests</module>
		<module>at.jku.weiner.xtexttest.ui</module>
		<module>at.jku.weiner.xtexttest.ui.tests</module>
		<module>at.jku.weiner.xtexttest.updatesite</module>
	</modules>

	<build>
		<pluginManagement>
			<plugins>
				<!-- convert artifactId to file path -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.7</version>
					<executions>
						<execution>
							<id>regex-property</id>
							<phase>pre-clean</phase>
							<goals>
								<goal>regex-property</goal>
							</goals>
							<configuration>
								<name>artifactIdAsPath</name>
								<value>${project.artifactId}</value>
								<regex>\.</regex>
								<replacement>${file.separator}</replacement>
								<failIfNoMatch>true</failIfNoMatch>
							</configuration>
						</execution>
						<execution>
							<id>regex-property-2</id>
							<phase>pre-clean</phase>
							<goals>
								<goal>regex-property</goal>
							</goals>
							<configuration>
								<name>artifactIdAsXtextTest</name>
								<value>${project.artifactId}</value>
								<regex>(.*)[\.]tests$</regex>
								<replacement>$1</replacement>
								<failIfNoMatch>false</failIfNoMatch>
							</configuration>
						</execution>
						<execution>
							<id>regex-property-3</id>
							<phase>pre-clean</phase>
							<goals>
								<goal>regex-property</goal>
							</goals>
							<configuration>
								<name>artifactIdAsXtextTestPath</name>
								<value>${artifactIdAsXtextTest}</value>
								<regex>\.</regex>
								<replacement>${file.separator}</replacement>
								<failIfNoMatch>true</failIfNoMatch>
							</configuration>
						</execution>								
					</executions>
				</plugin>
				<!-- clean directories -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.5</version>
					<executions>
						<execution>
							<id>cleanNormal</id>
							<goals>
								<goal>clean</goal>
							</goals>
							<phase>clean</phase>
						</execution>
						<execution>
							<id>cleanExt</id>
							<goals>
								<goal>clean</goal>
							</goals>
							<phase>none</phase>
							<configuration>
								<filesets>
									<fileset>
										<directory>${lang.emf-gen}</directory>
									</fileset>
									<fileset>
										<directory>${lang.src-gen}</directory>
									</fileset>
									<fileset>
										<directory>${lang.xtend-gen}</directory>
									</fileset>
									<!-- clean ui plugin as well -->
									<fileset>
										<directory>${lang.ui.src-gen}</directory>
									</fileset>
									<fileset>
										<directory>${lang.ui.xtend-gen}</directory>
									</fileset>
									<!-- clean test fragment as well -->
									<fileset>
										<directory>${lang.tests.src-gen}</directory>
									</fileset>
									<fileset>
										<directory>${lang.tests.xtend-gen}</directory>
									</fileset>
									<!-- clean ui test fragment as well -->
									<fileset>
										<directory>${lang.ui.tests.src-gen}</directory>
									</fileset>
									<fileset>
										<directory>${lang.ui.tests.xtend-gen}</directory>
									</fileset>
								</filesets>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- ensure that file src-gen/.../Injector.java exists -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.4.1</version>
					<executions>
						<execution>
							<id>enforce-files-exist</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<phase>none</phase>
							<configuration>
								<rules>
									<requireFilesExist>
										<files>
											<file>${project.basedir}/src-gen/${artifactIdAsPath}/${xtextLangName}InjectorProvider.java</file>
										</files>
									</requireFilesExist>
								</rules>
								<fail>true</fail>
							</configuration>
						</execution>
						<execution>
							<id>enforce-ui-files-exist</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<phase>none</phase>
							<configuration>
								<rules>
									<requireFilesExist>
										<files>
											<file>${project.basedir}/src-gen/${artifactIdAsPath}/${xtextLangName}UiInjectorProvider.java</file>
										</files>
									</requireFilesExist>
								</rules>
								<fail>true</fail>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- run mwe2 workflow generation -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<executions>
						<execution>
							<id>run mwe2</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<tasks>
									<property name="compile_classpath" refid="maven.compile.classpath"/>
									<property name="runtime_classpath" refid="maven.runtime.classpath"/>
									<property name="test_classpath" refid="maven.test.classpath"/>
									<property name="plugin_classpath" refid="maven.plugin.classpath"/>
									<property name="my_classpath" value="${compile_classpath}${path.separator}${plugin_classpath}"/>
									<property name="project_dir" value="${project.basedir}"/>
									<!-- output some interesting variables -->
									<!--
									<echo message="compile classpath: ${compile_classpath}"/>
									<echo message="runtime classpath: ${runtime_classpath}"/>
									<echo message="test classpath:    ${test_classpath}"/>
									<echo message="plugin classpath:  ${plugin_classpath}"/>
									<echo message="my classpath:      ${my_classpath}"/>
									<echo message="project.basedir:   ${project_dir}"/>
									-->
									<!-- run mwe2 launcher -->
									<java classname="org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher" fork="true" failonerror="true">
										<classpath>
											<pathelement path="${compile_classpath}"/>
											<pathelement path="${plugin_classpath}"/>
										</classpath>
										<arg value="${project.basedir}/src/${artifactIdAsPath}/Generate${xtextLangName}.mwe2"/>
										<arg value="-p"/>
										<arg value="projectPath=${project.basedir}"/>
									</java>
									<!-- create directories and files - if they do not exist yet -->
									<touch file="${lang.src-gen}/.keep" mkdirs="true" />
									<touch file="${lang.xtend-gen}/.keep" mkdirs="true" />
									<touch file="${lang.tests.src-gen}/.keep" mkdirs="true" />
									<touch file="${lang.tests.xtend-gen}/.keep" mkdirs="true" />
									<touch file="${lang.ui.src-gen}/.keep" mkdirs="true" />
									<touch file="${lang.ui.xtend-gen}/.keep" mkdirs="true" />
									<touch file="${lang.ui.tests.src-gen}/.keep" mkdirs="true" />
									<touch file="${lang.ui.tests.xtend-gen}/.keep" mkdirs="true" />
								</tasks>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.xtext</groupId>
							<artifactId>antlr-generator</artifactId>
							<version>${antlr.generator.version}</version>
						</dependency>
						
						<!--
						<dependency>
							<groupId>org.xtext</groupId>
							<artifactId>org.antlr.generator</artifactId>
							<version>${antlr.version}</version>
						</dependency>
						

						<dependency>
							<groupId>org.antlr</groupId>
							<artifactId>org.antlr.runtime</artifactId>
							<version>${antlr.version}</version>
						</dependency>
						<dependency>
							<groupId>org.antlr</groupId>
							<artifactId>org.antlr.generator</artifactId>
							<version>${antlr.version}</version>
						</dependency>
						
						<dependency>
							<groupId>org.xtext</groupId>
							<artifactId>antlr-generator</artifactId>
							<version>${antlr.version}</version>
						</dependency>
						<dependency>
							<groupId>org.antlr</groupId>
							<artifactId>antlr-runtime</artifactId>
							<version>${antlr.version}</version>
						</dependency>
						-->
						<dependency>
							<groupId>org.eclipse.xtext</groupId>
							<artifactId>org.eclipse.xtext.xtext</artifactId>
							<version>${xtext.version}</version>
						</dependency>
						<dependency>
							<groupId>org.eclipse.xtext</groupId>
							<artifactId>org.eclipse.xtext.xtext.generator</artifactId>
							<version>${xtext.version}</version>
						</dependency>
						<dependency>
							<groupId>org.eclipse.xtext</groupId>
							<artifactId>org.eclipse.xtext.xbase</artifactId>
							<version>${xtext.other.version}</version>
						</dependency>
						<dependency>
							<groupId>org.eclipse.emf</groupId>
							<artifactId>org.eclipse.emf.mwe2.launch</artifactId>
							<version>${mwe2.version}</version>
						</dependency>
						<dependency>
							<groupId>org.eclipse.emf</groupId>
							<artifactId>org.eclipse.emf.mwe2.runtime</artifactId>
							<version>${mwe2.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<!-- run xtexttest xtext compiler -->
				<plugin>
					<groupId>org.eclipse.xtext</groupId>
					<artifactId>xtext-maven-plugin</artifactId>
					<version>${xtext.version}</version>
					<executions>
						<execution>
							<id>runXtextTest</id>
							<phase>none</phase>
							<goals>
								<goal>generate</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<languages>
							<language>
								<setup>at.jku.weiner.xtexttest.XtextTestStandaloneSetup</setup>
								<outputConfigurations>
									<outputConfiguration>
										<outputDirectory>${project.basedir}/src-gen/</outputDirectory>
									</outputConfiguration>
								</outputConfigurations>
							</language>
						</languages>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>at.jku.weiner.kefax</groupId>
							<artifactId>at.jku.weiner.xtexttest</artifactId>
							<version>${my.version}</version>
						</dependency>
						<dependency>
							<groupId>at.jku.weiner.kefax</groupId>
							<artifactId>at.jku.weiner.c.common</artifactId>
							<version>${my.version}</version>
						</dependency>
						<dependency>
							<groupId>at.jku.weiner.kefax</groupId>
							<artifactId>at.jku.weiner.c.common.ui.log.service</artifactId>
							<version>${my.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<!-- run xtend -->
				<plugin>
					<groupId>org.eclipse.xtend</groupId>
					<artifactId>xtend-maven-plugin</artifactId>
					<version>${xtext.version}</version>
					<executions>
						<execution>
							<id>xtend-maven-gen</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>compile</goal>
								<goal>xtend-install-debug-info</goal>
								<goal>testCompile</goal>
								<goal>xtend-test-install-debug-info</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<outputDirectory>xtend-gen</outputDirectory>
					</configuration>
				</plugin>
				<!-- run tycho test -->
				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>tycho-surefire-plugin</artifactId>
					<version>${tycho.version}</version>
					<executions>
						<!-- I really hate Maven for not allowing to share
						configurations without redundancies, see, e.g.,
						http://javamoods.blogspot.co.at/2009/03/maven-profiles-activation-or-not.html
						and I also hate Maven because it activates running plugins with
						default phases -->
						<execution>
							<id>default-test</id>
							<phase>none</phase>
						</execution>
						<execution>
							<id>run-eclipse-unit-tests</id>
							<!--
							<phase>none</phase>
							-->
							<goals>
								<goal>test</goal>
							</goals>
							
							<configuration>
								<failIfNoTests>true</failIfNoTests>
								<includes>
									<include>**/Test*.java</include>
									<include>**/*Test*.java</include>
									<include>**/*TestCase.java</include>
								</includes>
								<skip>${skip-tests-normal}</skip>
								<skipTests>${skip-tests-normal}</skipTests>
								<useUIHarness>false</useUIHarness>
							</configuration>
						</execution>
						<execution>
							<id>run-eclipse-gui-unit-tests</id>
							<!--
							<phase>none</phase>
							-->
							<goals>
								<goal>test</goal>
							</goals>
							
							<configuration>
								<failIfNoTests>false</failIfNoTests>
								<includes>
									<include>**/Test*.java</include>
									<include>**/*Test*.java</include>
									<include>**/*TestCase.java</include>
								</includes>
								<skip>${skip-gui-tests}</skip>
								<skipTests>${skip-gui-tests}</skipTests>
								<useUIHarness>true</useUIHarness>
							</configuration>
						</execution>
					</executions>
					
				</plugin>
			</plugins>
		</pluginManagement>
		
		<plugins>
			<!-- We build this project using Tycho: -->
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-maven-plugin</artifactId>
				<version>${tycho.version}</version>
				<extensions>true</extensions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>target-platform-configuration</artifactId>
				<version>${tycho.version}</version>
				<configuration>
					<environments>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86</arch>
						</environment>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86</arch>
						</environment>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>macosx</os>
							<ws>cocoa</ws>
							<arch>x86_64</arch>
						</environment>
					</environments>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
